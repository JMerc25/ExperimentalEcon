{smcl}
{txt}{sf}{ul off}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2\nonpara.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 Dec 2023, 15:50:14
{txt}
{com}. 
. ********************************/
. ********SECOND RUN TESTS********
. ********************************/
. 
. sort contest sessionid
{txt}
{com}. by contest: signrank x125=x175

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        33{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         3{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x125 = x175
{col 10}z = {res}{ralign 6:2.100}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0357}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0391}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      4{col 26}        21{col 38}        18
    {txt}Negative {c |}{res}{col 17}      4{col 26}        15{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x125 = x175
{col 10}z = {res}{ralign 6:0.420}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.6744}
{txt}{col 1}Exact prob = {res}{ralign 6:0.7422}
{txt}
{com}. by contest: signrank x225=x275

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        34{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         2{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x225 = x275
{col 10}z = {res}{ralign 6:2.240}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0251}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0234}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      3{col 26}        13{col 38}        18
    {txt}Negative {c |}{res}{col 17}      5{col 26}        23{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x225 = x275
{col 10}z = {res}{ralign 6:-0.700}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.4838}
{txt}{col 1}Exact prob = {res}{ralign 6:0.5469}
{txt}
{com}. by contest: signrank x1225=x1275

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        34{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         2{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x1225 = x1275
{col 10}z = {res}{ralign 6:2.240}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0251}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0234}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      3{col 26}        14{col 38}        18
    {txt}Negative {c |}{res}{col 17}      5{col 26}        22{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x1225 = x1275
{col 10}z = {res}{ralign 6:-0.560}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.5754}
{txt}{col 1}Exact prob = {res}{ralign 6:0.6406}
{txt}
{com}. by contest: signrank x110025=x110075

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      2{col 26}        11{col 38}      17.5
    {txt}Negative {c |}{res}{col 17}      5{col 26}        24{col 38}      17.5
        {txt}Zero {c |}{res}{col 17}      1{col 26}         1{col 38}         1
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}     -0.25
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     50.75

{txt}H0: x110025 = x110075
{col 10}z = {res}{ralign 6:-0.912}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.3615}
{txt}{col 1}Exact prob = {res}{ralign 6:0.4219}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      2{col 26}         7{col 38}      17.5
    {txt}Negative {c |}{res}{col 17}      5{col 26}        28{col 38}      17.5
        {txt}Zero {c |}{res}{col 17}      1{col 26}         1{col 38}         1
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}     -0.25
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     50.75

{txt}H0: x110025 = x110075
{col 10}z = {res}{ralign 6:-1.474}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.1405}
{txt}{col 1}Exact prob = {res}{ralign 6:0.1719}
{txt}
{com}. by contest: signrank x210025=x210075

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      0{col 26}         0{col 38}        18
    {txt}Negative {c |}{res}{col 17}      8{col 26}        36{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x210025 = x210075
{col 10}z = {res}{ralign 6:-2.521}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0117}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      2{col 26}         9{col 38}        18
    {txt}Negative {c |}{res}{col 17}      6{col 26}        27{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x210025 = x210075
{col 10}z = {res}{ralign 6:-1.260}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.2076}
{txt}{col 1}Exact prob = {res}{ralign 6:0.2500}
{txt}
{com}. by contest: signrank x1210025=x1210075

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      2{col 26}       6.5{col 38}        18
    {txt}Negative {c |}{res}{col 17}      6{col 26}      29.5{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}     -0.13
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     50.88

{txt}H0: x1210025 = x1210075
{col 10}z = {res}{ralign 6:-1.612}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.1069}
{txt}{col 1}Exact prob = {res}{ralign 6:0.1172}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      2{col 26}         9{col 38}        18
    {txt}Negative {c |}{res}{col 17}      6{col 26}        27{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x1210025 = x1210075
{col 10}z = {res}{ralign 6:-1.260}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.2076}
{txt}{col 1}Exact prob = {res}{ralign 6:0.2500}
{txt}
{com}. 
. by contest: signrank x125=x225

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        29{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         7{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x125 = x225
{col 10}z = {res}{ralign 6:1.540}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.1235}
{txt}{col 1}Exact prob = {res}{ralign 6:0.1484}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      5{col 26}        19{col 38}        18
    {txt}Negative {c |}{res}{col 17}      3{col 26}        17{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x125 = x225
{col 10}z = {res}{ralign 6:0.140}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.8886}
{txt}{col 1}Exact prob = {res}{ralign 6:0.9453}
{txt}
{com}. by contest: signrank x175=x275

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      3{col 26}        11{col 38}        18
    {txt}Negative {c |}{res}{col 17}      5{col 26}        25{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x175 = x275
{col 10}z = {res}{ralign 6:-0.980}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.3270}
{txt}{col 1}Exact prob = {res}{ralign 6:0.3828}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      3{col 26}        10{col 38}        18
    {txt}Negative {c |}{res}{col 17}      5{col 26}        26{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x175 = x275
{col 10}z = {res}{ralign 6:-1.120}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.2626}
{txt}{col 1}Exact prob = {res}{ralign 6:0.3125}
{txt}
{com}. 
. by contest: signrank change25=change75

{txt}{hline}
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      6{col 26}        25{col 38}        18
    {txt}Negative {c |}{res}{col 17}      2{col 26}        11{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}     -0.13
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     50.88

{txt}H0: change25 = change75
{col 10}z = {res}{ralign 6:0.981}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.3264}
{txt}{col 1}Exact prob = {res}{ralign 6:0.3672}

{txt}{hline}
-> contest = Lottery

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      2{col 26}         3{col 38}        18
    {txt}Negative {c |}{res}{col 17}      6{col 26}        33{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}     -0.13
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     50.88

{txt}H0: change25 = change75
{col 10}z = {res}{ralign 6:-2.103}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0355}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0313}
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2037                                         {txt}min = {res}        10
{txt}     Between = {res}0.0951                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1651                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.62866{col 26}{space 2} 5.635731{col 37}{space 1}   -3.84{col 46}{space 3}0.000{col 54}{space 4}-32.67449{col 67}{space 3}-10.58283
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 12.60962{col 26}{space 2} 4.003287{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} 4.763325{col 67}{space 3} 20.45592
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.848289{col 26}{space 2} 5.636506{col 37}{space 1}    1.75{col 46}{space 3}0.081{col 54}{space 4} -1.19906{col 67}{space 3} 20.89564
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-13.07432{col 26}{space 2}  .215295{col 37}{space 1}  -60.73{col 46}{space 3}0.000{col 54}{space 4}-13.49629{col 67}{space 3}-12.65235
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-6.251099{col 26}{space 2} .2136798{col 37}{space 1}  -29.25{col 46}{space 3}0.000{col 54}{space 4}-6.669904{col 67}{space 3}-5.832294
{txt}{space 9}11  {c |}{col 14}{res}{space 2} .2194068{col 26}{space 2} .2167097{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.2053364{col 67}{space 3}   .64415
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-14.51714{col 26}{space 2} .2189171{col 37}{space 1}  -66.31{col 46}{space 3}0.000{col 54}{space 4}-14.94621{col 67}{space 3}-14.08807
{txt}{space 9}13  {c |}{col 14}{res}{space 2} .0340119{col 26}{space 2} .2334322{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-.4235068{col 67}{space 3} .4915305
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-7.736819{col 26}{space 2} .2419127{col 37}{space 1}  -31.98{col 46}{space 3}0.000{col 54}{space 4}-8.210959{col 67}{space 3}-7.262678
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2}-1.831103{col 26}{space 2}  .233923{col 37}{space 1}   -7.83{col 46}{space 3}0.000{col 54}{space 4}-2.289584{col 67}{space 3}-1.372623
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  45.5148{col 26}{space 2} 5.654182{col 37}{space 1}    8.05{col 46}{space 3}0.000{col 54}{space 4} 34.43281{col 67}{space 3}  56.5968
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.531932
     {txt}sigma_e {c |} {res} 24.428128
         {txt}rho {c |} {res} .33997117{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0310                                         {txt}min = {res}        13
{txt}     Between = {res}0.1809                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0846                                         {txt}max = {res}        30

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-8.823015{col 26}{space 2} 2.707373{col 37}{space 1}   -3.26{col 46}{space 3}0.001{col 54}{space 4}-14.12937{col 67}{space 3}-3.516661
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 15.64664{col 26}{space 2} 6.305487{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} 3.288109{col 67}{space 3} 28.00516
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} .7617391{col 26}{space 2} 2.707106{col 37}{space 1}    0.28{col 46}{space 3}0.778{col 54}{space 4}-4.544092{col 67}{space 3}  6.06757
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 17.37971{col 26}{space 2} .0574491{col 37}{space 1}  302.52{col 46}{space 3}0.000{col 54}{space 4} 17.26711{col 67}{space 3} 17.49231
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-9.457426{col 26}{space 2} .0672525{col 37}{space 1} -140.63{col 46}{space 3}0.000{col 54}{space 4}-9.589238{col 67}{space 3}-9.325613
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 7.052316{col 26}{space 2}   .05702{col 37}{space 1}  123.68{col 46}{space 3}0.000{col 54}{space 4} 6.940559{col 67}{space 3} 7.164074
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-1.198003{col 26}{space 2} .0572216{col 37}{space 1}  -20.94{col 46}{space 3}0.000{col 54}{space 4}-1.310156{col 67}{space 3}-1.085851
{txt}{space 9}13  {c |}{col 14}{res}{space 2}-2.559409{col 26}{space 2} .0544918{col 37}{space 1}  -46.97{col 46}{space 3}0.000{col 54}{space 4}-2.666211{col 67}{space 3}-2.452607
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-11.53917{col 26}{space 2} .0600383{col 37}{space 1} -192.20{col 46}{space 3}0.000{col 54}{space 4}-11.65684{col 67}{space 3} -11.4215
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2} .8415434{col 26}{space 2} .0543048{col 37}{space 1}   15.50{col 46}{space 3}0.000{col 54}{space 4}  .735108{col 67}{space 3} .9479789
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 36.89935{col 26}{space 2} 2.515556{col 37}{space 1}   14.67{col 46}{space 3}0.000{col 54}{space 4} 31.96895{col 67}{space 3} 41.82975
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.820295
     {txt}sigma_e {c |} {res} 31.362447
         {txt}rho {c |} {res} .24406027{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1223                                         {txt}min = {res}        13
{txt}     Between = {res}0.1529                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1389                                         {txt}max = {res}        28

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-5.882275{col 26}{space 2} 3.203799{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4} -12.1616{col 67}{space 3} .3970548
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 10.74005{col 26}{space 2} 5.453056{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0522542{col 67}{space 3} 21.42784
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 15.58286{col 26}{space 2} 3.192418{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 54}{space 4} 9.325839{col 67}{space 3} 21.83989
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 5.564767{col 26}{space 2} .0909531{col 37}{space 1}   61.18{col 46}{space 3}0.000{col 54}{space 4} 5.386502{col 67}{space 3} 5.743032
{txt}{space 10}3  {c |}{col 14}{res}{space 2} .7650709{col 26}{space 2} .0590974{col 37}{space 1}   12.95{col 46}{space 3}0.000{col 54}{space 4} .6492421{col 67}{space 3} .8808996
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-7.437572{col 26}{space 2} .0175748{col 37}{space 1} -423.20{col 46}{space 3}0.000{col 54}{space 4}-7.472018{col 67}{space 3}-7.403126
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 17.36228{col 26}{space 2} .0237691{col 37}{space 1}  730.45{col 46}{space 3}0.000{col 54}{space 4} 17.31569{col 67}{space 3} 17.40887
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 4.723308{col 26}{space 2} .0177295{col 37}{space 1}  266.41{col 46}{space 3}0.000{col 54}{space 4} 4.688559{col 67}{space 3} 4.758057
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 19.62122{col 26}{space 2} .0262991{col 37}{space 1}  746.08{col 46}{space 3}0.000{col 54}{space 4} 19.56967{col 67}{space 3} 19.67276
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 12.94197{col 26}{space 2} .0224908{col 37}{space 1}  575.43{col 46}{space 3}0.000{col 54}{space 4} 12.89789{col 67}{space 3} 12.98606
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 29.78293{col 26}{space 2}  .953521{col 37}{space 1}   31.23{col 46}{space 3}0.000{col 54}{space 4} 27.91406{col 67}{space 3}  31.6518
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  20.48359
     {txt}sigma_e {c |} {res} 23.540113
         {txt}rho {c |} {res} .43090403{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0401                                         {txt}min = {res}        12
{txt}     Between = {res}0.1494                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0842                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.737756{col 26}{space 2} 4.139132{col 37}{space 1}    0.42{col 46}{space 3}0.675{col 54}{space 4}-6.374793{col 67}{space 3} 9.850305
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 13.42103{col 26}{space 2} 7.400565{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-1.083816{col 67}{space 3} 27.92587
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 8.921215{col 26}{space 2} 4.128025{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .8304354{col 67}{space 3} 17.01199
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 2.305278{col 26}{space 2}  .093803{col 37}{space 1}   24.58{col 46}{space 3}0.000{col 54}{space 4} 2.121428{col 67}{space 3} 2.489129
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-16.83406{col 26}{space 2} .0728976{col 37}{space 1} -230.93{col 46}{space 3}0.000{col 54}{space 4}-16.97693{col 67}{space 3}-16.69118
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-14.14342{col 26}{space 2} .0488577{col 37}{space 1} -289.48{col 46}{space 3}0.000{col 54}{space 4}-14.23918{col 67}{space 3}-14.04766
{txt}{space 10}5  {c |}{col 14}{res}{space 2} -2.74914{col 26}{space 2} .0235378{col 37}{space 1} -116.80{col 46}{space 3}0.000{col 54}{space 4}-2.795273{col 67}{space 3}-2.703007
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-14.11689{col 26}{space 2} .0236555{col 37}{space 1} -596.77{col 46}{space 3}0.000{col 54}{space 4}-14.16325{col 67}{space 3}-14.07052
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-2.829071{col 26}{space 2} .0416383{col 37}{space 1}  -67.94{col 46}{space 3}0.000{col 54}{space 4} -2.91068{col 67}{space 3}-2.747461
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 7.493147{col 26}{space 2} .0326429{col 37}{space 1}  229.55{col 46}{space 3}0.000{col 54}{space 4} 7.429168{col 67}{space 3} 7.557126
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 42.49708{col 26}{space 2} 2.131756{col 37}{space 1}   19.94{col 46}{space 3}0.000{col 54}{space 4} 38.31891{col 67}{space 3} 46.67524
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 20.396695
     {txt}sigma_e {c |} {res} 26.882051
         {txt}rho {c |} {res} .36536066{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table.txt, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{txt}(output written to {browse  `"table.txt"'})

{com}. esttab A B D E using table.tex, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01)
{res}{txt}(output written to {browse  `"table.tex"'})

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2037                                         {txt}min = {res}        10
{txt}     Between = {res}0.0951                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1651                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.62866{col 26}{space 2} 5.635731{col 37}{space 1}   -3.84{col 46}{space 3}0.000{col 54}{space 4}-32.67449{col 67}{space 3}-10.58283
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 12.60962{col 26}{space 2} 4.003287{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} 4.763325{col 67}{space 3} 20.45592
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.848289{col 26}{space 2} 5.636506{col 37}{space 1}    1.75{col 46}{space 3}0.081{col 54}{space 4} -1.19906{col 67}{space 3} 20.89564
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-13.07432{col 26}{space 2}  .215295{col 37}{space 1}  -60.73{col 46}{space 3}0.000{col 54}{space 4}-13.49629{col 67}{space 3}-12.65235
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-6.251099{col 26}{space 2} .2136798{col 37}{space 1}  -29.25{col 46}{space 3}0.000{col 54}{space 4}-6.669904{col 67}{space 3}-5.832294
{txt}{space 9}11  {c |}{col 14}{res}{space 2} .2194068{col 26}{space 2} .2167097{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.2053364{col 67}{space 3}   .64415
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-14.51714{col 26}{space 2} .2189171{col 37}{space 1}  -66.31{col 46}{space 3}0.000{col 54}{space 4}-14.94621{col 67}{space 3}-14.08807
{txt}{space 9}13  {c |}{col 14}{res}{space 2} .0340119{col 26}{space 2} .2334322{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-.4235068{col 67}{space 3} .4915305
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-7.736819{col 26}{space 2} .2419127{col 37}{space 1}  -31.98{col 46}{space 3}0.000{col 54}{space 4}-8.210959{col 67}{space 3}-7.262678
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2}-1.831103{col 26}{space 2}  .233923{col 37}{space 1}   -7.83{col 46}{space 3}0.000{col 54}{space 4}-2.289584{col 67}{space 3}-1.372623
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  45.5148{col 26}{space 2} 5.654182{col 37}{space 1}    8.05{col 46}{space 3}0.000{col 54}{space 4} 34.43281{col 67}{space 3}  56.5968
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.531932
     {txt}sigma_e {c |} {res} 24.428128
         {txt}rho {c |} {res} .33997117{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0310                                         {txt}min = {res}        13
{txt}     Between = {res}0.1809                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0846                                         {txt}max = {res}        30

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-8.823015{col 26}{space 2} 2.707373{col 37}{space 1}   -3.26{col 46}{space 3}0.001{col 54}{space 4}-14.12937{col 67}{space 3}-3.516661
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 15.64664{col 26}{space 2} 6.305487{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} 3.288109{col 67}{space 3} 28.00516
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} .7617391{col 26}{space 2} 2.707106{col 37}{space 1}    0.28{col 46}{space 3}0.778{col 54}{space 4}-4.544092{col 67}{space 3}  6.06757
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 17.37971{col 26}{space 2} .0574491{col 37}{space 1}  302.52{col 46}{space 3}0.000{col 54}{space 4} 17.26711{col 67}{space 3} 17.49231
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-9.457426{col 26}{space 2} .0672525{col 37}{space 1} -140.63{col 46}{space 3}0.000{col 54}{space 4}-9.589238{col 67}{space 3}-9.325613
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 7.052316{col 26}{space 2}   .05702{col 37}{space 1}  123.68{col 46}{space 3}0.000{col 54}{space 4} 6.940559{col 67}{space 3} 7.164074
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-1.198003{col 26}{space 2} .0572216{col 37}{space 1}  -20.94{col 46}{space 3}0.000{col 54}{space 4}-1.310156{col 67}{space 3}-1.085851
{txt}{space 9}13  {c |}{col 14}{res}{space 2}-2.559409{col 26}{space 2} .0544918{col 37}{space 1}  -46.97{col 46}{space 3}0.000{col 54}{space 4}-2.666211{col 67}{space 3}-2.452607
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-11.53917{col 26}{space 2} .0600383{col 37}{space 1} -192.20{col 46}{space 3}0.000{col 54}{space 4}-11.65684{col 67}{space 3} -11.4215
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2} .8415434{col 26}{space 2} .0543048{col 37}{space 1}   15.50{col 46}{space 3}0.000{col 54}{space 4}  .735108{col 67}{space 3} .9479789
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 36.89935{col 26}{space 2} 2.515556{col 37}{space 1}   14.67{col 46}{space 3}0.000{col 54}{space 4} 31.96895{col 67}{space 3} 41.82975
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.820295
     {txt}sigma_e {c |} {res} 31.362447
         {txt}rho {c |} {res} .24406027{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1223                                         {txt}min = {res}        13
{txt}     Between = {res}0.1529                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1389                                         {txt}max = {res}        28

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-5.882275{col 26}{space 2} 3.203799{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4} -12.1616{col 67}{space 3} .3970548
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 10.74005{col 26}{space 2} 5.453056{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0522542{col 67}{space 3} 21.42784
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 15.58286{col 26}{space 2} 3.192418{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 54}{space 4} 9.325839{col 67}{space 3} 21.83989
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 5.564767{col 26}{space 2} .0909531{col 37}{space 1}   61.18{col 46}{space 3}0.000{col 54}{space 4} 5.386502{col 67}{space 3} 5.743032
{txt}{space 10}3  {c |}{col 14}{res}{space 2} .7650709{col 26}{space 2} .0590974{col 37}{space 1}   12.95{col 46}{space 3}0.000{col 54}{space 4} .6492421{col 67}{space 3} .8808996
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-7.437572{col 26}{space 2} .0175748{col 37}{space 1} -423.20{col 46}{space 3}0.000{col 54}{space 4}-7.472018{col 67}{space 3}-7.403126
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 17.36228{col 26}{space 2} .0237691{col 37}{space 1}  730.45{col 46}{space 3}0.000{col 54}{space 4} 17.31569{col 67}{space 3} 17.40887
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 4.723308{col 26}{space 2} .0177295{col 37}{space 1}  266.41{col 46}{space 3}0.000{col 54}{space 4} 4.688559{col 67}{space 3} 4.758057
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 19.62122{col 26}{space 2} .0262991{col 37}{space 1}  746.08{col 46}{space 3}0.000{col 54}{space 4} 19.56967{col 67}{space 3} 19.67276
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 12.94197{col 26}{space 2} .0224908{col 37}{space 1}  575.43{col 46}{space 3}0.000{col 54}{space 4} 12.89789{col 67}{space 3} 12.98606
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 29.78293{col 26}{space 2}  .953521{col 37}{space 1}   31.23{col 46}{space 3}0.000{col 54}{space 4} 27.91406{col 67}{space 3}  31.6518
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  20.48359
     {txt}sigma_e {c |} {res} 23.540113
         {txt}rho {c |} {res} .43090403{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0401                                         {txt}min = {res}        12
{txt}     Between = {res}0.1494                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0842                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.737756{col 26}{space 2} 4.139132{col 37}{space 1}    0.42{col 46}{space 3}0.675{col 54}{space 4}-6.374793{col 67}{space 3} 9.850305
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 13.42103{col 26}{space 2} 7.400565{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-1.083816{col 67}{space 3} 27.92587
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 8.921215{col 26}{space 2} 4.128025{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .8304354{col 67}{space 3} 17.01199
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 2.305278{col 26}{space 2}  .093803{col 37}{space 1}   24.58{col 46}{space 3}0.000{col 54}{space 4} 2.121428{col 67}{space 3} 2.489129
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-16.83406{col 26}{space 2} .0728976{col 37}{space 1} -230.93{col 46}{space 3}0.000{col 54}{space 4}-16.97693{col 67}{space 3}-16.69118
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-14.14342{col 26}{space 2} .0488577{col 37}{space 1} -289.48{col 46}{space 3}0.000{col 54}{space 4}-14.23918{col 67}{space 3}-14.04766
{txt}{space 10}5  {c |}{col 14}{res}{space 2} -2.74914{col 26}{space 2} .0235378{col 37}{space 1} -116.80{col 46}{space 3}0.000{col 54}{space 4}-2.795273{col 67}{space 3}-2.703007
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-14.11689{col 26}{space 2} .0236555{col 37}{space 1} -596.77{col 46}{space 3}0.000{col 54}{space 4}-14.16325{col 67}{space 3}-14.07052
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-2.829071{col 26}{space 2} .0416383{col 37}{space 1}  -67.94{col 46}{space 3}0.000{col 54}{space 4} -2.91068{col 67}{space 3}-2.747461
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 7.493147{col 26}{space 2} .0326429{col 37}{space 1}  229.55{col 46}{space 3}0.000{col 54}{space 4} 7.429168{col 67}{space 3} 7.557126
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 42.49708{col 26}{space 2} 2.131756{col 37}{space 1}   19.94{col 46}{space 3}0.000{col 54}{space 4} 38.31891{col 67}{space 3} 46.67524
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 20.396695
     {txt}sigma_e {c |} {res} 26.882051
         {txt}rho {c |} {res} .36536066{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{txt}{p 0 4 2}
(file {bf}
table5.doc{rm}
not found)
{p_end}
(output written to {browse  `"table5.doc"'})

{com}. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01)
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. drop if part==3 & Period<=10
{txt}(1,280 observations deleted)

{com}. drop if part==4 & Period<=30
{txt}(1,280 observations deleted)

{com}. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1986                                         {txt}min = {res}         4
{txt}     Between = {res}0.1279                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1521                                         {txt}max = {res}        15

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.40468{col 26}{space 2} 7.279035{col 37}{space 1}   -2.94{col 46}{space 3}0.003{col 54}{space 4}-35.67133{col 67}{space 3}-7.138037
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 141.3635{col 26}{space 2} 98.38833{col 37}{space 1}    1.44{col 46}{space 3}0.151{col 54}{space 4}-51.47406{col 67}{space 3} 334.2011
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 6.568863{col 26}{space 2} 7.288668{col 37}{space 1}    0.90{col 46}{space 3}0.367{col 54}{space 4}-7.716663{col 67}{space 3} 20.85439
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-5.391003{col 26}{space 2}  .285323{col 37}{space 1}  -18.89{col 46}{space 3}0.000{col 54}{space 4}-5.950225{col 67}{space 3} -4.83178
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-4.710472{col 26}{space 2}  .266715{col 37}{space 1}  -17.66{col 46}{space 3}0.000{col 54}{space 4}-5.233223{col 67}{space 3} -4.18772
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 6.842137{col 26}{space 2} .2794054{col 37}{space 1}   24.49{col 46}{space 3}0.000{col 54}{space 4} 6.294512{col 67}{space 3} 7.389761
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-12.11768{col 26}{space 2} .2634262{col 37}{space 1}  -46.00{col 46}{space 3}0.000{col 54}{space 4}-12.63399{col 67}{space 3}-11.60138
{txt}{space 9}13  {c |}{col 14}{res}{space 2} 5.847175{col 26}{space 2} .3050671{col 37}{space 1}   19.17{col 46}{space 3}0.000{col 54}{space 4} 5.249254{col 67}{space 3} 6.445095
{txt}{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}15  {c |}{col 14}{res}{space 2} 10.49505{col 26}{space 2} .5926098{col 37}{space 1}   17.71{col 46}{space 3}0.000{col 54}{space 4} 9.333555{col 67}{space 3} 11.65654
{txt}{space 9}16  {c |}{col 14}{res}{space 2}  7.04575{col 26}{space 2} .4995589{col 37}{space 1}   14.10{col 46}{space 3}0.000{col 54}{space 4} 6.066632{col 67}{space 3} 8.024867
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 28.93271{col 26}{space 2} 11.92677{col 37}{space 1}    2.43{col 46}{space 3}0.015{col 54}{space 4} 5.556681{col 67}{space 3} 52.30875
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 19.534614
     {txt}sigma_e {c |} {res} 23.571111
         {txt}rho {c |} {res} .40717219{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0368                                         {txt}min = {res}         5
{txt}     Between = {res}0.2074                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1176                                         {txt}max = {res}        16

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-10.38391{col 26}{space 2} 3.835305{col 37}{space 1}   -2.71{col 46}{space 3}0.007{col 54}{space 4}-17.90097{col 67}{space 3}-2.866848
{txt}{space 9}inv {c |}{col 14}{res}{space 2}-162.4711{col 26}{space 2} 120.9388{col 37}{space 1}   -1.34{col 46}{space 3}0.179{col 54}{space 4}-399.5068{col 67}{space 3} 74.56456
{txt}{space 5}first20 {c |}{col 14}{res}{space 2}-.8888838{col 26}{space 2} 3.840584{col 37}{space 1}   -0.23{col 46}{space 3}0.817{col 54}{space 4}-8.416289{col 67}{space 3} 6.638522
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 25.35133{col 26}{space 2}  .062922{col 37}{space 1}  402.90{col 46}{space 3}0.000{col 54}{space 4}   25.228{col 67}{space 3} 25.47465
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-12.42653{col 26}{space 2} .1040908{col 37}{space 1} -119.38{col 46}{space 3}0.000{col 54}{space 4}-12.63054{col 67}{space 3}-12.22251
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 18.43695{col 26}{space 2} .0541464{col 37}{space 1}  340.50{col 46}{space 3}0.000{col 54}{space 4} 18.33083{col 67}{space 3} 18.54308
{txt}{space 9}12  {c |}{col 14}{res}{space 2} 6.480404{col 26}{space 2}  .074615{col 37}{space 1}   86.85{col 46}{space 3}0.000{col 54}{space 4} 6.334161{col 67}{space 3} 6.626646
{txt}{space 9}13  {c |}{col 14}{res}{space 2}-2.175681{col 26}{space 2}  .075506{col 37}{space 1}  -28.81{col 46}{space 3}0.000{col 54}{space 4} -2.32367{col 67}{space 3}-2.027692
{txt}{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}15  {c |}{col 14}{res}{space 2} 4.884359{col 26}{space 2} .1254978{col 37}{space 1}   38.92{col 46}{space 3}0.000{col 54}{space 4} 4.638388{col 67}{space 3}  5.13033
{txt}{space 9}16  {c |}{col 14}{res}{space 2} 13.74117{col 26}{space 2} .0984143{col 37}{space 1}  139.63{col 46}{space 3}0.000{col 54}{space 4} 13.54828{col 67}{space 3} 13.93406
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 42.84467{col 26}{space 2}  8.52904{col 37}{space 1}    5.02{col 46}{space 3}0.000{col 54}{space 4} 26.12806{col 67}{space 3} 59.56128
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 19.467196
     {txt}sigma_e {c |} {res} 30.456605
         {txt}rho {c |} {res}  .2900494{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0613                                         {txt}min = {res}         5
{txt}     Between = {res}0.2072                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1446                                         {txt}max = {res}        15

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-3.635024{col 26}{space 2} 2.687426{col 37}{space 1}   -1.35{col 46}{space 3}0.176{col 54}{space 4}-8.902283{col 67}{space 3} 1.632235
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 127.8625{col 26}{space 2} 107.6376{col 37}{space 1}    1.19{col 46}{space 3}0.235{col 54}{space 4}-83.10332{col 67}{space 3} 338.8283
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.842368{col 26}{space 2} 2.684599{col 37}{space 1}    3.67{col 46}{space 3}0.000{col 54}{space 4}  4.58065{col 67}{space 3} 15.10409
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 1.038414{col 26}{space 2} .1799422{col 37}{space 1}    5.77{col 46}{space 3}0.000{col 54}{space 4} .6857342{col 67}{space 3} 1.391095
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-10.95973{col 26}{space 2}  .037926{col 37}{space 1} -288.98{col 46}{space 3}0.000{col 54}{space 4}-11.03407{col 67}{space 3} -10.8854
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-13.56664{col 26}{space 2} .0332645{col 37}{space 1} -407.84{col 46}{space 3}0.000{col 54}{space 4}-13.63184{col 67}{space 3}-13.50144
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 14.03819{col 26}{space 2} .0765237{col 37}{space 1}  183.45{col 46}{space 3}0.000{col 54}{space 4} 13.88821{col 67}{space 3} 14.18817
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 1.963036{col 26}{space 2} .0363477{col 37}{space 1}   54.01{col 46}{space 3}0.000{col 54}{space 4} 1.891796{col 67}{space 3} 2.034276
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 20.42393{col 26}{space 2} .0867577{col 37}{space 1}  235.41{col 46}{space 3}0.000{col 54}{space 4} 20.25389{col 67}{space 3} 20.59397
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 6.470266{col 26}{space 2} .0659008{col 37}{space 1}   98.18{col 46}{space 3}0.000{col 54}{space 4} 6.341103{col 67}{space 3}  6.59943
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 26.78955{col 26}{space 2}  6.82284{col 37}{space 1}    3.93{col 46}{space 3}0.000{col 54}{space 4} 13.41703{col 67}{space 3} 40.16207
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 22.356588
     {txt}sigma_e {c |} {res} 21.954748
         {txt}rho {c |} {res}  .5090678{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0095                                         {txt}min = {res}         5
{txt}     Between = {res}0.2486                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1335                                         {txt}max = {res}        15

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.508044{col 26}{space 2} 2.689616{col 37}{space 1}    0.56{col 46}{space 3}0.575{col 54}{space 4}-3.763508{col 67}{space 3} 6.779595
{txt}{space 9}inv {c |}{col 14}{res}{space 2}-99.27582{col 26}{space 2} 78.88733{col 37}{space 1}   -1.26{col 46}{space 3}0.208{col 54}{space 4}-253.8921{col 67}{space 3}  55.3405
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 3.865206{col 26}{space 2} 2.692384{col 37}{space 1}    1.44{col 46}{space 3}0.151{col 54}{space 4} -1.41177{col 67}{space 3} 9.142182
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 1.916991{col 26}{space 2} .2672851{col 37}{space 1}    7.17{col 46}{space 3}0.000{col 54}{space 4} 1.393122{col 67}{space 3}  2.44086
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-30.25673{col 26}{space 2} .0965104{col 37}{space 1} -313.51{col 46}{space 3}0.000{col 54}{space 4}-30.44589{col 67}{space 3}-30.06757
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-26.57042{col 26}{space 2} .0758656{col 37}{space 1} -350.23{col 46}{space 3}0.000{col 54}{space 4}-26.71911{col 67}{space 3}-26.42172
{txt}{space 10}5  {c |}{col 14}{res}{space 2}-9.063244{col 26}{space 2} .1073224{col 37}{space 1}  -84.45{col 46}{space 3}0.000{col 54}{space 4}-9.273592{col 67}{space 3}-8.852896
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-23.04157{col 26}{space 2} .1089329{col 37}{space 1} -211.52{col 46}{space 3}0.000{col 54}{space 4}-23.25508{col 67}{space 3}-22.82807
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-7.630998{col 26}{space 2}  .147207{col 37}{space 1}  -51.84{col 46}{space 3}0.000{col 54}{space 4}-7.919518{col 67}{space 3}-7.342477
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 2.966821{col 26}{space 2} .1223549{col 37}{space 1}   24.25{col 46}{space 3}0.000{col 54}{space 4}  2.72701{col 67}{space 3} 3.206633
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 56.71888{col 26}{space 2} 5.617765{col 37}{space 1}   10.10{col 46}{space 3}0.000{col 54}{space 4} 45.70827{col 67}{space 3}  67.7295
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  22.18181
     {txt}sigma_e {c |} {res} 25.267784
         {txt}rho {c |} {res} .43523706{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{err}{p 0 4 2}
file {bf:{err}table5.doc}
is read-only; cannot be modified or erased
{p_end}
{txt}{search r(608), local:r(608);}

end of do-file

{search r(608), local:r(608);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear all 
{res}{txt}
{com}. /*desktop directory
> cd "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2"
> */
. *laptop directory
. cd "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2"
{res}C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2
{txt}
{com}. 
. *school computer directory
. 
. *Start
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(8 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(2 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. 
. ****************************************
. *************REPLICATION****************
. ****************************************
. 
. *******************
. ******FIGURE 1*****
. *******************
. 
. *****TREATMENTS***
. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x1hat x1eq, by(contest alpha)
{res}{txt}
{com}. 
. gen time=1
{txt}
{com}. rename x1hat observed
{res}{txt}
{com}. rename x1eq equilibrium
{res}{txt}
{com}. 
. save d1, replace
{txt}{p 0 4 2}
file {bf}
d1.dta{rm}
saved
{p_end}

{com}. 
. **Step 2**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x2hat x2eq, by(contest alpha)
{res}{txt}
{com}. 
. gen time=2
{txt}
{com}. rename x2hat observed
{res}{txt}
{com}. rename x2eq equilibrium
{res}{txt}
{com}. 
. save d2, replace
{txt}{p 0 4 2}
file {bf}
d2.dta{rm}
saved
{p_end}

{com}. 
. **Step 3**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x12hat x12eq, by(contest alpha)
{res}{txt}
{com}. gen time=3
{txt}
{com}. rename x12hat observed
{res}{txt}
{com}. rename x12eq equilibrium
{res}{txt}
{com}. 
. save d12, replace
{txt}{p 0 4 2}
file {bf}
d12.dta{rm}
saved
{p_end}

{com}. 
. append using d1
{txt}
{com}. append using d2
{txt}
{com}. 
. gen a25=1 if alpha==0.25
{txt}(6 missing values generated)

{com}. replace a25=2 if alpha==0.75
{txt}(6 real changes made)

{com}. gen alphag=1 if alpha==0.25
{txt}(6 missing values generated)

{com}. replace alphag=2 if alpha==0.75
{txt}(6 real changes made)

{com}. gen timeg=1 if time==1
{txt}(8 missing values generated)

{com}. replace timeg=2 if time==2
{txt}(4 real changes made)

{com}. replace timeg=3 if time==3
{txt}(4 real changes made)

{com}. 
. label var observed "Observed"
{txt}
{com}. label var equilibrium "Equilibrium"
{txt}
{com}. 
. save treatments, replace
{txt}{p 0 4 2}
file {bf}
treatments.dta{rm}
saved
{p_end}

{com}. 
. sort time
{txt}
{com}. *label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "
. label define a25 0 " " 1 "alpha=0.25" 2 "0.75" 3 " "
{txt}
{com}. label define time 1 "Type A - Round 1" 2 "Type B - Round 1" 3 "Type A - Round 2"
{txt}
{com}. label val timeg time
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. format observed %9.2f
{txt}
{com}. format equilibrium %9.2f
{txt}
{com}. 
. *All Pay
. twoway scatter observed equilibrium alphag if contest=="All Pay Auction", ///
> by(timeg, cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabposition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1APA, replace)
{res}{txt}file {bf:fig1APA.gph} saved

{com}. graph use fig1APA
{res}{txt}
{com}. graph export fig1APA.pdf, replace
{txt}{p 0 4 2}
file {bf}
fig1APA.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *Lottery
. twoway scatter observed equilibrium alphag if contest=="Lottery", ///
> by(timeg , cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabposition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1Lott, replace)
{res}{txt}file {bf:fig1Lott.gph} saved

{com}. graph use fig1Lott
{res}{txt}
{com}. graph export fig1Lott.pdf, replace
{txt}{p 0 4 2}
file {bf}
fig1Lott.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *******************
. ******FIGURE 2*****
. *******************
. 
. *****HISTOGRAMS****
. clear 
{txt}
{com}. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. *Type A*
.    hist x1hat if Type==1 & lottery==0 & alpha==0.25, ///
>      xline(75) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.25") col(blue) lc(black) saving(1APA25, replace) 
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1APA25.gph} saved

{com}.    hist x1hat if Type==1 & lottery==0 & alpha==0.75, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.75") col(blue) lc(black) saving(1APA75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1APA75.gph} saved

{com}.    hist x1hat if Type==1 & lottery==1 & alpha==0.25, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.25") col(blue) lc(black) saving(1Lott25, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1Lott25.gph} saved

{com}.    hist x1hat if Type==1 & lottery==1 & alpha==0.75, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.75") col(blue) lc(black) saving(1Lott75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1Lott75.gph} saved

{com}. 
. gr combine 1APA25.gph 1APA75.gph 1Lott25.gph 1Lott75.gph, saving(1hist, replace)
{res}{txt}file {bf:1hist.gph} saved

{com}.           graph use 1hist
{res}{txt}
{com}.       graph export Fig21.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig21.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *Type B*
.    hist x2hat if Type==1 & lottery==0 & alpha==0.25, /// 
>      xline(75) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.25") col(blue) lc(black) saving(2APA25, replace) 
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:2APA25.gph} saved

{com}.    hist x2hat if Type==1 & lottery==0 & alpha==0.75, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.75") col(blue) lc(black) saving(2APA75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:2APA75.gph} saved

{com}.    hist x2hat if Type==1 & lottery==1 & alpha==0.25, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.25") col(blue) lc(black) saving(2Lott25, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:2Lott25.gph} saved

{com}.    hist x2hat if Type==1 & lottery==1 & alpha==0.75, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.75") col(blue) lc(black) saving(2Lott75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:2Lott75.gph} saved

{com}. 
. gr combine 2APA25.gph 2APA75.gph 2Lott25.gph 2Lott75.gph, saving(2hist, replace)
{res}{txt}file {bf:2hist.gph} saved

{com}.           graph use 2hist
{res}{txt}
{com}.       graph export Fig22.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig22.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *******************
. ******FIGURE 3*****
. *******************
. 
. *****BOX PLOTS*****
. clear 
{txt}
{com}.           
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. drop if periodt<11
{txt}(2,560 observations deleted)

{com}. 
. sort lottery Type alpha subjectid
{txt}
{com}. by lottery Type alpha subjectid: egen med_x=median(x)
{txt}
{com}. by lottery Type alpha subjectid: egen lqt_x = pctile(x), p(25)
{txt}
{com}. by lottery Type alpha subjectid: egen uqt_x = pctile(x), p(75)
{txt}
{com}. by lottery Type alpha subjectid: egen iqr_x = iqr(x)
{txt}
{com}. by lottery Type alpha subjectid: egen mean_x = mean(x)
{txt}
{com}. by lottery Type alpha subjectid: egen sd_x = sd(x)
{txt}(4 missing values generated)

{com}. 
. by lottery Type alpha subjectid: egen ls_x = min(max(x, lqt_x-1.5*iqr_x))
{txt}
{com}. by lottery Type alpha subjectid: egen us_x = max(min(x, uqt_x+1.5*iqr_x))
{txt}
{com}. gen coeff_var=sd_x/mean_x
{txt}(168 missing values generated)

{com}. 
. gen out_x = x if(x<=lqt_x-1.5*iqr_x | x>=uqt_x+1.5*iqr_x)
{txt}(1,594 missing values generated)

{com}. 
. sort lottery Type alpha mean_x subjectid
{txt}
{com}. egen mean_id=group(lottery Type alpha mean_x subjectid)
{txt}
{com}. 
. by lottery Type alpha: egen min_id=min(mean_id)
{txt}
{com}. gen mean_id_scale=mean_id-min_id+1
{txt}
{com}. 
. label var mean_id_scale "Subject rank (low to high mean)"
{txt}
{com}. label var x "Exp."
{txt}
{com}. 
. *LOTTERY*
. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.25 & Type==1, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.25", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure") ylabel(0(25)100) name(typeA_025_subj, replace)
{res}{txt}
{com}.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.25 & Type==2, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.25", si(medium)) yline(25, lc(blue)) ///        
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_025_subj, replace)
{res}{txt}
{com}. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.75 & Type==1, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeA_075_subj, replace)
{res}{txt}
{com}.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.75 & Type==2, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_075_subj, replace)
{res}{txt}
{com}. 
. graph combine typeA_025_subj typeA_075_subj typeB_025_subj typeB_075_subj, name(box_subj, replace)
{res}{txt}
{com}. graph export Fig3A.jpg, replace
{res}{txt}file {bf:Fig3A.jpg} written in JPEG format

{com}. 
. *ALL-PAY*
. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.25 & Type==1, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.25", si(medium)) yline(75, lc(blue)) ///
>                 ytitle("Expenditure") ylabel(0(25)100) name(typeA_025_subj_apa, replace)
{res}{txt}
{com}.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.25 & Type==2, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.25", si(medium)) yline(75, lc(blue)) ///        
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_025_subj_apa, replace)
{res}{txt}
{com}. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.75 & Type==1, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeA_075_subj_apa, replace)
{res}{txt}
{com}.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(black)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)   || ///
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.75 & Type==2, ms(circle) mcolor(blue) mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, legend(off) ms(diamond) mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_075_subj_apa, replace)
{res}{txt}
{com}. 
. *graph combine typeA_025_subj typeA_075_subj typeB_025_subj typeB_075_subj, name(box_subj_apa, replace)
. *graph export box_subj_apa.jpg, replace
. 
. graph combine typeA_025_subj_apa typeA_025_subj typeA_075_subj_apa typeA_075_subj, name(box_typeA, replace)
{res}{txt}
{com}. graph export box_typeA.pdf, replace
{txt}{p 0 4 2}
file {bf}
box_typeA.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. graph combine typeB_025_subj_apa typeB_025_subj typeB_075_subj_apa typeB_075_subj, name(box_typeB, replace)
{res}{txt}
{com}. graph export Fig3B.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig3B.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *******************
. ******FIGURE 4*****
. *******************
. clear    
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. gen change=.
{txt}(5,120 missing values generated)

{com}. replace change=0 if Type==1 & x12==.
{txt}(530 real changes made)

{com}. replace change=1 if Type==1 & x12~=.
{txt}(2,030 real changes made)

{com}. 
. gen reduce=0
{txt}
{com}. replace reduce=1 if Type==1 & x12hat<x1hat
{txt}(1,065 real changes made)

{com}. 
. gen raise=0
{txt}
{com}. replace raise=1 if Type==1 & x12hat>x1hat
{txt}(965 real changes made)

{com}. 
. gen rationalrev=0
{txt}
{com}. replace rationalrev=1 if x1hat~=br1
{txt}(4,999 real changes made)

{com}. *replace rationalrev=1 if x2hat & lottery==1
. 
. gen overbid=1
{txt}
{com}. replace overbid=0 if x1hat<=br1  
{txt}(1,540 real changes made)

{com}. 
. gen underbid=0
{txt}
{com}. replace underbid=1 if x1hat<br1 
{txt}(1,419 real changes made)

{com}. 
. gen ahead=0
{txt}
{com}. replace ahead=1 if x1hat>x2hat
{txt}(2,544 real changes made)

{com}. 
. gen onedisttoother=x1hat-x2hat
{txt}
{com}. gen twodisttoother=x12hat-x2hat
{txt}
{com}. 
. gen irr_nochange=0 
{txt}
{com}. replace irr_nochange=1 if changehat==0 & rationalrev==1
{txt}(956 real changes made)

{com}. 
. gen irr_rev_dec=0
{txt}
{com}. replace irr_rev_dec=1 if irr_nochange==1
{txt}(956 real changes made)

{com}. replace irr_rev_dec=1 if changehat==1 & x1hat==br1
{txt}(17 real changes made)

{com}. 
. 
. label var rationalrev "Revising is rational"
{txt}
{com}. label var changehat "Subject revised"
{txt}
{com}. label var irr_nochange "No change even though was rational"
{txt}
{com}. 
. sort contest alpha
{txt}
{com}. collapse changehat rationalrev, by(contest alpha)
{res}{txt}
{com}. 
. sort contest
{txt}
{com}. gen low=1 if alpha==0.25
{txt}(2 missing values generated)

{com}. replace low=4 if alpha==0.75
{txt}(2 real changes made)

{com}. gen low1=2 if alpha==0.25
{txt}(2 missing values generated)

{com}. replace low1=5 if alpha==0.75
{txt}(2 real changes made)

{com}. 
. label var changehat "Actual revision"
{txt}
{com}. label var rationalrev "Rational revision"
{txt}
{com}. 
. twoway  (bar changehat low, barw(1) bcolor(blue)) ///
> (bar rationalrev low1, barw(1) bcolor(gray)), ///
> ytitle("Fraction") ylabel(0(0.2)1) xlabel(1.5 "alpha=0.25" 4.5 "alpha=0.75") by(contest, note(""))  ///
> saving(revision, replace)
{res}{txt}file {bf:revision.gph} saved

{com}. graph use revision
{res}{txt}
{com}. graph export Fig4.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig4.pdf{rm}
saved as
PDF
format
{p_end}

{com}.           
. *******************
. ******FIGURE 5*****
. *******************
. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. 
. *Period >10 & <=20 & Period >30
. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. keep if Type==1
{txt}(2,560 observations deleted)

{com}. keep if lottery==0
{txt}(1,280 observations deleted)

{com}. 
. *keep if changehat==1
. 
. *keep if validriskloss==1
. 
. gen a25=1 if alpha==0.25
{txt}(640 missing values generated)

{com}. replace a25=2 if alpha==0.75
{txt}(640 real changes made)

{com}. gen alphag=1 if alpha==0.25
{txt}(640 missing values generated)

{com}. replace alphag=2 if alpha==0.75
{txt}(640 real changes made)

{com}. 
. label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. 
. 
. **************************
. ***(a) All observations***
. **************************
. label var br1 "Best Response"
{txt}
{com}. label var x12hat "Observations"
{txt}
{com}. twoway (scatter br1 x2hat, legend(off) ms(X) mfc(none) mlc(red) msize(vlarge)) ///
> (scatter x12hat x2hat, legend(off) ms(circle) mfc(none) mlc(black) mlw(medium) ytitle("Type A - Round 2")) if lottery==0, ///
> by(alphag, note("")) saving("bra_brall", replace) 
{res}{txt}file {bf:bra_brall.gph} saved

{com}. graph use bra_brall
{res}{txt}
{com}. graph export Fig5b.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig5b.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *****************************
. ***(b) Revised Expenditure***
. *****************************
. label var br1 "Best Response"
{txt}
{com}. label var x12hat "Observations"
{txt}
{com}. twoway (scatter br1 x2hat if changehat==1, legend(off) ms(X) mfc(none) mlc(red) msize(vlarge)) ///
> (scatter x12hat x2hat if changehat==1, legend(off) ms(circle) mfc(none) mlc(black) mlw(medium) ytitle("Type A - Round 2")), ///
> by(alphag, note("")) saving("bra_brch", replace) 
{res}{txt}file {bf:bra_brch.gph} saved

{com}. graph use bra_brch
{res}{txt}
{com}. graph export Fig5b.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig5b.pdf{rm}
saved as
PDF
format
{p_end}

{com}.   
. *******************
. ******FIGURE 6*****
. *******************
. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. 
. *keep if changehat==1
. 
. *Period >10 & <=20 & Period >30
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. keep if lottery==1
{txt}(2,560 observations deleted)

{com}. keep if Type==1
{txt}(1,280 observations deleted)

{com}. sum match2

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}match2 {c |}{res}      1,280     .046875    .2114537          0          1
{txt}
{com}. 
. *gen direction=0
. *replace direction=1 if diff_br_1>diff_br_2
. *replace direction=1 if  diff_br_1==diff_br_2 & diff_br_1==0
. 
. gen outspend2=0
{txt}
{com}. replace outspend2=1 if x12hat>=x2hat
{txt}(927 real changes made)

{com}. sum outspend2

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 3}outspend2 {c |}{res}      1,280    .7242188    .4470818          0          1
{txt}
{com}. gen slightoutspend2=0
{txt}
{com}. replace slightoutspend2=1 if x12hat-x2hat>=0.01 
{txt}(796 real changes made)

{com}. replace slightoutspend2=0 if x12hat-x2hat>5
{txt}(551 real changes made)

{com}. sum slightoutspend2

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
slightouts~2 {c |}{res}      1,280    .1914063    .3935618          0          1
{txt}
{com}. 
. gen sqrtx2hat=sqrt(x2hat)
{txt}
{com}. gen x2hatsq=x2hat*x2hat
{txt}
{com}. 
. egen xjowbar=mean(xjow)
{txt}
{com}. 
. 
. *alpha=0.25
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25, i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1541                                         {txt}min = {res}         5
{txt}     Between = {res}0.0050                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.0905                                         {txt}max = {res}        16

                                                {txt}Wald chi2({res}3{txt})      =  {res}    58.02
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}      x12hat{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}x2hat {c |}{col 14}{res}{space 2}-.5496476{col 26}{space 2} .1381015{col 37}{space 1}   -3.98{col 46}{space 3}0.000{col 54}{space 4}-.8203214{col 67}{space 3}-.2789737
{txt}{space 3}sqrtx2hat {c |}{col 14}{res}{space 2} 8.503715{col 26}{space 2} 1.432925{col 37}{space 1}    5.93{col 46}{space 3}0.000{col 54}{space 4} 5.695233{col 67}{space 3}  11.3122
{txt}{space 9}inv {c |}{col 14}{res}{space 2}  8.08702{col 26}{space 2} 6.851729{col 37}{space 1}    1.18{col 46}{space 3}0.238{col 54}{space 4}-5.342123{col 67}{space 3} 21.51616
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 16.23312{col 26}{space 2} 4.363813{col 37}{space 1}    3.72{col 46}{space 3}0.000{col 54}{space 4} 7.680207{col 67}{space 3} 24.78604
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 19.974798
     {txt}sigma_e {c |} {res} 26.665094
         {txt}rho {c |} {res} .35944634{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. *reg x12hat x2hat x2hatsq inv if alpha==0.25, vce(cluster subjectid)
. est store A
{txt}
{com}. *predict xbr25 if alpha==0.25
. gen xbr25=_b[_cons]+_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat
{txt}
{com}. *gen xbr25=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. *alpha=0.75
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.75,  i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2254                                         {txt}min = {res}         4
{txt}     Between = {res}0.1085                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1848                                         {txt}max = {res}        17

                                                {txt}Wald chi2({res}3{txt})      =  {res}   254.55
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}      x12hat{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}x2hat {c |}{col 14}{res}{space 2}-.7994133{col 26}{space 2} .1344883{col 37}{space 1}   -5.94{col 46}{space 3}0.000{col 54}{space 4}-1.063005{col 67}{space 3}-.5358212
{txt}{space 3}sqrtx2hat {c |}{col 14}{res}{space 2}  11.4271{col 26}{space 2} 1.245723{col 37}{space 1}    9.17{col 46}{space 3}0.000{col 54}{space 4} 8.985531{col 67}{space 3} 13.86867
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 17.98433{col 26}{space 2} 1.531107{col 37}{space 1}   11.75{col 46}{space 3}0.000{col 54}{space 4} 14.98342{col 67}{space 3} 20.98525
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 11.77709{col 26}{space 2} 4.983728{col 37}{space 1}    2.36{col 46}{space 3}0.018{col 54}{space 4} 2.009159{col 67}{space 3} 21.54501
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 19.466571
     {txt}sigma_e {c |} {res}  25.60477
         {txt}rho {c |} {res} .36629143{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store B
{txt}
{com}. *predict xbr75 if alpha==0.75
. gen xbr75=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat
{txt}
{com}. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25 & changehat==1,  i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       434
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        60

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2216                                         {txt}min = {res}         1
{txt}     Between = {res}0.2036                                         {txt}avg = {res}       7.2
{txt}     Overall = {res}0.1870                                         {txt}max = {res}        15

                                                {txt}Wald chi2({res}3{txt})      =  {res}   109.89
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}      x12hat{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}x2hat {c |}{col 14}{res}{space 2}-.6214736{col 26}{space 2} .2528202{col 37}{space 1}   -2.46{col 46}{space 3}0.014{col 54}{space 4}-1.116992{col 67}{space 3}-.1259551
{txt}{space 3}sqrtx2hat {c |}{col 14}{res}{space 2} 10.16473{col 26}{space 2} 2.343644{col 37}{space 1}    4.34{col 46}{space 3}0.000{col 54}{space 4} 5.571275{col 67}{space 3} 14.75819
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 9.185786{col 26}{space 2} 8.942919{col 37}{space 1}    1.03{col 46}{space 3}0.304{col 54}{space 4}-8.342014{col 67}{space 3} 26.71359
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 8.094571{col 26}{space 2} 4.665199{col 37}{space 1}    1.74{col 46}{space 3}0.083{col 54}{space 4} -1.04905{col 67}{space 3} 17.23819
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 18.754565
     {txt}sigma_e {c |} {res} 26.827845
         {txt}rho {c |} {res} .32827302{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store C
{txt}
{com}. *predict xbr75 if alpha==0.75
. gen xbr25_rev=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat
{txt}
{com}. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.75 & changehat==1,  i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       476
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        63

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2665                                         {txt}min = {res}         1
{txt}     Between = {res}0.2733                                         {txt}avg = {res}       7.6
{txt}     Overall = {res}0.2384                                         {txt}max = {res}        13

                                                {txt}Wald chi2({res}3{txt})      =  {res}   219.70
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}      x12hat{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}x2hat {c |}{col 14}{res}{space 2}-.6550246{col 26}{space 2} .1310692{col 37}{space 1}   -5.00{col 46}{space 3}0.000{col 54}{space 4}-.9119155{col 67}{space 3}-.3981336
{txt}{space 3}sqrtx2hat {c |}{col 14}{res}{space 2} 10.76415{col 26}{space 2} 1.085404{col 37}{space 1}    9.92{col 46}{space 3}0.000{col 54}{space 4} 8.636801{col 67}{space 3} 12.89151
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 11.99457{col 26}{space 2} 3.535731{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} 5.064662{col 67}{space 3} 18.92447
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 10.57784{col 26}{space 2} 5.153371{col 37}{space 1}    2.05{col 46}{space 3}0.040{col 54}{space 4} .4774191{col 67}{space 3} 20.67826
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  18.59713
     {txt}sigma_e {c |} {res} 24.950564
         {txt}rho {c |} {res} .35714479{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store D
{txt}
{com}. *predict xbr75 if alpha==0.75
. gen xbr75_rev=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat
{txt}
{com}. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. 
. 
. esttab A B C D using table.tex, ///
> se keep(x2hat sqrtx2hat inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
{res}{txt}(output written to {browse  `"table.tex"'})

{com}. esttab A B C D using table.txt, ///
> se keep(x2hat sqrtx2hat inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
{res}{txt}(output written to {browse  `"table.txt"'})

{com}. *se keep(x2hat  x2hatsq inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
. 
. gen a25=1 if alpha==0.25
{txt}(640 missing values generated)

{com}. replace a25=2 if alpha==0.75
{txt}(640 real changes made)

{com}. gen alphag=1 if alpha==0.25
{txt}(640 missing values generated)

{com}. replace alphag=2 if alpha==0.75
{txt}(640 real changes made)

{com}. 
. label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. 
. label var br1 "Best Response"
{txt}
{com}. label var x12hat "Observations"
{txt}
{com}. 
. sort x2hat
{txt}
{com}. *twoway (scatter x12hat x2hat) (line br1 x2hat) 
. *twoway (line xbr25 x2hat) (line xbr75 x2hat) (line br1 x2hat) 
. gen x1225=x12hat if alpha==0.25
{txt}(640 missing values generated)

{com}. gen x1275=x12hat if alpha==0.75
{txt}(640 missing values generated)

{com}. 
. **************************
. ***(a) All observations***
. **************************
. *****with the cloud of points and estimated BR****************
. twoway (line xbr25 x2hat, lwidth(thick) lp(longdash_dot) lc(black)) ///
> (line xbr75 x2hat, lwidth(thick) lp(dash) lc(black)) ///
> (line br1 x2hat, lwidth(medthick) legend(off) lc(red)) ///
> (scatter x12hat x2hat, ms(circle) mfc(none) mlc(black) mlw(medium)), /// *(line xbr25 x2hat, lwidth(thick) lp(longdash_dot)) /// *(line xbr75 x2hat, lwidth(thick) lp(dash)) ///
> text(35 80 "{c -(}bf:alpha=0.75{c )-}", color(blue)) text(52 90 "{c -(}bf:alpha=0.25{c )-}", color(blue)) text(20 70 "{c -(}bf:Risk Neutral BR{c )-}", color(blue)) ///
> ylabel(0(20)100) ytitle("Type A - Round 2") ///
> saving("brl_brall", replace)
{res}{txt}file {bf:brl_brall.gph} saved

{com}. graph use brl_brall
{res}{txt}
{com}. graph export Fig6a.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig6a.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *****************************
. ***(b) Revised Expenditure***
. *****************************
. twoway (line xbr25_rev x2hat if changehat==1, lwidth(thick) lp(longdash_dot) lc(black)) ///
> (line xbr75_rev x2hat if changehat==1, lwidth(thick) lp(dash) lc(black)) ///
> (line br1 x2hat if changehat==1, lwidth(medthick) legend(off) lc(red)) ///
> (scatter x12hat x2hat if changehat==1, ms(circle) mfc(none) mlc(black) mlw(medium)), /// *(line xbr25 x2hat, lwidth(thick) lp(longdash_dot)) /// *(line xbr75 x2hat, lwidth(thick) lp(dash)) ///
> ylabel(0(20)100) ytitle("Type A - Round 2") ///
> text(38 65 "{c -(}bf:alpha=0.75{c )-}", color(blue)) text(47 90 "{c -(}bf:alpha=0.25{c )-}", color(blue)) text(20 70 "{c -(}bf:Risk Neutral BR{c )-}", color(blue)) ///
> saving("brl_brch", replace)
{res}{txt}file {bf:brl_brch.gph} saved

{com}. graph use brl_brch
{res}{txt}
{com}. graph export Fig6b.pdf, replace
{txt}{p 0 4 2}
file {bf}
Fig6b.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. ***********************************************************
. ******************RESULT 1*********************************
. ***********************************************************
. 
. 
. *Period >10 & Period >30
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. drop if Type==2
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. sort contest lottery alpha sessionid
{txt}
{com}. collapse x1hat x2hat x12hat x1eq x2eq x12eq x12eq_expost changehat, by(contest lottery alpha sessionid)
{res}{txt}
{com}. 
. ***********************************************
. ****WITHIN SESSION EQUILIBRIUM COMPARISONS*****
. ***********************************************
. 
. sort alpha
{txt}
{com}. *ALL PAY*
. by alpha: signrank x1hat=x1eq if lottery==0

{txt}{hline}
-> alpha = .25

{hline}
-> alpha = .75

{com}. by alpha: signrank x2hat=x2eq if lottery==0

{txt}{hline}
-> alpha = .25

{hline}
-> alpha = .75

{com}. by alpha: signrank x12hat=x12eq if lottery==0

{txt}{hline}
-> alpha = .25

{hline}
-> alpha = .75

{com}. by alpha: signrank x12hat=x12eq_expost if lottery==0

{txt}{hline}
-> alpha = .25

{hline}
-> alpha = .75

{com}. by alpha: signrank changehat=1 if lottery==0

{txt}{hline}
-> alpha = .25

{hline}
-> alpha = .75

{com}. *LOTTERY*
. by alpha: signrank x1hat=x1eq if lottery==1

{txt}{hline}
-> alpha = .25

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      8{col 26}        36{col 38}        18
    {txt}Negative {c |}{res}{col 17}      0{col 26}         0{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x1hat = x1eq 
{col 10}z = {res}{ralign 6:2.521}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0117}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}

{txt}{hline}
-> alpha = .75

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      6{col 26}        32{col 38}        18
    {txt}Negative {c |}{res}{col 17}      2{col 26}         4{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x1hat = x1eq 
{col 10}z = {res}{ralign 6:1.960}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0499}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0547}
{txt}
{com}. by alpha: signrank x2hat=x2eq if lottery==1

{txt}{hline}
-> alpha = .25

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      8{col 26}        36{col 38}        18
    {txt}Negative {c |}{res}{col 17}      0{col 26}         0{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x2hat = x2eq 
{col 10}z = {res}{ralign 6:2.521}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0117}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}

{txt}{hline}
-> alpha = .75

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        35{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         1{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x2hat = x2eq 
{col 10}z = {res}{ralign 6:2.380}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0173}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0156}
{txt}
{com}. by alpha: signrank x12hat=x12eq if lottery==1

{txt}{hline}
-> alpha = .25

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      8{col 26}        36{col 38}        18
    {txt}Negative {c |}{res}{col 17}      0{col 26}         0{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x12hat = x12eq 
{col 10}z = {res}{ralign 6:2.521}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0117}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}

{txt}{hline}
-> alpha = .75

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        35{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         1{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x12hat = x12eq 
{col 10}z = {res}{ralign 6:2.380}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0173}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0156}
{txt}
{com}. by alpha: signrank x12hat=x12eq_expost if lottery==1

{txt}{hline}
-> alpha = .25

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      8{col 26}        36{col 38}        18
    {txt}Negative {c |}{res}{col 17}      0{col 26}         0{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x12hat = x12eq_expost 
{col 10}z = {res}{ralign 6:2.521}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0117}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}

{txt}{hline}
-> alpha = .75

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      8{col 26}        36{col 38}        18
    {txt}Negative {c |}{res}{col 17}      0{col 26}         0{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x12hat = x12eq_expost 
{col 10}z = {res}{ralign 6:2.521}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0117}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}
{txt}
{com}. by alpha: signrank changehat=0 if lottery==1

{txt}{hline}
-> alpha = .25

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      8{col 26}        36{col 38}        18
    {txt}Negative {c |}{res}{col 17}      0{col 26}         0{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}     -0.13
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     50.88

{txt}H0: changehat = 0 
{col 10}z = {res}{ralign 6:2.524}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0116}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}

{txt}{hline}
-> alpha = .75

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      8{col 26}        36{col 38}        18
    {txt}Negative {c |}{res}{col 17}      0{col 26}         0{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}     -0.13
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     50.88

{txt}H0: changehat = 0 
{col 10}z = {res}{ralign 6:2.524}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0116}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0078}
{txt}
{com}. 
. 
. ***********************************************************
. ******************TABLES*********************************
. ***********************************************************
. 
. *******************
. ******TABLE 3******
. *******************
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. *Period >10 & Period >30
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. drop if Type==2
{txt}(2,560 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. sort contest alpha
{txt}
{com}. by contest alpha: sum x1hat x2hat x12hat changehat flexibility dissipation

{txt}{hline}
-> contest = All Pay Auction, alpha = .25
{err}variable {bf}flexibility{sf} not found
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. drop if part==3 & Period<=10
{txt}(1,280 observations deleted)

{com}. drop if part==4 & Period<=30
{txt}(1,280 observations deleted)

{com}. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1986                                         {txt}min = {res}         4
{txt}     Between = {res}0.1279                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1521                                         {txt}max = {res}        15

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.40468{col 26}{space 2} 7.279035{col 37}{space 1}   -2.94{col 46}{space 3}0.003{col 54}{space 4}-35.67133{col 67}{space 3}-7.138037
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 141.3635{col 26}{space 2} 98.38833{col 37}{space 1}    1.44{col 46}{space 3}0.151{col 54}{space 4}-51.47406{col 67}{space 3} 334.2011
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 6.568863{col 26}{space 2} 7.288668{col 37}{space 1}    0.90{col 46}{space 3}0.367{col 54}{space 4}-7.716663{col 67}{space 3} 20.85439
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-5.391003{col 26}{space 2}  .285323{col 37}{space 1}  -18.89{col 46}{space 3}0.000{col 54}{space 4}-5.950225{col 67}{space 3} -4.83178
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-4.710472{col 26}{space 2}  .266715{col 37}{space 1}  -17.66{col 46}{space 3}0.000{col 54}{space 4}-5.233223{col 67}{space 3} -4.18772
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 6.842137{col 26}{space 2} .2794054{col 37}{space 1}   24.49{col 46}{space 3}0.000{col 54}{space 4} 6.294512{col 67}{space 3} 7.389761
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-12.11768{col 26}{space 2} .2634262{col 37}{space 1}  -46.00{col 46}{space 3}0.000{col 54}{space 4}-12.63399{col 67}{space 3}-11.60138
{txt}{space 9}13  {c |}{col 14}{res}{space 2} 5.847175{col 26}{space 2} .3050671{col 37}{space 1}   19.17{col 46}{space 3}0.000{col 54}{space 4} 5.249254{col 67}{space 3} 6.445095
{txt}{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}15  {c |}{col 14}{res}{space 2} 10.49505{col 26}{space 2} .5926098{col 37}{space 1}   17.71{col 46}{space 3}0.000{col 54}{space 4} 9.333555{col 67}{space 3} 11.65654
{txt}{space 9}16  {c |}{col 14}{res}{space 2}  7.04575{col 26}{space 2} .4995589{col 37}{space 1}   14.10{col 46}{space 3}0.000{col 54}{space 4} 6.066632{col 67}{space 3} 8.024867
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 28.93271{col 26}{space 2} 11.92677{col 37}{space 1}    2.43{col 46}{space 3}0.015{col 54}{space 4} 5.556681{col 67}{space 3} 52.30875
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 19.534614
     {txt}sigma_e {c |} {res} 23.571111
         {txt}rho {c |} {res} .40717219{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0368                                         {txt}min = {res}         5
{txt}     Between = {res}0.2074                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1176                                         {txt}max = {res}        16

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-10.38391{col 26}{space 2} 3.835305{col 37}{space 1}   -2.71{col 46}{space 3}0.007{col 54}{space 4}-17.90097{col 67}{space 3}-2.866848
{txt}{space 9}inv {c |}{col 14}{res}{space 2}-162.4711{col 26}{space 2} 120.9388{col 37}{space 1}   -1.34{col 46}{space 3}0.179{col 54}{space 4}-399.5068{col 67}{space 3} 74.56456
{txt}{space 5}first20 {c |}{col 14}{res}{space 2}-.8888838{col 26}{space 2} 3.840584{col 37}{space 1}   -0.23{col 46}{space 3}0.817{col 54}{space 4}-8.416289{col 67}{space 3} 6.638522
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 20.46697{col 26}{space 2} .1120426{col 37}{space 1}  182.67{col 46}{space 3}0.000{col 54}{space 4} 20.24737{col 67}{space 3} 20.68657
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-17.31089{col 26}{space 2} .1225902{col 37}{space 1} -141.21{col 46}{space 3}0.000{col 54}{space 4}-17.55116{col 67}{space 3}-17.07061
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 13.55259{col 26}{space 2} .1055789{col 37}{space 1}  128.36{col 46}{space 3}0.000{col 54}{space 4} 13.34566{col 67}{space 3} 13.75952
{txt}{space 9}12  {c |}{col 14}{res}{space 2} 1.596045{col 26}{space 2} .0845706{col 37}{space 1}   18.87{col 46}{space 3}0.000{col 54}{space 4}  1.43029{col 67}{space 3}   1.7618
{txt}{space 9}13  {c |}{col 14}{res}{space 2} -7.06004{col 26}{space 2} .0500766{col 37}{space 1} -140.98{col 46}{space 3}0.000{col 54}{space 4}-7.158188{col 67}{space 3}-6.961891
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-4.884359{col 26}{space 2} .1254978{col 37}{space 1}  -38.92{col 46}{space 3}0.000{col 54}{space 4} -5.13033{col 67}{space 3}-4.638388
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2} 8.856814{col 26}{space 2} .0507265{col 37}{space 1}  174.60{col 46}{space 3}0.000{col 54}{space 4} 8.757392{col 67}{space 3} 8.956236
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 47.72903{col 26}{space 2} 8.552898{col 37}{space 1}    5.58{col 46}{space 3}0.000{col 54}{space 4} 30.96566{col 67}{space 3}  64.4924
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 19.467196
     {txt}sigma_e {c |} {res} 30.456605
         {txt}rho {c |} {res}  .2900494{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0613                                         {txt}min = {res}         5
{txt}     Between = {res}0.2072                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1446                                         {txt}max = {res}        15

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-3.635024{col 26}{space 2} 2.687426{col 37}{space 1}   -1.35{col 46}{space 3}0.176{col 54}{space 4}-8.902283{col 67}{space 3} 1.632235
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 127.8625{col 26}{space 2} 107.6376{col 37}{space 1}    1.19{col 46}{space 3}0.235{col 54}{space 4}-83.10332{col 67}{space 3} 338.8283
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.842368{col 26}{space 2} 2.684599{col 37}{space 1}    3.67{col 46}{space 3}0.000{col 54}{space 4}  4.58065{col 67}{space 3} 15.10409
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 1.038414{col 26}{space 2} .1799422{col 37}{space 1}    5.77{col 46}{space 3}0.000{col 54}{space 4} .6857342{col 67}{space 3} 1.391095
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-10.95973{col 26}{space 2}  .037926{col 37}{space 1} -288.98{col 46}{space 3}0.000{col 54}{space 4}-11.03407{col 67}{space 3} -10.8854
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-13.56664{col 26}{space 2} .0332645{col 37}{space 1} -407.84{col 46}{space 3}0.000{col 54}{space 4}-13.63184{col 67}{space 3}-13.50144
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 14.03819{col 26}{space 2} .0765237{col 37}{space 1}  183.45{col 46}{space 3}0.000{col 54}{space 4} 13.88821{col 67}{space 3} 14.18817
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 1.963036{col 26}{space 2} .0363477{col 37}{space 1}   54.01{col 46}{space 3}0.000{col 54}{space 4} 1.891796{col 67}{space 3} 2.034276
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 20.42393{col 26}{space 2} .0867577{col 37}{space 1}  235.41{col 46}{space 3}0.000{col 54}{space 4} 20.25389{col 67}{space 3} 20.59397
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 6.470266{col 26}{space 2} .0659008{col 37}{space 1}   98.18{col 46}{space 3}0.000{col 54}{space 4} 6.341103{col 67}{space 3}  6.59943
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 26.78955{col 26}{space 2}  6.82284{col 37}{space 1}    3.93{col 46}{space 3}0.000{col 54}{space 4} 13.41703{col 67}{space 3} 40.16207
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 22.356588
     {txt}sigma_e {c |} {res} 21.954748
         {txt}rho {c |} {res}  .5090678{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}       640
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0095                                         {txt}min = {res}         5
{txt}     Between = {res}0.2486                                         {txt}avg = {res}      10.0
{txt}     Overall = {res}0.1335                                         {txt}max = {res}        15

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.508044{col 26}{space 2} 2.689616{col 37}{space 1}    0.56{col 46}{space 3}0.575{col 54}{space 4}-3.763508{col 67}{space 3} 6.779595
{txt}{space 9}inv {c |}{col 14}{res}{space 2}-99.27582{col 26}{space 2} 78.88733{col 37}{space 1}   -1.26{col 46}{space 3}0.208{col 54}{space 4}-253.8921{col 67}{space 3}  55.3405
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 3.865206{col 26}{space 2} 2.692384{col 37}{space 1}    1.44{col 46}{space 3}0.151{col 54}{space 4} -1.41177{col 67}{space 3} 9.142182
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 1.916991{col 26}{space 2} .2672851{col 37}{space 1}    7.17{col 46}{space 3}0.000{col 54}{space 4} 1.393122{col 67}{space 3}  2.44086
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-30.25673{col 26}{space 2} .0965104{col 37}{space 1} -313.51{col 46}{space 3}0.000{col 54}{space 4}-30.44589{col 67}{space 3}-30.06757
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-26.57042{col 26}{space 2} .0758656{col 37}{space 1} -350.23{col 46}{space 3}0.000{col 54}{space 4}-26.71911{col 67}{space 3}-26.42172
{txt}{space 10}5  {c |}{col 14}{res}{space 2}-9.063244{col 26}{space 2} .1073224{col 37}{space 1}  -84.45{col 46}{space 3}0.000{col 54}{space 4}-9.273592{col 67}{space 3}-8.852896
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-23.04157{col 26}{space 2} .1089329{col 37}{space 1} -211.52{col 46}{space 3}0.000{col 54}{space 4}-23.25508{col 67}{space 3}-22.82807
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-7.630998{col 26}{space 2}  .147207{col 37}{space 1}  -51.84{col 46}{space 3}0.000{col 54}{space 4}-7.919518{col 67}{space 3}-7.342477
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 2.966821{col 26}{space 2} .1223549{col 37}{space 1}   24.25{col 46}{space 3}0.000{col 54}{space 4}  2.72701{col 67}{space 3} 3.206633
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 56.71888{col 26}{space 2} 5.617765{col 37}{space 1}   10.10{col 46}{space 3}0.000{col 54}{space 4} 45.70827{col 67}{space 3}  67.7295
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  22.18181
     {txt}sigma_e {c |} {res} 25.267784
         {txt}rho {c |} {res} .43523706{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01)
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2037                                         {txt}min = {res}        10
{txt}     Between = {res}0.0951                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1651                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.62866{col 26}{space 2} 5.635731{col 37}{space 1}   -3.84{col 46}{space 3}0.000{col 54}{space 4}-32.67449{col 67}{space 3}-10.58283
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 12.60962{col 26}{space 2} 4.003287{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} 4.763325{col 67}{space 3} 20.45592
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.848289{col 26}{space 2} 5.636506{col 37}{space 1}    1.75{col 46}{space 3}0.081{col 54}{space 4} -1.19906{col 67}{space 3} 20.89564
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-13.07432{col 26}{space 2}  .215295{col 37}{space 1}  -60.73{col 46}{space 3}0.000{col 54}{space 4}-13.49629{col 67}{space 3}-12.65235
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-6.251099{col 26}{space 2} .2136798{col 37}{space 1}  -29.25{col 46}{space 3}0.000{col 54}{space 4}-6.669904{col 67}{space 3}-5.832294
{txt}{space 9}11  {c |}{col 14}{res}{space 2} .2194068{col 26}{space 2} .2167097{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.2053364{col 67}{space 3}   .64415
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-14.51714{col 26}{space 2} .2189171{col 37}{space 1}  -66.31{col 46}{space 3}0.000{col 54}{space 4}-14.94621{col 67}{space 3}-14.08807
{txt}{space 9}13  {c |}{col 14}{res}{space 2} .0340119{col 26}{space 2} .2334322{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-.4235068{col 67}{space 3} .4915305
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-7.736819{col 26}{space 2} .2419127{col 37}{space 1}  -31.98{col 46}{space 3}0.000{col 54}{space 4}-8.210959{col 67}{space 3}-7.262678
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2}-1.831103{col 26}{space 2}  .233923{col 37}{space 1}   -7.83{col 46}{space 3}0.000{col 54}{space 4}-2.289584{col 67}{space 3}-1.372623
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  45.5148{col 26}{space 2} 5.654182{col 37}{space 1}    8.05{col 46}{space 3}0.000{col 54}{space 4} 34.43281{col 67}{space 3}  56.5968
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.531932
     {txt}sigma_e {c |} {res} 24.428128
         {txt}rho {c |} {res} .33997117{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0310                                         {txt}min = {res}        13
{txt}     Between = {res}0.1809                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0846                                         {txt}max = {res}        30

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-8.823015{col 26}{space 2} 2.707373{col 37}{space 1}   -3.26{col 46}{space 3}0.001{col 54}{space 4}-14.12937{col 67}{space 3}-3.516661
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 15.64664{col 26}{space 2} 6.305487{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} 3.288109{col 67}{space 3} 28.00516
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} .7617391{col 26}{space 2} 2.707106{col 37}{space 1}    0.28{col 46}{space 3}0.778{col 54}{space 4}-4.544092{col 67}{space 3}  6.06757
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 17.37971{col 26}{space 2} .0574491{col 37}{space 1}  302.52{col 46}{space 3}0.000{col 54}{space 4} 17.26711{col 67}{space 3} 17.49231
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-9.457426{col 26}{space 2} .0672525{col 37}{space 1} -140.63{col 46}{space 3}0.000{col 54}{space 4}-9.589238{col 67}{space 3}-9.325613
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 7.052316{col 26}{space 2}   .05702{col 37}{space 1}  123.68{col 46}{space 3}0.000{col 54}{space 4} 6.940559{col 67}{space 3} 7.164074
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-1.198003{col 26}{space 2} .0572216{col 37}{space 1}  -20.94{col 46}{space 3}0.000{col 54}{space 4}-1.310156{col 67}{space 3}-1.085851
{txt}{space 9}13  {c |}{col 14}{res}{space 2}-2.559409{col 26}{space 2} .0544918{col 37}{space 1}  -46.97{col 46}{space 3}0.000{col 54}{space 4}-2.666211{col 67}{space 3}-2.452607
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-11.53917{col 26}{space 2} .0600383{col 37}{space 1} -192.20{col 46}{space 3}0.000{col 54}{space 4}-11.65684{col 67}{space 3} -11.4215
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2} .8415434{col 26}{space 2} .0543048{col 37}{space 1}   15.50{col 46}{space 3}0.000{col 54}{space 4}  .735108{col 67}{space 3} .9479789
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 36.89935{col 26}{space 2} 2.515556{col 37}{space 1}   14.67{col 46}{space 3}0.000{col 54}{space 4} 31.96895{col 67}{space 3} 41.82975
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.820295
     {txt}sigma_e {c |} {res} 31.362447
         {txt}rho {c |} {res} .24406027{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1223                                         {txt}min = {res}        13
{txt}     Between = {res}0.1529                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1389                                         {txt}max = {res}        28

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-5.882275{col 26}{space 2} 3.203799{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4} -12.1616{col 67}{space 3} .3970548
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 10.74005{col 26}{space 2} 5.453056{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0522542{col 67}{space 3} 21.42784
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 15.58286{col 26}{space 2} 3.192418{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 54}{space 4} 9.325839{col 67}{space 3} 21.83989
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 5.564767{col 26}{space 2} .0909531{col 37}{space 1}   61.18{col 46}{space 3}0.000{col 54}{space 4} 5.386502{col 67}{space 3} 5.743032
{txt}{space 10}3  {c |}{col 14}{res}{space 2} .7650709{col 26}{space 2} .0590974{col 37}{space 1}   12.95{col 46}{space 3}0.000{col 54}{space 4} .6492421{col 67}{space 3} .8808996
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-7.437572{col 26}{space 2} .0175748{col 37}{space 1} -423.20{col 46}{space 3}0.000{col 54}{space 4}-7.472018{col 67}{space 3}-7.403126
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 17.36228{col 26}{space 2} .0237691{col 37}{space 1}  730.45{col 46}{space 3}0.000{col 54}{space 4} 17.31569{col 67}{space 3} 17.40887
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 4.723308{col 26}{space 2} .0177295{col 37}{space 1}  266.41{col 46}{space 3}0.000{col 54}{space 4} 4.688559{col 67}{space 3} 4.758057
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 19.62122{col 26}{space 2} .0262991{col 37}{space 1}  746.08{col 46}{space 3}0.000{col 54}{space 4} 19.56967{col 67}{space 3} 19.67276
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 12.94197{col 26}{space 2} .0224908{col 37}{space 1}  575.43{col 46}{space 3}0.000{col 54}{space 4} 12.89789{col 67}{space 3} 12.98606
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 29.78293{col 26}{space 2}  .953521{col 37}{space 1}   31.23{col 46}{space 3}0.000{col 54}{space 4} 27.91406{col 67}{space 3}  31.6518
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  20.48359
     {txt}sigma_e {c |} {res} 23.540113
         {txt}rho {c |} {res} .43090403{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0401                                         {txt}min = {res}        12
{txt}     Between = {res}0.1494                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0842                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.737756{col 26}{space 2} 4.139132{col 37}{space 1}    0.42{col 46}{space 3}0.675{col 54}{space 4}-6.374793{col 67}{space 3} 9.850305
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 13.42103{col 26}{space 2} 7.400565{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-1.083816{col 67}{space 3} 27.92587
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 8.921215{col 26}{space 2} 4.128025{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .8304354{col 67}{space 3} 17.01199
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 2.305278{col 26}{space 2}  .093803{col 37}{space 1}   24.58{col 46}{space 3}0.000{col 54}{space 4} 2.121428{col 67}{space 3} 2.489129
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-16.83406{col 26}{space 2} .0728976{col 37}{space 1} -230.93{col 46}{space 3}0.000{col 54}{space 4}-16.97693{col 67}{space 3}-16.69118
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-14.14342{col 26}{space 2} .0488577{col 37}{space 1} -289.48{col 46}{space 3}0.000{col 54}{space 4}-14.23918{col 67}{space 3}-14.04766
{txt}{space 10}5  {c |}{col 14}{res}{space 2} -2.74914{col 26}{space 2} .0235378{col 37}{space 1} -116.80{col 46}{space 3}0.000{col 54}{space 4}-2.795273{col 67}{space 3}-2.703007
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-14.11689{col 26}{space 2} .0236555{col 37}{space 1} -596.77{col 46}{space 3}0.000{col 54}{space 4}-14.16325{col 67}{space 3}-14.07052
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-2.829071{col 26}{space 2} .0416383{col 37}{space 1}  -67.94{col 46}{space 3}0.000{col 54}{space 4} -2.91068{col 67}{space 3}-2.747461
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 7.493147{col 26}{space 2} .0326429{col 37}{space 1}  229.55{col 46}{space 3}0.000{col 54}{space 4} 7.429168{col 67}{space 3} 7.557126
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 42.49708{col 26}{space 2} 2.131756{col 37}{space 1}   19.94{col 46}{space 3}0.000{col 54}{space 4} 38.31891{col 67}{space 3} 46.67524
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 20.396695
     {txt}sigma_e {c |} {res} 26.882051
         {txt}rho {c |} {res} .36536066{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01)
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. *Period >10 & Period >30
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. drop if Type==2
{txt}(2,560 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. sort contest alpha
{txt}
{com}. by contest alpha: sum x1hat x2hat x12hat changehat flexibility dissipation

{txt}{hline}
-> contest = All Pay Auction, alpha = .25
{err}variable {bf}flexibility{sf} not found
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. *Period >10 & Period >30
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. *Descriptive statistics
. sort contest alpha
{txt}
{com}. by contest alpha: sum x1hat x2hat x12hat x12eq_expost changehat if Type==1

{txt}{hline}
-> contest = All Pay Auction, alpha = .25

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}x1hat {c |}{res}        640    47.18152    30.84879          0        100
{txt}{space 7}x2hat {c |}{res}        640    40.56469     35.3736          0        100
{txt}{space 6}x12hat {c |}{res}        640    39.91313     33.9622          0        100
{txt}x12eq_expost {c |}{res}        640    34.48033     33.1507          0        100
{txt}{space 3}changehat {c |}{res}        640    .8890625    .3143004          0          1

{txt}{hline}
-> contest = All Pay Auction, alpha = .75

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}x1hat {c |}{res}        640     26.2483    29.57008          0        100
{txt}{space 7}x2hat {c |}{res}        640    31.87056    38.62192          0        100
{txt}{space 6}x12hat {c |}{res}        640    24.98841    32.90456          0        100
{txt}x12eq_expost {c |}{res}        640     14.0663    22.95761          0        100
{txt}{space 3}changehat {c |}{res}        640    .8609375    .3462824          0          1

{txt}{hline}
-> contest = Lottery, alpha = .25

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}x1hat {c |}{res}        640    45.70875    31.49323          0        100
{txt}{space 7}x2hat {c |}{res}        640    44.75683    34.71484          0        100
{txt}{space 6}x12hat {c |}{res}        640    42.15094    34.55396          0        100
{txt}x12eq_expost {c |}{res}        640    13.29694    9.212994          0         25
{txt}{space 3}changehat {c |}{res}        640     .678125    .4675608          0          1

{txt}{hline}
-> contest = Lottery, alpha = .75

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}x1hat {c |}{res}        640    40.76316    33.07534          0        100
{txt}{space 7}x2hat {c |}{res}        640     45.4948    34.47083          0        100
{txt}{space 6}x12hat {c |}{res}        640    45.83961    35.34265          0        100
{txt}x12eq_expost {c |}{res}        640    13.26608     9.64321          0         25
{txt}{space 3}changehat {c |}{res}        640      .74375     .436903          0          1

{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2037                                         {txt}min = {res}        10
{txt}     Between = {res}0.0951                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1651                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.62866{col 26}{space 2} 5.635731{col 37}{space 1}   -3.84{col 46}{space 3}0.000{col 54}{space 4}-32.67449{col 67}{space 3}-10.58283
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 12.60962{col 26}{space 2} 4.003287{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} 4.763325{col 67}{space 3} 20.45592
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.848289{col 26}{space 2} 5.636506{col 37}{space 1}    1.75{col 46}{space 3}0.081{col 54}{space 4} -1.19906{col 67}{space 3} 20.89564
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-13.07432{col 26}{space 2}  .215295{col 37}{space 1}  -60.73{col 46}{space 3}0.000{col 54}{space 4}-13.49629{col 67}{space 3}-12.65235
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-6.251099{col 26}{space 2} .2136798{col 37}{space 1}  -29.25{col 46}{space 3}0.000{col 54}{space 4}-6.669904{col 67}{space 3}-5.832294
{txt}{space 9}11  {c |}{col 14}{res}{space 2} .2194068{col 26}{space 2} .2167097{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.2053364{col 67}{space 3}   .64415
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-14.51714{col 26}{space 2} .2189171{col 37}{space 1}  -66.31{col 46}{space 3}0.000{col 54}{space 4}-14.94621{col 67}{space 3}-14.08807
{txt}{space 9}13  {c |}{col 14}{res}{space 2} .0340119{col 26}{space 2} .2334322{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-.4235068{col 67}{space 3} .4915305
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-7.736819{col 26}{space 2} .2419127{col 37}{space 1}  -31.98{col 46}{space 3}0.000{col 54}{space 4}-8.210959{col 67}{space 3}-7.262678
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2}-1.831103{col 26}{space 2}  .233923{col 37}{space 1}   -7.83{col 46}{space 3}0.000{col 54}{space 4}-2.289584{col 67}{space 3}-1.372623
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  45.5148{col 26}{space 2} 5.654182{col 37}{space 1}    8.05{col 46}{space 3}0.000{col 54}{space 4} 34.43281{col 67}{space 3}  56.5968
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.531932
     {txt}sigma_e {c |} {res} 24.428128
         {txt}rho {c |} {res} .33997117{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0310                                         {txt}min = {res}        13
{txt}     Between = {res}0.1809                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0846                                         {txt}max = {res}        30

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-8.823015{col 26}{space 2} 2.707373{col 37}{space 1}   -3.26{col 46}{space 3}0.001{col 54}{space 4}-14.12937{col 67}{space 3}-3.516661
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 15.64664{col 26}{space 2} 6.305487{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} 3.288109{col 67}{space 3} 28.00516
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} .7617391{col 26}{space 2} 2.707106{col 37}{space 1}    0.28{col 46}{space 3}0.778{col 54}{space 4}-4.544092{col 67}{space 3}  6.06757
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 17.37971{col 26}{space 2} .0574491{col 37}{space 1}  302.52{col 46}{space 3}0.000{col 54}{space 4} 17.26711{col 67}{space 3} 17.49231
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-9.457426{col 26}{space 2} .0672525{col 37}{space 1} -140.63{col 46}{space 3}0.000{col 54}{space 4}-9.589238{col 67}{space 3}-9.325613
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 7.052316{col 26}{space 2}   .05702{col 37}{space 1}  123.68{col 46}{space 3}0.000{col 54}{space 4} 6.940559{col 67}{space 3} 7.164074
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-1.198003{col 26}{space 2} .0572216{col 37}{space 1}  -20.94{col 46}{space 3}0.000{col 54}{space 4}-1.310156{col 67}{space 3}-1.085851
{txt}{space 9}13  {c |}{col 14}{res}{space 2}-2.559409{col 26}{space 2} .0544918{col 37}{space 1}  -46.97{col 46}{space 3}0.000{col 54}{space 4}-2.666211{col 67}{space 3}-2.452607
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-11.53917{col 26}{space 2} .0600383{col 37}{space 1} -192.20{col 46}{space 3}0.000{col 54}{space 4}-11.65684{col 67}{space 3} -11.4215
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2} .8415434{col 26}{space 2} .0543048{col 37}{space 1}   15.50{col 46}{space 3}0.000{col 54}{space 4}  .735108{col 67}{space 3} .9479789
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 36.89935{col 26}{space 2} 2.515556{col 37}{space 1}   14.67{col 46}{space 3}0.000{col 54}{space 4} 31.96895{col 67}{space 3} 41.82975
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.820295
     {txt}sigma_e {c |} {res} 31.362447
         {txt}rho {c |} {res} .24406027{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1223                                         {txt}min = {res}        13
{txt}     Between = {res}0.1529                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1389                                         {txt}max = {res}        28

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-5.882275{col 26}{space 2} 3.203799{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4} -12.1616{col 67}{space 3} .3970548
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 10.74005{col 26}{space 2} 5.453056{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0522542{col 67}{space 3} 21.42784
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 15.58286{col 26}{space 2} 3.192418{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 54}{space 4} 9.325839{col 67}{space 3} 21.83989
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 5.564767{col 26}{space 2} .0909531{col 37}{space 1}   61.18{col 46}{space 3}0.000{col 54}{space 4} 5.386502{col 67}{space 3} 5.743032
{txt}{space 10}3  {c |}{col 14}{res}{space 2} .7650709{col 26}{space 2} .0590974{col 37}{space 1}   12.95{col 46}{space 3}0.000{col 54}{space 4} .6492421{col 67}{space 3} .8808996
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-7.437572{col 26}{space 2} .0175748{col 37}{space 1} -423.20{col 46}{space 3}0.000{col 54}{space 4}-7.472018{col 67}{space 3}-7.403126
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 17.36228{col 26}{space 2} .0237691{col 37}{space 1}  730.45{col 46}{space 3}0.000{col 54}{space 4} 17.31569{col 67}{space 3} 17.40887
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 4.723308{col 26}{space 2} .0177295{col 37}{space 1}  266.41{col 46}{space 3}0.000{col 54}{space 4} 4.688559{col 67}{space 3} 4.758057
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 19.62122{col 26}{space 2} .0262991{col 37}{space 1}  746.08{col 46}{space 3}0.000{col 54}{space 4} 19.56967{col 67}{space 3} 19.67276
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 12.94197{col 26}{space 2} .0224908{col 37}{space 1}  575.43{col 46}{space 3}0.000{col 54}{space 4} 12.89789{col 67}{space 3} 12.98606
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 29.78293{col 26}{space 2}  .953521{col 37}{space 1}   31.23{col 46}{space 3}0.000{col 54}{space 4} 27.91406{col 67}{space 3}  31.6518
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  20.48359
     {txt}sigma_e {c |} {res} 23.540113
         {txt}rho {c |} {res} .43090403{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0401                                         {txt}min = {res}        12
{txt}     Between = {res}0.1494                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0842                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.737756{col 26}{space 2} 4.139132{col 37}{space 1}    0.42{col 46}{space 3}0.675{col 54}{space 4}-6.374793{col 67}{space 3} 9.850305
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 13.42103{col 26}{space 2} 7.400565{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-1.083816{col 67}{space 3} 27.92587
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 8.921215{col 26}{space 2} 4.128025{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .8304354{col 67}{space 3} 17.01199
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 2.305278{col 26}{space 2}  .093803{col 37}{space 1}   24.58{col 46}{space 3}0.000{col 54}{space 4} 2.121428{col 67}{space 3} 2.489129
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-16.83406{col 26}{space 2} .0728976{col 37}{space 1} -230.93{col 46}{space 3}0.000{col 54}{space 4}-16.97693{col 67}{space 3}-16.69118
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-14.14342{col 26}{space 2} .0488577{col 37}{space 1} -289.48{col 46}{space 3}0.000{col 54}{space 4}-14.23918{col 67}{space 3}-14.04766
{txt}{space 10}5  {c |}{col 14}{res}{space 2} -2.74914{col 26}{space 2} .0235378{col 37}{space 1} -116.80{col 46}{space 3}0.000{col 54}{space 4}-2.795273{col 67}{space 3}-2.703007
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-14.11689{col 26}{space 2} .0236555{col 37}{space 1} -596.77{col 46}{space 3}0.000{col 54}{space 4}-14.16325{col 67}{space 3}-14.07052
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-2.829071{col 26}{space 2} .0416383{col 37}{space 1}  -67.94{col 46}{space 3}0.000{col 54}{space 4} -2.91068{col 67}{space 3}-2.747461
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 7.493147{col 26}{space 2} .0326429{col 37}{space 1}  229.55{col 46}{space 3}0.000{col 54}{space 4} 7.429168{col 67}{space 3} 7.557126
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 42.49708{col 26}{space 2} 2.131756{col 37}{space 1}   19.94{col 46}{space 3}0.000{col 54}{space 4} 38.31891{col 67}{space 3} 46.67524
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 20.396695
     {txt}sigma_e {c |} {res} 26.882051
         {txt}rho {c |} {res} .36536066{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{err}{p 0 4 2}
file {bf:{err}table5.doc}
is read-only; cannot be modified or erased
{p_end}
{txt}{search r(608), local:r(608);}

end of do-file

{search r(608), local:r(608);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2037                                         {txt}min = {res}        10
{txt}     Between = {res}0.0951                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1651                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.62866{col 26}{space 2} 5.635731{col 37}{space 1}   -3.84{col 46}{space 3}0.000{col 54}{space 4}-32.67449{col 67}{space 3}-10.58283
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 12.60962{col 26}{space 2} 4.003287{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} 4.763325{col 67}{space 3} 20.45592
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.848289{col 26}{space 2} 5.636506{col 37}{space 1}    1.75{col 46}{space 3}0.081{col 54}{space 4} -1.19906{col 67}{space 3} 20.89564
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-13.07432{col 26}{space 2}  .215295{col 37}{space 1}  -60.73{col 46}{space 3}0.000{col 54}{space 4}-13.49629{col 67}{space 3}-12.65235
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-6.251099{col 26}{space 2} .2136798{col 37}{space 1}  -29.25{col 46}{space 3}0.000{col 54}{space 4}-6.669904{col 67}{space 3}-5.832294
{txt}{space 9}11  {c |}{col 14}{res}{space 2} .2194068{col 26}{space 2} .2167097{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.2053364{col 67}{space 3}   .64415
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-14.51714{col 26}{space 2} .2189171{col 37}{space 1}  -66.31{col 46}{space 3}0.000{col 54}{space 4}-14.94621{col 67}{space 3}-14.08807
{txt}{space 9}13  {c |}{col 14}{res}{space 2} .0340119{col 26}{space 2} .2334322{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-.4235068{col 67}{space 3} .4915305
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-7.736819{col 26}{space 2} .2419127{col 37}{space 1}  -31.98{col 46}{space 3}0.000{col 54}{space 4}-8.210959{col 67}{space 3}-7.262678
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2}-1.831103{col 26}{space 2}  .233923{col 37}{space 1}   -7.83{col 46}{space 3}0.000{col 54}{space 4}-2.289584{col 67}{space 3}-1.372623
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  45.5148{col 26}{space 2} 5.654182{col 37}{space 1}    8.05{col 46}{space 3}0.000{col 54}{space 4} 34.43281{col 67}{space 3}  56.5968
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.531932
     {txt}sigma_e {c |} {res} 24.428128
         {txt}rho {c |} {res} .33997117{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0310                                         {txt}min = {res}        13
{txt}     Between = {res}0.1809                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0846                                         {txt}max = {res}        30

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-8.823015{col 26}{space 2} 2.707373{col 37}{space 1}   -3.26{col 46}{space 3}0.001{col 54}{space 4}-14.12937{col 67}{space 3}-3.516661
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 15.64664{col 26}{space 2} 6.305487{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} 3.288109{col 67}{space 3} 28.00516
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} .7617391{col 26}{space 2} 2.707106{col 37}{space 1}    0.28{col 46}{space 3}0.778{col 54}{space 4}-4.544092{col 67}{space 3}  6.06757
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 17.37971{col 26}{space 2} .0574491{col 37}{space 1}  302.52{col 46}{space 3}0.000{col 54}{space 4} 17.26711{col 67}{space 3} 17.49231
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-9.457426{col 26}{space 2} .0672525{col 37}{space 1} -140.63{col 46}{space 3}0.000{col 54}{space 4}-9.589238{col 67}{space 3}-9.325613
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 7.052316{col 26}{space 2}   .05702{col 37}{space 1}  123.68{col 46}{space 3}0.000{col 54}{space 4} 6.940559{col 67}{space 3} 7.164074
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-1.198003{col 26}{space 2} .0572216{col 37}{space 1}  -20.94{col 46}{space 3}0.000{col 54}{space 4}-1.310156{col 67}{space 3}-1.085851
{txt}{space 9}13  {c |}{col 14}{res}{space 2}-2.559409{col 26}{space 2} .0544918{col 37}{space 1}  -46.97{col 46}{space 3}0.000{col 54}{space 4}-2.666211{col 67}{space 3}-2.452607
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-11.53917{col 26}{space 2} .0600383{col 37}{space 1} -192.20{col 46}{space 3}0.000{col 54}{space 4}-11.65684{col 67}{space 3} -11.4215
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2} .8415434{col 26}{space 2} .0543048{col 37}{space 1}   15.50{col 46}{space 3}0.000{col 54}{space 4}  .735108{col 67}{space 3} .9479789
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 36.89935{col 26}{space 2} 2.515556{col 37}{space 1}   14.67{col 46}{space 3}0.000{col 54}{space 4} 31.96895{col 67}{space 3} 41.82975
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.820295
     {txt}sigma_e {c |} {res} 31.362447
         {txt}rho {c |} {res} .24406027{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1223                                         {txt}min = {res}        13
{txt}     Between = {res}0.1529                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1389                                         {txt}max = {res}        28

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-5.882275{col 26}{space 2} 3.203799{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4} -12.1616{col 67}{space 3} .3970548
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 10.74005{col 26}{space 2} 5.453056{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0522542{col 67}{space 3} 21.42784
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 15.58286{col 26}{space 2} 3.192418{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 54}{space 4} 9.325839{col 67}{space 3} 21.83989
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 5.564767{col 26}{space 2} .0909531{col 37}{space 1}   61.18{col 46}{space 3}0.000{col 54}{space 4} 5.386502{col 67}{space 3} 5.743032
{txt}{space 10}3  {c |}{col 14}{res}{space 2} .7650709{col 26}{space 2} .0590974{col 37}{space 1}   12.95{col 46}{space 3}0.000{col 54}{space 4} .6492421{col 67}{space 3} .8808996
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-7.437572{col 26}{space 2} .0175748{col 37}{space 1} -423.20{col 46}{space 3}0.000{col 54}{space 4}-7.472018{col 67}{space 3}-7.403126
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 17.36228{col 26}{space 2} .0237691{col 37}{space 1}  730.45{col 46}{space 3}0.000{col 54}{space 4} 17.31569{col 67}{space 3} 17.40887
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 4.723308{col 26}{space 2} .0177295{col 37}{space 1}  266.41{col 46}{space 3}0.000{col 54}{space 4} 4.688559{col 67}{space 3} 4.758057
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 19.62122{col 26}{space 2} .0262991{col 37}{space 1}  746.08{col 46}{space 3}0.000{col 54}{space 4} 19.56967{col 67}{space 3} 19.67276
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 12.94197{col 26}{space 2} .0224908{col 37}{space 1}  575.43{col 46}{space 3}0.000{col 54}{space 4} 12.89789{col 67}{space 3} 12.98606
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 29.78293{col 26}{space 2}  .953521{col 37}{space 1}   31.23{col 46}{space 3}0.000{col 54}{space 4} 27.91406{col 67}{space 3}  31.6518
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  20.48359
     {txt}sigma_e {c |} {res} 23.540113
         {txt}rho {c |} {res} .43090403{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0401                                         {txt}min = {res}        12
{txt}     Between = {res}0.1494                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0842                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.737756{col 26}{space 2} 4.139132{col 37}{space 1}    0.42{col 46}{space 3}0.675{col 54}{space 4}-6.374793{col 67}{space 3} 9.850305
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 13.42103{col 26}{space 2} 7.400565{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-1.083816{col 67}{space 3} 27.92587
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 8.921215{col 26}{space 2} 4.128025{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .8304354{col 67}{space 3} 17.01199
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 2.305278{col 26}{space 2}  .093803{col 37}{space 1}   24.58{col 46}{space 3}0.000{col 54}{space 4} 2.121428{col 67}{space 3} 2.489129
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-16.83406{col 26}{space 2} .0728976{col 37}{space 1} -230.93{col 46}{space 3}0.000{col 54}{space 4}-16.97693{col 67}{space 3}-16.69118
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-14.14342{col 26}{space 2} .0488577{col 37}{space 1} -289.48{col 46}{space 3}0.000{col 54}{space 4}-14.23918{col 67}{space 3}-14.04766
{txt}{space 10}5  {c |}{col 14}{res}{space 2} -2.74914{col 26}{space 2} .0235378{col 37}{space 1} -116.80{col 46}{space 3}0.000{col 54}{space 4}-2.795273{col 67}{space 3}-2.703007
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-14.11689{col 26}{space 2} .0236555{col 37}{space 1} -596.77{col 46}{space 3}0.000{col 54}{space 4}-14.16325{col 67}{space 3}-14.07052
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-2.829071{col 26}{space 2} .0416383{col 37}{space 1}  -67.94{col 46}{space 3}0.000{col 54}{space 4} -2.91068{col 67}{space 3}-2.747461
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 7.493147{col 26}{space 2} .0326429{col 37}{space 1}  229.55{col 46}{space 3}0.000{col 54}{space 4} 7.429168{col 67}{space 3} 7.557126
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 42.49708{col 26}{space 2} 2.131756{col 37}{space 1}   19.94{col 46}{space 3}0.000{col 54}{space 4} 38.31891{col 67}{space 3} 46.67524
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 20.396695
     {txt}sigma_e {c |} {res} 26.882051
         {txt}rho {c |} {res} .36536066{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01)
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. 
. *******************
. ******TABLE 6******
. *******************
. 
. **********DISPERSION MEASURES****************************
. clear
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(5 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if periodt>10
{txt}(2,560 observations deleted)

{com}. 
. gen x_sd=x
{txt}
{com}. gen x_med=x
{txt}
{com}. 
. sort lottery Type alpha sessionid subjectid
{txt}
{com}. collapse (mean) x (sd) x_sd (p50) x_med, by(lottery Type alpha sessionid subjectid)
{res}{txt}
{com}. gen coeff_var=x_sd/x
{txt}(38 missing values generated)

{com}. 
. gen dalpha=0
{txt}
{com}. replace dalpha=1 if alpha==0.75
{txt}(255 real changes made)

{com}. 
. *H_s measure = SD of the median
. by lottery Type alpha sessionid: egen x_sd_med=sd(x_med)
{txt}
{com}. *D_s measure =  Median of the SD
. by lottery Type alpha sessionid: egen x_med_sd=median(x_sd)
{txt}
{com}. 
. sort lottery Type alpha sessionid
{txt}
{com}. collapse x_med_sd x_sd_med, by(lottery Type alpha sessionid)
{res}{txt}
{com}. 
. *Compare alpha's*
. save cv_tests, replace
{txt}{p 0 4 2}
(file {bf}
cv_tests.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
cv_tests.dta{rm}
saved
{p_end}

{com}. 
. keep if alpha==0.25
{txt}(32 observations deleted)

{com}. rename x_sd_med x_med1
{res}{txt}
{com}. rename x_med_sd x_sd1
{res}{txt}
{com}. save cv_type1, replace
{txt}{p 0 4 2}
(file {bf}
cv_type1.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
cv_type1.dta{rm}
saved
{p_end}

{com}. clear
{txt}
{com}. use cv_tests
{txt}
{com}. keep if alpha==0.75
{txt}(32 observations deleted)

{com}. rename x_med_sd x_sd2
{res}{txt}
{com}. rename x_sd_med x_med2
{res}{txt}
{com}. save cv_type2, replace
{txt}{p 0 4 2}
(file {bf}
cv_type2.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
cv_type2.dta{rm}
saved
{p_end}

{com}. merge 1:1 Type sessionid using "cv_type1.dta"
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              32{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. sort lottery Type
{txt}
{com}. *H_s measure = SD of the median
. by lottery Type: signrank x_med1=x_med2

{txt}{hline}
-> lottery = 0, Type = 1

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        30{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         6{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_med1 = x_med2
{col 10}z = {res}{ralign 6:1.680}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0929}
{txt}{col 1}Exact prob = {res}{ralign 6:0.1094}

{txt}{hline}
-> lottery = 0, Type = 2

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      4{col 26}        13{col 38}        18
    {txt}Negative {c |}{res}{col 17}      4{col 26}        23{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_med1 = x_med2
{col 10}z = {res}{ralign 6:-0.700}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.4838}
{txt}{col 1}Exact prob = {res}{ralign 6:0.5469}

{txt}{hline}
-> lottery = 1, Type = 1

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      4{col 26}        20{col 38}        18
    {txt}Negative {c |}{res}{col 17}      4{col 26}        16{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_med1 = x_med2
{col 10}z = {res}{ralign 6:0.280}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.7794}
{txt}{col 1}Exact prob = {res}{ralign 6:0.8438}

{txt}{hline}
-> lottery = 1, Type = 2

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      5{col 26}        25{col 38}        18
    {txt}Negative {c |}{res}{col 17}      3{col 26}        11{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_med1 = x_med2
{col 10}z = {res}{ralign 6:0.980}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.3270}
{txt}{col 1}Exact prob = {res}{ralign 6:0.3828}
{txt}
{com}. *D_s measure = Median of the SD
. by lottery Type: signrank x_sd1=x_sd2

{txt}{hline}
-> lottery = 0, Type = 1

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      7{col 26}        35{col 38}        18
    {txt}Negative {c |}{res}{col 17}      1{col 26}         1{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_sd1 = x_sd2
{col 10}z = {res}{ralign 6:2.380}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.0173}
{txt}{col 1}Exact prob = {res}{ralign 6:0.0156}

{txt}{hline}
-> lottery = 0, Type = 2

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      6{col 26}        24{col 38}        18
    {txt}Negative {c |}{res}{col 17}      2{col 26}        12{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_sd1 = x_sd2
{col 10}z = {res}{ralign 6:0.840}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.4008}
{txt}{col 1}Exact prob = {res}{ralign 6:0.4609}

{txt}{hline}
-> lottery = 1, Type = 1

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      4{col 26}        20{col 38}        18
    {txt}Negative {c |}{res}{col 17}      4{col 26}        16{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_sd1 = x_sd2
{col 10}z = {res}{ralign 6:0.280}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.7794}
{txt}{col 1}Exact prob = {res}{ralign 6:0.8438}

{txt}{hline}
-> lottery = 1, Type = 2

Wilcoxon signed-rank test

        Sign {c |}      Obs   Sum ranks    Expected
{hline 13}{c +}{hline 33}
    Positive {c |}{res}{col 17}      4{col 26}        16{col 38}        18
    {txt}Negative {c |}{res}{col 17}      4{col 26}        20{col 38}        18
        {txt}Zero {c |}{res}{col 17}      0{col 26}         0{col 38}         0
{txt}{hline 13}{c +}{hline 33}
         All {c |}{res}{col 17}      8{col 26}        36{col 38}        36

{txt}Unadjusted variance{col 22}{res}     51.00
{txt}Adjustment for ties{col 22}{res}      0.00
{txt}Adjustment for zeros{col 22}{res}      0.00
{txt}{col 22}{hline 10}
Adjusted variance{col 22}{res}     51.00

{txt}H0: x_sd1 = x_sd2
{col 10}z = {res}{ralign 6:-0.280}
{txt}{col 1}Prob > |z| = {res}{ralign 6:0.7794}
{txt}{col 1}Exact prob = {res}{ralign 6:0.8438}
{txt}
{com}. 
. *Compare Types*
. save cv_tests, replace
{txt}{p 0 4 2}
file {bf}
cv_tests.dta{rm}
saved
{p_end}

{com}. 
. keep if Type==1
{txt}(16 observations deleted)

{com}. rename x_med_sd x_sd1
{res}{err}variable {bf}x_med_sd{sf} not found
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear 
{txt}
{com}. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. 
. sort subjectid Period
{txt}
{com}. by subjectid: gen totaltypea=typea[1]
{txt}
{com}. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
{txt}(4,879 real changes made)

{com}. gen first20=0
{txt}
{com}. replace first20=1 if part==3
{txt}(2,560 real changes made)

{com}. 
. 
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. label var xjow "Joy of winning"
{txt}
{com}. label var alpha "$\alpha$"
{txt}
{com}. label var risk "Risk aversion"
{txt}
{com}. label var loss "Loss aversion"
{txt}
{com}. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"
{txt}
{com}. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2037                                         {txt}min = {res}        10
{txt}     Between = {res}0.0951                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1651                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-21.62866{col 26}{space 2} 5.635731{col 37}{space 1}   -3.84{col 46}{space 3}0.000{col 54}{space 4}-32.67449{col 67}{space 3}-10.58283
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 12.60962{col 26}{space 2} 4.003287{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} 4.763325{col 67}{space 3} 20.45592
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 9.848289{col 26}{space 2} 5.636506{col 37}{space 1}    1.75{col 46}{space 3}0.081{col 54}{space 4} -1.19906{col 67}{space 3} 20.89564
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2}-13.07432{col 26}{space 2}  .215295{col 37}{space 1}  -60.73{col 46}{space 3}0.000{col 54}{space 4}-13.49629{col 67}{space 3}-12.65235
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-6.251099{col 26}{space 2} .2136798{col 37}{space 1}  -29.25{col 46}{space 3}0.000{col 54}{space 4}-6.669904{col 67}{space 3}-5.832294
{txt}{space 9}11  {c |}{col 14}{res}{space 2} .2194068{col 26}{space 2} .2167097{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.2053364{col 67}{space 3}   .64415
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-14.51714{col 26}{space 2} .2189171{col 37}{space 1}  -66.31{col 46}{space 3}0.000{col 54}{space 4}-14.94621{col 67}{space 3}-14.08807
{txt}{space 9}13  {c |}{col 14}{res}{space 2} .0340119{col 26}{space 2} .2334322{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-.4235068{col 67}{space 3} .4915305
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-7.736819{col 26}{space 2} .2419127{col 37}{space 1}  -31.98{col 46}{space 3}0.000{col 54}{space 4}-8.210959{col 67}{space 3}-7.262678
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2}-1.831103{col 26}{space 2}  .233923{col 37}{space 1}   -7.83{col 46}{space 3}0.000{col 54}{space 4}-2.289584{col 67}{space 3}-1.372623
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  45.5148{col 26}{space 2} 5.654182{col 37}{space 1}    8.05{col 46}{space 3}0.000{col 54}{space 4} 34.43281{col 67}{space 3}  56.5968
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.531932
     {txt}sigma_e {c |} {res} 24.428128
         {txt}rho {c |} {res} .33997117{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store A
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0310                                         {txt}min = {res}        13
{txt}     Between = {res}0.1809                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0846                                         {txt}max = {res}        30

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-8.823015{col 26}{space 2} 2.707373{col 37}{space 1}   -3.26{col 46}{space 3}0.001{col 54}{space 4}-14.12937{col 67}{space 3}-3.516661
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 15.64664{col 26}{space 2} 6.305487{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} 3.288109{col 67}{space 3} 28.00516
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} .7617391{col 26}{space 2} 2.707106{col 37}{space 1}    0.28{col 46}{space 3}0.778{col 54}{space 4}-4.544092{col 67}{space 3}  6.06757
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}1  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}2  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}3  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}4  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}5  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}6  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}7  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}8  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 10}9  {c |}{col 14}{res}{space 2} 17.37971{col 26}{space 2} .0574491{col 37}{space 1}  302.52{col 46}{space 3}0.000{col 54}{space 4} 17.26711{col 67}{space 3} 17.49231
{txt}{space 9}10  {c |}{col 14}{res}{space 2}-9.457426{col 26}{space 2} .0672525{col 37}{space 1} -140.63{col 46}{space 3}0.000{col 54}{space 4}-9.589238{col 67}{space 3}-9.325613
{txt}{space 9}11  {c |}{col 14}{res}{space 2} 7.052316{col 26}{space 2}   .05702{col 37}{space 1}  123.68{col 46}{space 3}0.000{col 54}{space 4} 6.940559{col 67}{space 3} 7.164074
{txt}{space 9}12  {c |}{col 14}{res}{space 2}-1.198003{col 26}{space 2} .0572216{col 37}{space 1}  -20.94{col 46}{space 3}0.000{col 54}{space 4}-1.310156{col 67}{space 3}-1.085851
{txt}{space 9}13  {c |}{col 14}{res}{space 2}-2.559409{col 26}{space 2} .0544918{col 37}{space 1}  -46.97{col 46}{space 3}0.000{col 54}{space 4}-2.666211{col 67}{space 3}-2.452607
{txt}{space 9}14  {c |}{col 14}{res}{space 2}-11.53917{col 26}{space 2} .0600383{col 37}{space 1} -192.20{col 46}{space 3}0.000{col 54}{space 4}-11.65684{col 67}{space 3} -11.4215
{txt}{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 9}16  {c |}{col 14}{res}{space 2} .8415434{col 26}{space 2} .0543048{col 37}{space 1}   15.50{col 46}{space 3}0.000{col 54}{space 4}  .735108{col 67}{space 3} .9479789
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 36.89935{col 26}{space 2} 2.515556{col 37}{space 1}   14.67{col 46}{space 3}0.000{col 54}{space 4} 31.96895{col 67}{space 3} 41.82975
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 17.820295
     {txt}sigma_e {c |} {res} 31.362447
         {txt}rho {c |} {res} .24406027{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store B
{txt}
{com}. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1223                                         {txt}min = {res}        13
{txt}     Between = {res}0.1529                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.1389                                         {txt}max = {res}        28

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2}-5.882275{col 26}{space 2} 3.203799{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4} -12.1616{col 67}{space 3} .3970548
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 10.74005{col 26}{space 2} 5.453056{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0522542{col 67}{space 3} 21.42784
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 15.58286{col 26}{space 2} 3.192418{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 54}{space 4} 9.325839{col 67}{space 3} 21.83989
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 5.564767{col 26}{space 2} .0909531{col 37}{space 1}   61.18{col 46}{space 3}0.000{col 54}{space 4} 5.386502{col 67}{space 3} 5.743032
{txt}{space 10}3  {c |}{col 14}{res}{space 2} .7650709{col 26}{space 2} .0590974{col 37}{space 1}   12.95{col 46}{space 3}0.000{col 54}{space 4} .6492421{col 67}{space 3} .8808996
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-7.437572{col 26}{space 2} .0175748{col 37}{space 1} -423.20{col 46}{space 3}0.000{col 54}{space 4}-7.472018{col 67}{space 3}-7.403126
{txt}{space 10}5  {c |}{col 14}{res}{space 2} 17.36228{col 26}{space 2} .0237691{col 37}{space 1}  730.45{col 46}{space 3}0.000{col 54}{space 4} 17.31569{col 67}{space 3} 17.40887
{txt}{space 10}6  {c |}{col 14}{res}{space 2} 4.723308{col 26}{space 2} .0177295{col 37}{space 1}  266.41{col 46}{space 3}0.000{col 54}{space 4} 4.688559{col 67}{space 3} 4.758057
{txt}{space 10}7  {c |}{col 14}{res}{space 2} 19.62122{col 26}{space 2} .0262991{col 37}{space 1}  746.08{col 46}{space 3}0.000{col 54}{space 4} 19.56967{col 67}{space 3} 19.67276
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 12.94197{col 26}{space 2} .0224908{col 37}{space 1}  575.43{col 46}{space 3}0.000{col 54}{space 4} 12.89789{col 67}{space 3} 12.98606
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 29.78293{col 26}{space 2}  .953521{col 37}{space 1}   31.23{col 46}{space 3}0.000{col 54}{space 4} 27.91406{col 67}{space 3}  31.6518
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  20.48359
     {txt}sigma_e {c |} {res} 23.540113
         {txt}rho {c |} {res} .43090403{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store D
{txt}
{com}. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}     1,280
{txt}Group variable: {res}subjectid                       {txt}Number of groups  = {res}        64

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0401                                         {txt}min = {res}        12
{txt}     Between = {res}0.1494                                         {txt}avg = {res}      20.0
{txt}     Overall = {res}0.0842                                         {txt}max = {res}        27

                                                {txt}{help j_robustsingular##|_new:Wald chi2(3)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:8} clusters in sessionid)}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}           x{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}d75 {c |}{col 14}{res}{space 2} 1.737756{col 26}{space 2} 4.139132{col 37}{space 1}    0.42{col 46}{space 3}0.675{col 54}{space 4}-6.374793{col 67}{space 3} 9.850305
{txt}{space 9}inv {c |}{col 14}{res}{space 2} 13.42103{col 26}{space 2} 7.400565{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-1.083816{col 67}{space 3} 27.92587
{txt}{space 5}first20 {c |}{col 14}{res}{space 2} 8.921215{col 26}{space 2} 4.128025{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .8304354{col 67}{space 3} 17.01199
{txt}{space 12} {c |}
{space 3}sessionid {c |}
{space 10}2  {c |}{col 14}{res}{space 2} 2.305278{col 26}{space 2}  .093803{col 37}{space 1}   24.58{col 46}{space 3}0.000{col 54}{space 4} 2.121428{col 67}{space 3} 2.489129
{txt}{space 10}3  {c |}{col 14}{res}{space 2}-16.83406{col 26}{space 2} .0728976{col 37}{space 1} -230.93{col 46}{space 3}0.000{col 54}{space 4}-16.97693{col 67}{space 3}-16.69118
{txt}{space 10}4  {c |}{col 14}{res}{space 2}-14.14342{col 26}{space 2} .0488577{col 37}{space 1} -289.48{col 46}{space 3}0.000{col 54}{space 4}-14.23918{col 67}{space 3}-14.04766
{txt}{space 10}5  {c |}{col 14}{res}{space 2} -2.74914{col 26}{space 2} .0235378{col 37}{space 1} -116.80{col 46}{space 3}0.000{col 54}{space 4}-2.795273{col 67}{space 3}-2.703007
{txt}{space 10}6  {c |}{col 14}{res}{space 2}-14.11689{col 26}{space 2} .0236555{col 37}{space 1} -596.77{col 46}{space 3}0.000{col 54}{space 4}-14.16325{col 67}{space 3}-14.07052
{txt}{space 10}7  {c |}{col 14}{res}{space 2}-2.829071{col 26}{space 2} .0416383{col 37}{space 1}  -67.94{col 46}{space 3}0.000{col 54}{space 4} -2.91068{col 67}{space 3}-2.747461
{txt}{space 10}8  {c |}{col 14}{res}{space 2} 7.493147{col 26}{space 2} .0326429{col 37}{space 1}  229.55{col 46}{space 3}0.000{col 54}{space 4} 7.429168{col 67}{space 3} 7.557126
{txt}{space 10}9  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}10  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}11  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}12  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}13  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}14  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}15  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 9}16  {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (empty)
{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 42.49708{col 26}{space 2} 2.131756{col 37}{space 1}   19.94{col 46}{space 3}0.000{col 54}{space 4} 38.31891{col 67}{space 3} 46.67524
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 20.396695
     {txt}sigma_e {c |} {res} 26.882051
         {txt}rho {c |} {res} .36536066{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. est store E
{txt}
{com}. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) 
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01)
{res}{txt}(output written to {browse  `"table5.doc"'})

{com}. 
{txt}end of do-file

{com}. browse subjectid

. sum risk

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 8}risk {c |}{res}      4,640    .1810345    .5672933       -1.5        1.5

{com}. sum loss

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 8}loss {c |}{res}      4,600    1.305006    .5292111   .5882353   3.333333

{com}. sum lossaverse

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 2}lossaverse {c |}{res}      5,120     .609375    .4879381          0          1

{com}. unique session subject Period
{err}command {bf}unique{sf} is unrecognized
{txt}{search r(199), local:r(199);}

{com}. browse session subject Period

. browse session Subject Period

. sort Subject

. sort Subject Period

. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{err}no; dataset in memory has changed since last saved
{txt}{search r(4), local:r(4);}

end of do-file

{search r(4), local:r(4);}

{com}.  do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{err}no; dataset in memory has changed since last saved
{txt}{search r(4), local:r(4);}

end of do-file

{search r(4), local:r(4);}

{com}. clear

. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. clear all 
{res}{txt}
{com}. /*desktop directory
> cd "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2"
> */
. *laptop directory
. cd "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2"
{res}C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2
{txt}
{com}. 
. *school computer directory
. 
. *Start
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. 
. ****************************************
. *************REPLICATION****************
. ****************************************
. 
. *******************
. ******FIGURE 1*****
. *******************
. 
. *****TREATMENTS***
. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x1hat x1eq, by(contest alpha)
{res}{txt}
{com}. 
. gen time=1
{txt}
{com}. rename x1hat observed
{res}{txt}
{com}. rename x1eq equilibrium
{res}{txt}
{com}. 
. save d1, replace
{txt}{p 0 4 2}
file {bf}
d1.dta{rm}
saved
{p_end}

{com}. 
. **Step 2**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x2hat x2eq, by(contest alpha)
{res}{txt}
{com}. 
. gen time=2
{txt}
{com}. rename x2hat observed
{res}{txt}
{com}. rename x2eq equilibrium
{res}{txt}
{com}. 
. save d2, replace
{txt}{p 0 4 2}
file {bf}
d2.dta{rm}
saved
{p_end}

{com}. 
. **Step 3**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x12hat x12eq, by(contest alpha)
{res}{txt}
{com}. gen time=3
{txt}
{com}. rename x12hat observed
{res}{txt}
{com}. rename x12eq equilibrium
{res}{txt}
{com}. 
. save d12, replace
{txt}{p 0 4 2}
file {bf}
d12.dta{rm}
saved
{p_end}

{com}. 
. append using d1
{txt}
{com}. append using d2
{txt}
{com}. 
. gen a25=1 if alpha==0.25
{txt}(6 missing values generated)

{com}. replace a25=2 if alpha==0.75
{txt}(6 real changes made)

{com}. gen alphag=1 if alpha==0.25
{txt}(6 missing values generated)

{com}. replace alphag=2 if alpha==0.75
{txt}(6 real changes made)

{com}. gen timeg=1 if time==1
{txt}(8 missing values generated)

{com}. replace timeg=2 if time==2
{txt}(4 real changes made)

{com}. replace timeg=3 if time==3
{txt}(4 real changes made)

{com}. 
. label var observed "Observed"
{txt}
{com}. label var equilibrium "Equilibrium"
{txt}
{com}. 
. save treatments, replace
{txt}{p 0 4 2}
file {bf}
treatments.dta{rm}
saved
{p_end}

{com}. 
. sort time
{txt}
{com}. *label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "
. label define a25 0 " " 1 "alpha=0.25" 2 "0.75" 3 " "
{txt}
{com}. label define time 1 "Type A - Round 1" 2 "Type B - Round 1" 3 "Type A - Round 2"
{txt}
{com}. label val timeg time
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. format observed %9.2f
{txt}
{com}. format equilibrium %9.2f
{txt}
{com}. 
. *All Pay
. twoway scatter observed equilibrium alphag if contest=="All Pay Auction", ///
> by(timeg, cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabposition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1APA, replace)
{res}{txt}file {bf:fig1APA.gph} saved

{com}. graph use fig1APA
{res}{txt}
{com}. graph export fig1APA.pdf, replace
{txt}{p 0 4 2}
file {bf}
fig1APA.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *Lottery
. twoway scatter observed equilibrium alphag if contest=="Lottery", ///
> by(timeg , cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabposition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1Lott, replace)
{res}{txt}file {bf:fig1Lott.gph} saved

{com}. graph use fig1Lott
{res}{txt}
{com}. graph export fig1Lott.pdf, replace
{txt}{p 0 4 2}
file {bf}
fig1Lott.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *******************
. ******FIGURE 2*****
. *******************
. 
. *****HISTOGRAMS****
. clear 
{txt}
{com}. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. *Type A*
.    hist x1hat if Type==1 & lottery==0 & alpha==0.25, ///
>      xline(75) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.25") col(blue) lc(black) saving(1APA25, replace) 
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1APA25.gph} saved

{com}.    hist x1hat if Type==1 & lottery==0 & alpha==0.75, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.75") col(blue) lc(black) saving(1APA75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1APA75.gph} saved

{com}.    hist x1hat if Type==1 & lottery==1 & alpha==0.25, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.25") col(blue) lc(black) saving(1Lott25, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1Lott25.gph} saved

{com}.    hist x1hat if Type==1 & lottery==1 & alpha==0.75, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.75") col(blue) lc(black) saving(1Lott75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1Lott75.gph} saved

{com}. 
. gr combine 1APA25.gph 1APA75.gph 1Lott25.gph 1Lott75.gph, saving(1hist, replace)
{res}{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

end of do-file

{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{err}no; dataset in memory has changed since last saved
{txt}{search r(4), local:r(4);}

{com}. 
. 
. 
. drop if RiskLine1==.
{err}RiskLine1 not found
{txt}{search r(111), local:r(111);}

{com}. 
. drop treatment Group Profit TotalProfit Participate
{err}variable {bf}treatment{sf} not found
{txt}{search r(111), local:r(111);}

{com}. 
. 
. 
. save "Contests with Revisions Replication files\RiskPrefdtasSession1.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtasSession1.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtasSession1.dta{rm}
saved
{p_end}

{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"

. 
. 
. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. 
. drop treatment Group Profit TotalProfit Participate

. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. save "Contests with Revisions Replication files\RiskPrefdtas\Session1.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session1.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session1.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session1.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session1.dta{rm}
saved
{p_end}

{com}. 
. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(1,008 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session2.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session2.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session2.dta{rm}
saved
{p_end}

{com}. 
. *session3
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session3_AllPay_75_25_Saturday_04_09_11_00.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(336 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session3.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session3.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session3.dta{rm}
saved
{p_end}

{com}. 
. *session4
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session4_Lottery_25_75_Saturday_04_09_1_15.dta"" 
{err}invalid '"' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session1.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session1.dta{rm}
saved
{p_end}

{com}. 
. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(1,008 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session2.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session2.dta{rm}
saved
{p_end}

{com}. 
. *session3
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session3_AllPay_75_25_Saturday_04_09_11_00.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(336 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session3.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session3.dta{rm}
saved
{p_end}

{com}. 
. *session4
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session4_Lottery_25_75_Saturday_04_09_1_15.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session4.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session4.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session4.dta{rm}
saved
{p_end}

{com}. 
. *session5
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session5_Lottery_25_75_Saturday_04_09_3_30.dta" 
{txt}
{com}. 
. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session5.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session5.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session5.dta{rm}
saved
{p_end}

{com}. 
. *session6
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session6_Lottery_75_25_Sunday_04_10_11_30.dta"  
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session6.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session6.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session6.dta{rm}
saved
{p_end}

{com}. 
. *session7
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session7_AllPay_25_75_Sunday_04_10_1_45.dta"" 
{err}invalid '"' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session1.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session1.dta{rm}
saved
{p_end}

{com}. 
. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(1,008 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session2.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session2.dta{rm}
saved
{p_end}

{com}. 
. *session3
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session3_AllPay_75_25_Saturday_04_09_11_00.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(336 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session3.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session3.dta{rm}
saved
{p_end}

{com}. 
. *session4
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session4_Lottery_25_75_Saturday_04_09_1_15.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session4.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session4.dta{rm}
saved
{p_end}

{com}. 
. *session5
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session5_Lottery_25_75_Saturday_04_09_3_30.dta" 
{txt}
{com}. 
. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session5.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session5.dta{rm}
saved
{p_end}

{com}. 
. *session6
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session6_Lottery_75_25_Sunday_04_10_11_30.dta"  
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session6.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session6.dta{rm}
saved
{p_end}

{com}. 
. *session7
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session7_AllPay_25_75_Sunday_04_10_1_45.dta"" 
{err}invalid '"' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session1.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session1.dta{rm}
saved
{p_end}

{com}. 
. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(1,008 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session2.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session2.dta{rm}
saved
{p_end}

{com}. 
. *session3
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session3_AllPay_75_25_Saturday_04_09_11_00.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(336 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session3.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session3.dta{rm}
saved
{p_end}

{com}. 
. *session4
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session4_Lottery_25_75_Saturday_04_09_1_15.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session4.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session4.dta{rm}
saved
{p_end}

{com}. 
. *session5
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session5_Lottery_25_75_Saturday_04_09_3_30.dta" 
{txt}
{com}. 
. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session5.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session5.dta{rm}
saved
{p_end}

{com}. 
. *session6
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session6_Lottery_75_25_Sunday_04_10_11_30.dta"  
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session6.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session6.dta{rm}
saved
{p_end}

{com}. 
. *session7
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session7_AllPay_25_75_Sunday_04_10_1_45.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session7.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session7.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session7.dta{rm}
saved
{p_end}

{com}. 
. *session8
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session8_AllPay_25_75_Sunday_04_10_4_00.dta"  
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session8.dta", replace
{txt}{p 0 4 2}
(file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session8.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session8.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. do mergeriskpref.do
{txt}
{com}. 
. *session 1
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session1_Lottery_75_25_Friday_04_08_11_30.dta"
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session1.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session1.dta{rm}
saved
{p_end}

{com}. 
. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(1,008 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session2.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session2.dta{rm}
saved
{p_end}

{com}. 
. *session3
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session3_AllPay_75_25_Saturday_04_09_11_00.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(336 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session3.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session3.dta{rm}
saved
{p_end}

{com}. 
. *session4
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session4_Lottery_25_75_Saturday_04_09_1_15.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session4.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session4.dta{rm}
saved
{p_end}

{com}. 
. *session5
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session5_Lottery_25_75_Saturday_04_09_3_30.dta" 
{txt}
{com}. 
. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session5.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session5.dta{rm}
saved
{p_end}

{com}. 
. *session6
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session6_Lottery_75_25_Sunday_04_10_11_30.dta"  
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session6.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session6.dta{rm}
saved
{p_end}

{com}. 
. *session7
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session7_AllPay_25_75_Sunday_04_10_1_45.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session7.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session7.dta{rm}
saved
{p_end}

{com}. 
. *session8
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session8_AllPay_25_75_Sunday_04_10_4_00.dta"  
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(672 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate
{txt}
{com}. 
. save "Contests with Revisions Replication files\RiskPrefdtas\Session8.dta", replace
{txt}{p 0 4 2}
file {bf}
Contests with Revisions Replication files\RiskPrefdtas\Session8.dta{rm}
saved
{p_end}

{com}. 
. **Merging with main Ds
. 
. *.do file that came with dataset
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
{txt}end of do-file

{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. merge 1:m session Subject using Session1.dta
{res}{err}{p 0 4 2}
file {bf:{err}Session1.dta}
not found
{p_end}
{txt}{search r(601), local:r(601);}

end of do-file

{search r(601), local:r(601);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. cd "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2\Contests with Revisions Replication files\RiskPrefdtas"
{res}C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2\Contests with Revisions Replication files\RiskPrefdtas
{txt}
{com}. 
. merge 1:m session Subject using Session1.dta
{res}{err}{p 0 4 2}
variable{err}s{err} session
Subject
do not uniquely identify observations in the
master data
{p_end}
{txt}{search r(459), local:r(459);}

end of do-file

{search r(459), local:r(459);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. merge m:1 session Subject using Session1.dta
{res}{err}{p 0 4 2}
variable{err}s{err} session
Subject
do not uniquely identify observations in the
using data
{p_end}
{txt}{search r(459), local:r(459);}

end of do-file

{search r(459), local:r(459);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. merge m:1 session Subject using Session1.dta
{res}{err}{p 0 4 2}
variable{err}s{err} session
Subject
do not uniquely identify observations in the
using data
{p_end}
{txt}{search r(459), local:r(459);}

end of do-file

{search r(459), local:r(459);}

{com}. do "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2\Soloproj.do"
{txt}
{com}. clear all 
{res}{txt}
{com}. /*desktop directory
> cd "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2"
> */
. *laptop directory
. cd "C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2"
{res}C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2
{txt}
{com}. 
. *school computer directory
. 
. *Start
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. 
. ****************************************
. *************REPLICATION****************
. ****************************************
. 
. *******************
. ******FIGURE 1*****
. *******************
. 
. *****TREATMENTS***
. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x1hat x1eq, by(contest alpha)
{res}{txt}
{com}. 
. gen time=1
{txt}
{com}. rename x1hat observed
{res}{txt}
{com}. rename x1eq equilibrium
{res}{txt}
{com}. 
. save d1, replace
{txt}{p 0 4 2}
file {bf}
d1.dta{rm}
saved
{p_end}

{com}. 
. **Step 2**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x2hat x2eq, by(contest alpha)
{res}{txt}
{com}. 
. gen time=2
{txt}
{com}. rename x2hat observed
{res}{txt}
{com}. rename x2eq equilibrium
{res}{txt}
{com}. 
. save d2, replace
{txt}{p 0 4 2}
file {bf}
d2.dta{rm}
saved
{p_end}

{com}. 
. **Step 3**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(4 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(6 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
{txt}(2,560 observations deleted)

{com}. sort contest alpha
{txt}
{com}. collapse x12hat x12eq, by(contest alpha)
{res}{txt}
{com}. gen time=3
{txt}
{com}. rename x12hat observed
{res}{txt}
{com}. rename x12eq equilibrium
{res}{txt}
{com}. 
. save d12, replace
{txt}{p 0 4 2}
file {bf}
d12.dta{rm}
saved
{p_end}

{com}. 
. append using d1
{txt}
{com}. append using d2
{txt}
{com}. 
. gen a25=1 if alpha==0.25
{txt}(6 missing values generated)

{com}. replace a25=2 if alpha==0.75
{txt}(6 real changes made)

{com}. gen alphag=1 if alpha==0.25
{txt}(6 missing values generated)

{com}. replace alphag=2 if alpha==0.75
{txt}(6 real changes made)

{com}. gen timeg=1 if time==1
{txt}(8 missing values generated)

{com}. replace timeg=2 if time==2
{txt}(4 real changes made)

{com}. replace timeg=3 if time==3
{txt}(4 real changes made)

{com}. 
. label var observed "Observed"
{txt}
{com}. label var equilibrium "Equilibrium"
{txt}
{com}. 
. save treatments, replace
{txt}{p 0 4 2}
file {bf}
treatments.dta{rm}
saved
{p_end}

{com}. 
. sort time
{txt}
{com}. *label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "
. label define a25 0 " " 1 "alpha=0.25" 2 "0.75" 3 " "
{txt}
{com}. label define time 1 "Type A - Round 1" 2 "Type B - Round 1" 3 "Type A - Round 2"
{txt}
{com}. label val timeg time
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. label val alphag a25
{txt}
{com}. label var alphag "Treatment"
{txt}
{com}. format observed %9.2f
{txt}
{com}. format equilibrium %9.2f
{txt}
{com}. 
. *All Pay
. twoway scatter observed equilibrium alphag if contest=="All Pay Auction", ///
> by(timeg, cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabposition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1APA, replace)
{res}{txt}file {bf:fig1APA.gph} saved

{com}. graph use fig1APA
{res}{txt}
{com}. graph export fig1APA.pdf, replace
{txt}{p 0 4 2}
file {bf}
fig1APA.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *Lottery
. twoway scatter observed equilibrium alphag if contest=="Lottery", ///
> by(timeg , cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabposition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1Lott, replace)
{res}{txt}file {bf:fig1Lott.gph} saved

{com}. graph use fig1Lott
{res}{err}error (1) reading file
Error in file, skipping lines:
 .plotregion1.plot1.style.editstyle connect(l) editcopy
.plotregion1.plot1._maybe_override_type
.plotregion1.Declare plot2 = .yxview.new , type(scatter) serset() yvariable() xvariable()  lvariable()  plotregion() style(scheme p2) 
.plotregion1.plot2.style.editstyle line(color(black)) area(linestyle(color(black))) line(pattern(dash)) area(linestyle(pattern(dash))) marker(fillcolor(black) linestyle(color(black))) label(position(12)) label(textstyle(size(medium))) label(textstyle(color(black))) editcopy
.plotregion1.plot2.style.editstyle connect(l) editcopy
.plotregion1.plot2._maybe_override_type
.plotregion1.clear_scales
.plotregion1.reset_scales , noclear
.n_views = 2
.n_plotregions = 1
.last_style = 2
.x_scales = `" "1""'
.y_scales = `" "1""'
.create_axes 1 1 "9" "" 9
.insert (legend = .legend_g.new, graphs() style(scheme)) below plotregion1 , ring(3) 
.legend.style.editstyle box_alignment(S) editcopy
.legend.holes = ""
.legend.style.editstyle  force_draw(no) force_nodraw(yes) editcopy
.legend.holes = ""
.legend.style.editstyle  force_draw(no) force_nodraw(yes) editcopy
.legend.insert (note = .sized_textbox.new, mtextq(`""') style(scheme leg_note) ) below plotregion1 , ring(3) 
.legend.note.style.editstyle box_alignment(SW) editcopy
.legend.note.style.editstyle horizontal(left) editcopy
.legend.insert (caption = .sized_textbox.new, mtextq(`""') style(scheme leg_caption) ) below plotregion1 , ring(5) 
.legend.caption.style.editstyle box_alignment(SW) editcopy
.legend.caption.style.editstyle horizontal(left) editcopy
.legend.insert (subtitle = .sized_textbox.new, mtextq(`""') style(scheme leg_subtitle) ) above plotregion1 , ring(6) 
.legend.subtitle.style.editstyle box_alignment(N) editcopy
.legend.subtitle.style.editstyle horizontal(center) editcopy
.legend.insert (title = .sized_textbox.new, mtextq(`""') style(scheme leg_title) ) above plotregion1 , ring(7) 
.legend.title.style.editstyle box_alignment(N) editcopy
.legend.title.style.editstyle horizontal(center) editcopy
.legend.rebuild
.legend.repositionkeys
.xaxis1.major.clear
.xaxis1.style.editstyle majorstyle(numticks(4)) editcopy
.xaxis1.major.suggest_ticks 4
.xaxis1.reset_scale reinit
.xaxis1.major.clear
.xaxis1.major.add_ticks  0 1 2 3 ,  
.xaxis1.major.set_default 0
.xaxis1.reset_scale reinit
.xaxis1.style.editstyle majorstyle( use_labels(yes) tickstyle(  textstyle( size(medium))) ) editcopy
.yaxis1.major.clear
.yaxis1.style.editstyle majorstyle(numticks(4)) editcopy
.yaxis1.major.suggest_ticks 4
.yaxis1.reset_scale reinit
.yaxis1.major.clear
.yaxis1.major.range_ticks 0 50 25
.yaxis1.reset_scale reinit
.yaxis1.title.edit , mtextq(`""Expenditure""')   replace
.insert (r1title = .sized_textbox.new, mtextq(`""') style(scheme r1title) orientation(vertical)) rightof plotregion1 , ring(1) 
.insert (r2title = .sized_textbox.new, mtextq(`""') style(scheme r2title) orientation(vertical)) rightof plotregion1 , ring(2) 
.insert (l1title = .sized_textbox.new, mtextq(`""') style(scheme l1title) orientation(vertical)) leftof plotregion1 , ring(1) 
.insert (l2title = .sized_textbox.new, mtextq(`""') style(scheme l2title) orientation(vertical)) leftof plotregion1 , ring(2) 
.insert (t1title = .sized_textbox.new, mtextq(`""') style(scheme t1title) ) above plotregion1 , ring(1) 
.insert (t2title = .sized_textbox.new, mtextq(`""') style(scheme t2title) ) above plotregion1 , ring(2) 
.insert (b1title = .sized_textbox.new, mtextq(`""') style(scheme b1title) ) below plotregion1 , ring(1) 
.insert (b2title = .sized_textbox.new, mtextq(`""') style(scheme b1title) ) below plotregion1 , ring(2) 
.insert (note = .sized_textbox.new, mtextq(`""') style(scheme note) ) below plotregion1 , ring(4) 
.note.style.editstyle box_alignment(SW) editcopy
.note.style.editstyle horizontal(left) editcopy
.insert (caption = .sized_textbox.new, mtextq(`""') style(scheme caption) ) below plotregion1 , ring(5) 
.caption.style.editstyle box_alignment(SW) editcopy
.caption.style.editstyle horizontal(left) editcopy
.insert (subtitle = .sized_textbox.new, mtextq(`"Type A - Round 2"') style(scheme subtitle) ) above plotregion1 , ring(6) 
.subtitle.style.editstyle box_alignment(N) editcopy
.subtitle.style.editstyle horizontal(center) editcopy
.subtitle.as_textbox.setstyle, style(yes)
.subtitle.style.editstyle  drawbox(yes) linestyle( color(scheme bylabel_outline)) editcopy
.insert (title = .sized_textbox.new, mtextq(`""') style(scheme title) ) above plotregion1 , ring(7) 
.title.style.editstyle box_alignment(N) editcopy
.title.style.editstyle horizontal(center) editcopy
.insert (spacert = .spacer.new) above plotregion1 , ring(11)
.insert (spacerb = .spacer.new) below plotregion1 , ring(11)
.insert (spacerl = .spacer.new) leftof plotregion1 , ring(11)
.insert (spacerr = .spacer.new) rightof plotregion1 , ring(11)
<EndItem>
{p 0 4 2}
__Map.K10d8e8c8.ref: class type not found
{p_end}
error (4018) reading file
Error in file, skipping lines:
 .MapGraphs
.insert (plotregion1 = .graph_g.new, style()) new
.plotregion1._dialog = "grid"
.SetLegend ,  
.SetPlegend ,  
.SetClegend ,  
.set_placement
.set_axes_titles
.set_axes_shown
.set_axes_labels
.set_axes_ticks
.set_rescaled
.set_shrink
.set_scale 
.set_iscale 
.set_outer_axes
.set_styles
.set_plot_styles
.set_subgraphs
.insert (r1title = .sized_textbox.new, mtextq(`""') style(scheme r1title) orientation(vertical)) rightof plotregion1 , ring(1) 
.insert (r2title = .sized_textbox.new, mtextq(`""') style(scheme r2title) orientation(vertical)) rightof plotregion1 , ring(2) 
.insert (l1title = .sized_textbox.new, mtextq(`"`"Expenditure"'"') style(scheme l1title) orientation(vertical)) leftof plotregion1 , ring(1) 
.insert (l2title = .sized_textbox.new, mtextq(`""') style(scheme l2title) orientation(vertical)) leftof plotregion1 , ring(2) 
.insert (t1title = .sized_textbox.new, mtextq(`""') style(scheme t1title) ) above plotregion1 , ring(1) 
.insert (t2title = .sized_textbox.new, mtextq(`""') style(scheme t2title) ) above plotregion1 , ring(2) 
.insert (b1title = .sized_textbox.new, mtextq(`"`"Treatment"'"') style(scheme b1title) ) below plotregion1 , ring(1) 
.insert (b2title = .sized_textbox.new, mtextq(`""') style(scheme b1title) ) below plotregion1 , ring(2) 
.insert (note = .sized_textbox.new, mtextq(`""""') style(scheme note) ) below plotregion1 , ring(4) 
.note.style.editstyle box_alignment(SW) editcopy
.note.style.editstyle horizontal(left) editcopy
.insert (caption = .sized_textbox.new, mtextq(`""') style(scheme caption) ) below plotregion1 , ring(5) 
.caption.style.editstyle box_alignment(SW) editcopy
.caption.style.editstyle horizontal(left) editcopy
.insert (subtitle = .sized_textbox.new, mtextq(`""') style(scheme subtitle) ) above plotregion1 , ring(6) 
.subtitle.style.editstyle box_alignment(N) editcopy
.subtitle.style.editstyle horizontal(center) editcopy
.insert (title = .sized_textbox.new, mtextq(`""') style(scheme title) ) above plotregion1 , ring(7) 
.title.style.editstyle box_alignment(N) editcopy
.title.style.editstyle horizontal(center) editcopy
.insert (spacert = .spacer.new) above plotregion1 , ring(11)
.insert (spacerb = .spacer.new) below plotregion1 , ring(11)
.insert (spacerl = .spacer.new) leftof plotregion1 , ring(11)
.insert (spacerr = .spacer.new) rightof plotregion1 , ring(11)
.b1title.setstyle , style()
.l1title.setstyle , style()
.command = `"twoway scatter observed equilibrium alphag if contest=="Lottery", by(timeg , cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabposition(12 12) xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) legend(off) ylabel(0(25)50) ytitle("Expenditure") saving(fig1Lott, replace)"'
.date = " 6 Dec 2023"
.time = "19:01:37"
.dta_file = "treatments.dta"
.dta_date = " 6 Dec 2023 19:01"
<EndItem>
{res}{txt}
{com}. graph export fig1Lott.pdf, replace
{txt}{p 0 4 2}
file {bf}
fig1Lott.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. *******************
. ******FIGURE 2*****
. *******************
. 
. *****HISTOGRAMS****
. clear 
{txt}
{com}. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"
{txt}
{com}. clear
{txt}
{com}. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"
{txt}
{com}. 
. gen typea=1 if Type==1
{txt}(2,936 missing values generated)

{com}. replace typea=0 if Type==2
{txt}(2,680 real changes made)

{com}. 
. drop if alpha==.
{txt}(384 observations deleted)

{com}. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1
{txt}
{com}. replace lottery=0 if sessionid>8
{txt}(2,560 real changes made)

{com}. gen contest="Lottery" if lottery==1
{txt}(2,560 missing values generated)

{com}. replace contest="All Pay Auction" if lottery==0
{txt}variable {bf}{res}contest{sf}{txt} was {bf}{res}str7{sf}{txt} now {bf}{res}str15{sf}
{txt}(2,560 real changes made)

{com}. 
. *Periods 1-20 and 21-40
. gen contestperiod=0
{txt}
{com}. replace contestperiod=1 if part==3
{txt}(2,560 real changes made)

{com}. replace contestperiod=1 if part==4
{txt}(2,560 real changes made)

{com}. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"
{txt}
{com}. label var x2hat "Type B - Round 1"
{txt}
{com}. label var x12hat "Type A - Round 2"
{txt}
{com}. label var xjow "Investment for reward of $0"
{txt}
{com}. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
{txt}(3,421 real changes made, 3,421 to missing)

{com}. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
{txt}(2,826 missing values generated)

{com}. replace br1=0.01 if lottery==1 & x2hat==0
{txt}(266 real changes made)

{com}. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
{txt}(2,754 missing values generated)

{com}. replace br2=0.01 if lottery==1 & x1hat==0
{txt}(194 real changes made)

{com}. gen notunique=runiform()
{txt}
{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
{txt}(2,246 real changes made)

{com}. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
{txt}(7 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
{txt}(3 real changes made)

{com}. replace br1=0 if lottery==0 & x2hat==100
{txt}(304 real changes made)

{com}. gen diff_br_1=abs(x1hat-br1)
{txt}
{com}. gen diff_br_2=abs(x12hat-br1)
{txt}
{com}. 
. gen match2=1 if x12hat==x2hat
{txt}(4,906 missing values generated)

{com}. replace match2=0 if x12hat~=x2hat
{txt}(4,906 real changes made)

{com}. 
. gen x12guesshat=.
{txt}(5,120 missing values generated)

{com}. replace x12guesshat=x12guess if x12guess~=.
{txt}(1,699 real changes made)

{com}. replace x12guesshat=x1hat if Type==2 & x12guess==.
{txt}(861 real changes made)

{com}. 
. gen absdev=abs(x12guesshat-x12hat)
{txt}(2,560 missing values generated)

{com}. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x2eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. gen x12eq=Prize/4 if lottery==1
{txt}(2,560 missing values generated)

{com}. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
{txt}(2,560 real changes made)

{com}. 
. gen x12eq_expost=br1
{txt}
{com}. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1
{txt}
{com}. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
{txt}(1,280 real changes made)

{com}. 
. gen f75=1 if f25==0
{txt}(3,840 missing values generated)

{com}. replace f75=0 if f25==1
{txt}(3,840 real changes made)

{com}. 
. gen order="75-25" if f75==1
{txt}(3,840 missing values generated)

{com}. replace order="25-75" if f75==0
{txt}(3,840 real changes made)

{com}. 
. *Rescale period number
. gen periodt=Period
{txt}
{com}. replace periodt=Period-20 if Period>20
{txt}(2,560 real changes made)

{com}. 
. gen inv=1/periodt
{txt}
{com}. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0
{txt}
{com}. replace probwin1=1 if lottery==0 & x1hat>x2hat
{txt}(1,364 real changes made)

{com}. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
{txt}(110 real changes made)

{com}. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
{txt}(2,366 real changes made)

{com}. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
{txt}(22 real changes made)

{com}. 
. 
. *Dummy for alpha
. gen d75=0
{txt}
{com}. replace d75=1 if alpha==0.75
{txt}(2,560 real changes made)

{com}. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1
{txt}
{com}. replace validriskloss=0 if RiskLineSwitchToB==-1
{txt}(480 real changes made)

{com}. replace validriskloss=0 if LossLineSwitchToB==-1
{txt}(240 real changes made)

{com}. sum validriskloss if part==5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
validriskl~s {c |}{res}          0
{txt}
{com}. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1
{txt}
{com}. gen adist1=abs(x1hat-br1)
{txt}
{com}. gen adist1_sq=(x1hat-br1)^2
{txt}
{com}. gen dist2=x2hat-br2
{txt}(2,560 missing values generated)

{com}. *In Round 2
. gen dist12=x12hat-br1
{txt}
{com}. *Interaction with treatment
. gen distinter=dist12*lottery
{txt}
{com}. 
. 
. *Investing the value of the prize
. gen x1100=0
{txt}
{com}. replace x1100=1 if x1hat==100
{txt}(296 real changes made)

{com}. gen x2100=0
{txt}
{com}. replace x2100=1 if x2hat==100
{txt}(570 real changes made)

{com}. gen x12100=0
{txt}
{com}. replace x12100=1 if x12hat==100
{txt}(366 real changes made)

{com}. 
. 
. *Investing zero
. gen x10=0
{txt}
{com}. replace x10=1 if x1hat==0
{txt}(484 real changes made)

{com}. gen x20=0
{txt}
{com}. replace x20=1 if x2hat==0
{txt}(864 real changes made)

{com}. gen x120=0
{txt}
{com}. replace x120=1 if x12hat==0
{txt}(470 real changes made)

{com}. 
. *Upper bound
. gen ub=(1-alpha)*100
{txt}
{com}. replace ub=25 if contest=="Lottery"
{txt}(1,280 real changes made)

{com}. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1
{txt}
{com}. replace joyful=0 if xjow==0
{txt}(3,080 real changes made)

{com}. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB
{txt}
{com}. gen losssafechoices=20-LossLineSwitchToB 
{txt}
{com}. 
. gen riskaverse=0 
{txt}
{com}. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
{txt}(1,520 real changes made)

{com}. replace riskaverse=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskneutral=0 
{txt}
{com}. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
{txt}(2,040 real changes made)

{com}. replace riskneutral=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen riskloving=0 
{txt}
{com}. replace riskloving=1 if RiskLineSwitchToB>11
{txt}(1,560 real changes made)

{com}. replace riskloving=. if risksafechoices==-1
{txt}(0 real changes made)

{com}. 
. gen risk=. if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace risk=0.25-2.5 if RiskLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace risk=0.5-2.5 if RiskLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace risk=0.75-2.5 if RiskLineSwitchToB==3
{txt}(0 real changes made)

{com}. replace risk=1-2.5 if RiskLineSwitchToB==4
{txt}(80 real changes made)

{com}. replace risk=1.25-2.5 if RiskLineSwitchToB==5
{txt}(80 real changes made)

{com}. replace risk=1.5-2.5 if RiskLineSwitchToB==6
{txt}(0 real changes made)

{com}. replace risk=1.75-2.5 if RiskLineSwitchToB==7
{txt}(80 real changes made)

{com}. replace risk=2-2.5 if RiskLineSwitchToB==8
{txt}(480 real changes made)

{com}. replace risk=2.25-2.5 if RiskLineSwitchToB==9
{txt}(320 real changes made)

{com}. replace risk=2.5-2.5 if RiskLineSwitchToB==10
{txt}(960 real changes made)

{com}. replace risk=2.75-2.5 if RiskLineSwitchToB==11
{txt}(1,080 real changes made)

{com}. replace risk=3-2.5 if RiskLineSwitchToB==12
{txt}(960 real changes made)

{com}. replace risk=3.25-2.5 if RiskLineSwitchToB==13
{txt}(160 real changes made)

{com}. replace risk=3.5-2.5 if RiskLineSwitchToB==14
{txt}(120 real changes made)

{com}. replace risk=3.75-2.5 if RiskLineSwitchToB==15
{txt}(120 real changes made)

{com}. replace risk=4-2.5 if RiskLineSwitchToB==16
{txt}(200 real changes made)

{com}. replace risk=4.25-2.5 if RiskLineSwitchToB==17
{txt}(0 real changes made)

{com}. replace risk=4.5-2.5 if RiskLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace risk=4.75-2.5 if RiskLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace risk=5-2.5 if RiskLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
{txt}(5,120 missing values generated)

{com}. replace loss=5/0.5 if LossLineSwitchToB==1
{txt}(0 real changes made)

{com}. replace loss=5/1 if LossLineSwitchToB==2
{txt}(0 real changes made)

{com}. replace loss=5/1.5 if LossLineSwitchToB==3
{txt}(80 real changes made)

{com}. replace loss=5/2 if LossLineSwitchToB==4
{txt}(120 real changes made)

{com}. replace loss=5/2.5 if LossLineSwitchToB==5
{txt}(560 real changes made)

{com}. replace loss=5/3 if LossLineSwitchToB==6
{txt}(600 real changes made)

{com}. replace loss=5/3.5 if LossLineSwitchToB==7
{txt}(560 real changes made)

{com}. replace loss=5/4 if LossLineSwitchToB==8
{txt}(200 real changes made)

{com}. replace loss=5/4.5 if LossLineSwitchToB==9
{txt}(480 real changes made)

{com}. replace loss=5/5 if LossLineSwitchToB==10
{txt}(480 real changes made)

{com}. replace loss=5/5.5 if LossLineSwitchToB==11
{txt}(760 real changes made)

{com}. replace loss=5/6 if LossLineSwitchToB==12
{txt}(160 real changes made)

{com}. replace loss=5/6.5 if LossLineSwitchToB==13
{txt}(360 real changes made)

{com}. replace loss=5/7 if LossLineSwitchToB==14
{txt}(0 real changes made)

{com}. replace loss=5/7.5 if LossLineSwitchToB==15
{txt}(80 real changes made)

{com}. replace loss=5/8 if LossLineSwitchToB==16
{txt}(120 real changes made)

{com}. replace loss=5/8.5 if LossLineSwitchToB==17
{txt}(40 real changes made)

{com}. replace loss=5/9 if LossLineSwitchToB==18
{txt}(0 real changes made)

{com}. replace loss=5/9.5 if LossLineSwitchToB==19
{txt}(0 real changes made)

{com}. replace loss=5/10 if LossLineSwitchToB==20
{txt}(0 real changes made)

{com}. 
. *Loss aversion
. gen lossaverse=.
{txt}(5,120 missing values generated)

{com}. replace lossaverse=1 if LossLineSwitchToB<10
{txt}(3,120 real changes made)

{com}. replace lossaverse=0 if LossLineSwitchToB>=10
{txt}(2,000 real changes made)

{com}. replace lossaverse=. if LossLineSwitchToB==.
{txt}(0 real changes made)

{com}. 
. 
. *gender dummy
. gen female=1 if gender==2
{txt}(2,960 missing values generated)

{com}. replace female=0 if gender==1
{txt}(2,960 real changes made)

{com}. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
{txt}(3,200 missing values generated)

{com}. replace engineer=0 if major~=7
{txt}(3,200 real changes made)

{com}. gen economics=0
{txt}
{com}. replace economics=1 if major==2
{txt}(320 real changes made)

{com}. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
{txt}(2,560 missing values generated)

{com}. replace asian=0 if race~=4
{txt}(2,560 real changes made)

{com}. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
{txt}(4,920 missing values generated)

{com}. replace graduate=0 if class~=5
{txt}(4,920 real changes made)

{com}. 
. *REGRET variables*
. 
. sort contest
{txt}
{com}. by contest: egen medreg1=median(regret1)
{txt}
{com}. by contest: egen medreg2=median(regret2)
{txt}
{com}. by contest: egen medreg3=median(regret3)
{txt}
{com}. by contest: egen medreg4=median(regret4)
{txt}
{com}. 
. by contest: egen medhapp1=median(happiness1)
{txt}
{com}. by contest: egen medhapp2=median(happiness2)
{txt}
{com}. by contest: egen medhapp3=median(happiness3)
{txt}
{com}. by contest: egen medhapp4=median(happiness4)
{txt}
{com}. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0
{txt}
{com}. replace dreg1=1 if regret1>3
{txt}(960 real changes made)

{com}. gen dreg2=0
{txt}
{com}. replace dreg2=1 if regret2>3
{txt}(880 real changes made)

{com}. gen dreg3=0
{txt}
{com}. replace dreg3=1 if regret3>3
{txt}(1,960 real changes made)

{com}. gen dreg4=0
{txt}
{com}. replace dreg4=1 if regret4>3
{txt}(2,040 real changes made)

{com}. 
. gen dhapp1=0
{txt}
{com}. replace dhapp1=1 if happiness1>3
{txt}(4,200 real changes made)

{com}. gen dhapp2=0
{txt}
{com}. replace dhapp2=1 if happiness2>3
{txt}(3,760 real changes made)

{com}. gen dhapp3=0
{txt}
{com}. replace dhapp3=1 if happiness3>3
{txt}(840 real changes made)

{com}. gen dhapp4=0
{txt}
{com}. replace dhapp4=1 if happiness4>3
{txt}(800 real changes made)

{com}. 
. gen denvy1=0
{txt}
{com}. replace denvy1=1 if envy1>3
{txt}(680 real changes made)

{com}. gen denvy2=0
{txt}
{com}. replace denvy2=1 if envy2>3
{txt}(520 real changes made)

{com}. gen denvy3=0
{txt}
{com}. replace denvy3=1 if envy3>3
{txt}(2,160 real changes made)

{com}. gen denvy4=0
{txt}
{com}. replace denvy4=1 if envy4>3
{txt}(1,840 real changes made)

{com}. 
. gen block_x2=5
{txt}
{com}. replace block_x2=4 if x2hat<80
{txt}(4,042 real changes made)

{com}. replace block_x2=3 if x2hat<60
{txt}(3,344 real changes made)

{com}. replace block_x2=2 if x2hat<40
{txt}(2,656 real changes made)

{com}. replace block_x2=1 if x2hat<20
{txt}(1,924 real changes made)

{com}. 
. 
. gen won_contest1=0
{txt}
{com}. replace won_contest1=1 if payoff1==200-x
{txt}(2,336 real changes made)

{com}. replace won_contest1=1 if payoff1>100 & x>0
{txt}(224 real changes made)

{com}. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
{txt}(0 real changes made)

{com}. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. 
. gen won_contest2=0
{txt}
{com}. replace won_contest2=1 if payoff2==200-x12hat & Type==1
{txt}(971 real changes made)

{com}. replace won_contest2=1 if payoff2==200-x2hat & Type==2
{txt}(879 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
{txt}(660 real changes made)

{com}. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
{txt}(50 real changes made)

{com}. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
{txt}(247 real changes made)

{com}. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
{txt}(0 real changes made)

{com}. 
. 
. gen payoff_round1=0
{txt}
{com}. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(19 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round1=payoff1 if lottery==1
{txt}(2,517 real changes made)

{com}. 
. 
. gen payoff_round2=0
{txt}
{com}. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
{txt}(33 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
{txt}(543 real changes made)

{com}. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
{txt}(22 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
{txt}(496 real changes made)

{com}. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
{txt}(21 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
{txt}(682 real changes made)

{com}. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
{txt}(28 real changes made)

{com}. replace payoff_round2=payoff2 if lottery==1
{txt}(2,502 real changes made)

{com}. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0
{txt}
{com}. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
{txt}(1,280 real changes made)

{com}. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
{txt}(1,280 real changes made)

{com}. 
{txt}end of do-file

{com}. 
. keep if contestperiod==1
{txt}(0 observations deleted)

{com}. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. *Type A*
.    hist x1hat if Type==1 & lottery==0 & alpha==0.25, ///
>      xline(75) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.25") col(blue) lc(black) saving(1APA25, replace) 
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1APA25.gph} saved

{com}.    hist x1hat if Type==1 & lottery==0 & alpha==0.75, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.75") col(blue) lc(black) saving(1APA75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1APA75.gph} saved

{com}.    hist x1hat if Type==1 & lottery==1 & alpha==0.25, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.25") col(blue) lc(black) saving(1Lott25, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{txt}file {bf:1Lott25.gph} saved

{com}.    hist x1hat if Type==1 & lottery==1 & alpha==0.75, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.75") col(blue) lc(black) saving(1Lott75, replace)
{txt}(bin={res}20{txt}, start={res}0{txt}, width={res}5{txt})
{res}{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

end of do-file

{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{err}no; dataset in memory has changed since last saved
{txt}{search r(4), local:r(4);}

end of do-file

{search r(4), local:r(4);}

{com}. clear

. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{txt}
{com}. 
. drop if RiskLine1==.
{txt}(1,008 observations deleted)

{com}. drop treatment Group Profit TotalProfit Participate Period
{txt}
{com}. 
{txt}end of do-file

{com}. 
. clear

. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. *session2
. use "Contests with Revisions Replication files\Semi Cleaned Up Datasets\Session2_AllPay_75_25_Friday_04_08_4_30.dta" 
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\joshu\AppData\Local\Temp\STDd0c_000000.tmp"
{txt}
{com}. drop if RiskLine1==.
{txt}(1,008 observations deleted)

{com}. 
{txt}end of do-file

{com}. exit, clear
