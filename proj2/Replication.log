-------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2\Replication.log
  log type:  text
 opened on:   8 Dec 2023, 07:37:06

. *Start
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(5 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(5 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. 
. ****************************************
. *************REPLICATION****************
. ****************************************
. 
. *******************
. ******FIGURE 1*****
. *******************
. 
. *****TREATMENTS***
. 
. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
(2,560 observations deleted)

. sort contest alpha

. collapse x1hat x1eq, by(contest alpha)

. 
. gen time=1

. rename x1hat observed

. rename x1eq equilibrium

. 
. save d1, replace
file d1.dta saved

. 
. **Step 2**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(8 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(2 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
(2,560 observations deleted)

. sort contest alpha

. collapse x2hat x2eq, by(contest alpha)

. 
. gen time=2

. rename x2hat observed

. rename x2eq equilibrium

. 
. save d2, replace
file d2.dta saved

. 
. **Step 3**
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(4 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(6 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. drop if Type==2
(2,560 observations deleted)

. sort contest alpha

. collapse x12hat x12eq, by(contest alpha)

. gen time=3

. rename x12hat observed

. rename x12eq equilibrium

. 
. save d12, replace
file d12.dta saved

. 
. append using d1

. append using d2

. 
. gen a25=1 if alpha==0.25
(6 missing values generated)

. replace a25=2 if alpha==0.75
(6 real changes made)

. gen alphag=1 if alpha==0.25
(6 missing values generated)

. replace alphag=2 if alpha==0.75
(6 real changes made)

. gen timeg=1 if time==1
(8 missing values generated)

. replace timeg=2 if time==2
(4 real changes made)

. replace timeg=3 if time==3
(4 real changes made)

. 
. label var observed "Observed"

. label var equilibrium "Equilibrium"

. 
. save treatments, replace
file treatments.dta saved

. 
. sort time

. *label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "
. label define a25 0 " " 1 "alpha=0.25" 2 "0.75" 3 " "

. label define time 1 "Type A - Round 1" 2 "Type B - Round 1" 3 "Type A - Round 2"

. label val timeg time

. label val alphag a25

. label var alphag "Treatment"

. label val alphag a25

. label var alphag "Treatment"

. format observed %9.2f

. format equilibrium %9.2f

. 
. *All Pay
. twoway scatter observed equilibrium alphag if contest=="All Pay Auction", ///
> by(timeg, cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabpos
> ition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1APA, replace)
file fig1APA.gph saved

. graph use fig1APA

. graph export fig1APA.pdf, replace
file fig1APA.pdf saved as PDF format

. 
. *Lottery
. twoway scatter observed equilibrium alphag if contest=="Lottery", ///
> by(timeg , cols(3) note("")) mlabel(observed equilibrium) mlabc(black black) mlabsize(medium medium) mlabpo
> sition(12 12) ///
> xlabel(0 1 2 3, valuelabel labs(medium)) connect(l l) lp(solid dash) lc(black black) mc(black black) ///
> legend(off) ylabel(0(25)50) ytitle("Expenditure") ///
> saving(fig1Lott, replace)
file fig1Lott.gph saved

. graph use fig1Lott

. graph export fig1Lott.pdf, replace
file fig1Lott.pdf saved as PDF format

. 
. *******************
. ******FIGURE 2*****
. *******************
. 
. *****HISTOGRAMS****
. clear 

. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(6 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(4 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. *Type A*
.    hist x1hat if Type==1 & lottery==0 & alpha==0.25, ///
>      xline(75) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.25") col(blue) lc(black)
>  saving(1APA25, replace) 
(bin=20, start=0, width=5)
file 1APA25.gph saved

.    hist x1hat if Type==1 & lottery==0 & alpha==0.75, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.75") col(blue) lc(black)
>  saving(1APA75, replace)
(bin=20, start=0, width=5)
file 1APA75.gph saved

.    hist x1hat if Type==1 & lottery==1 & alpha==0.25, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.25") col(blue) lc(black) saving(
> 1Lott25, replace)
(bin=20, start=0, width=5)
file 1Lott25.gph saved

.    hist x1hat if Type==1 & lottery==1 & alpha==0.75, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.75") col(blue) lc(black) saving(
> 1Lott75, replace)
(bin=20, start=0, width=5)
file 1Lott75.gph saved

. 
. gr combine 1APA25.gph 1APA75.gph 1Lott25.gph 1Lott75.gph, saving(1hist, replace)
file 1hist.gph saved

.           graph use 1hist

.       graph export Fig21.pdf, replace
file Fig21.pdf saved as PDF format

. 
. *Type B*
.    hist x2hat if Type==1 & lottery==0 & alpha==0.25, /// 
>      xline(75) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.25") col(blue) lc(black)
>  saving(2APA25, replace) 
(bin=20, start=0, width=5)
file 2APA25.gph saved

.    hist x2hat if Type==1 & lottery==0 & alpha==0.75, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("All-pay auction, alpha=0.75") col(blue) lc(black)
>  saving(2APA75, replace)
(bin=20, start=0, width=5)
file 2APA75.gph saved

.    hist x2hat if Type==1 & lottery==1 & alpha==0.25, /// 
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.25") col(blue) lc(black) saving(
> 2Lott25, replace)
(bin=20, start=0, width=5)
file 2Lott25.gph saved

.    hist x2hat if Type==1 & lottery==1 & alpha==0.75, ///
>      xline(25) width(5) fraction ylabel(0(0.1)0.5) title("Lottery, alpha=0.75") col(blue) lc(black) saving(
> 2Lott75, replace)
(bin=20, start=0, width=5)
file 2Lott75.gph saved

. 
. gr combine 2APA25.gph 2APA75.gph 2Lott25.gph 2Lott75.gph, saving(2hist, replace)
file 2hist.gph saved

.           graph use 2hist

.       graph export Fig22.pdf, replace
file Fig22.pdf saved as PDF format

. 
. *******************
. ******FIGURE 3*****
. *******************
. 
. *****BOX PLOTS*****
. clear 

.           
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(5 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(5 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. drop if periodt<11
(2,560 observations deleted)

. 
. sort lottery Type alpha subjectid

. by lottery Type alpha subjectid: egen med_x=median(x)

. by lottery Type alpha subjectid: egen lqt_x = pctile(x), p(25)

. by lottery Type alpha subjectid: egen uqt_x = pctile(x), p(75)

. by lottery Type alpha subjectid: egen iqr_x = iqr(x)

. by lottery Type alpha subjectid: egen mean_x = mean(x)

. by lottery Type alpha subjectid: egen sd_x = sd(x)
(4 missing values generated)

. 
. by lottery Type alpha subjectid: egen ls_x = min(max(x, lqt_x-1.5*iqr_x))

. by lottery Type alpha subjectid: egen us_x = max(min(x, uqt_x+1.5*iqr_x))

. gen coeff_var=sd_x/mean_x
(168 missing values generated)

. 
. gen out_x = x if(x<=lqt_x-1.5*iqr_x | x>=uqt_x+1.5*iqr_x)
(1,594 missing values generated)

. 
. sort lottery Type alpha mean_x subjectid

. egen mean_id=group(lottery Type alpha mean_x subjectid)

. 
. by lottery Type alpha: egen min_id=min(mean_id)

. gen mean_id_scale=mean_id-min_id+1

. 
. label var mean_id_scale "Subject rank (low to high mean)"

. label var x "Exp."

. 
. *LOTTERY*
. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.25 & Type==1, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.25 & Type==1, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.25", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure") ylabel(0(25)100) name(typeA_025_subj, replace)

.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.25 & Type==2, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.25 & Type==2, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.25", si(medium)) yline(25, lc(blue)) ///      
>   
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_025_subj, replace)

. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.75 & Type==1, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.75 & Type==1, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeA_075_subj, replace)

.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==1 & alpha==0.75 & Type==2, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==1 & alpha==0.75 & Type==2, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("Lottery - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_075_subj, replace)

. 
. graph combine typeA_025_subj typeA_075_subj typeB_025_subj typeB_075_subj, name(box_subj, replace)

. graph export Fig3A.jpg, replace
file Fig3A.jpg written in JPEG format

. 
. *ALL-PAY*
. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.25 & Type==1, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.25 & Type==1, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.25", si(medium)) yline(75, lc(blue)) ///
>                 ytitle("Expenditure") ylabel(0(25)100) name(typeA_025_subj_apa, replace)

.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.25 & Type==2, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.25 & Type==2, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.25", si(medium)) yline(75, lc(blue)) ///      
>   
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_025_subj_apa, replace)

. 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.75 & Type==1, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.75 & Type==1, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeA_075_subj_apa, replace)

.                 
. twoway  rbar lqt_x med_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(black)  |
> | ///
>                 rbar med_x uqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, fcolor(gs12) lcolor(b
> lack)  || ///
>                 rspike uqt_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rspike ls_x lqt_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)   || //
> /
>                 rcap us_x us_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 rcap ls_x ls_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, lcolor(gs12)  || ///
>                 scatter out_x mean_id_scale if  lottery==0 & alpha==0.75 & Type==2, ms(circle) mcolor(blue)
>  mfc(none) msize(0.4) || ///
>                 scatter mean_x mean_id_scale if lottery==0 & alpha==0.75 & Type==2, legend(off) ms(diamond)
>  mcolor(red) mfc(none) msize(0.4) title("All-Pay - alpha = 0.75", si(medium)) yline(25, lc(blue)) ///
>                 ytitle("Expenditure")  ylabel(0(25)100) name(typeB_075_subj_apa, replace)

. 
. *graph combine typeA_025_subj typeA_075_subj typeB_025_subj typeB_075_subj, name(box_subj_apa, replace)
. *graph export box_subj_apa.jpg, replace
. 
. graph combine typeA_025_subj_apa typeA_025_subj typeA_075_subj_apa typeA_075_subj, name(box_typeA, replace)

. graph export box_typeA.pdf, replace
file box_typeA.pdf saved as PDF format

. 
. graph combine typeB_025_subj_apa typeB_025_subj typeB_075_subj_apa typeB_075_subj, name(box_typeB, replace)

. graph export Fig3B.pdf, replace
file Fig3B.pdf saved as PDF format

. 
. *******************
. ******FIGURE 4*****
. *******************
. clear    

. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(2 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(8 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. gen first20=0

. replace first20=1 if part==3
(2,560 real changes made)

. 
. gen change=.
(5,120 missing values generated)

. replace change=0 if Type==1 & x12==.
(530 real changes made)

. replace change=1 if Type==1 & x12~=.
(2,030 real changes made)

. 
. gen reduce=0

. replace reduce=1 if Type==1 & x12hat<x1hat
(1,065 real changes made)

. 
. gen raise=0

. replace raise=1 if Type==1 & x12hat>x1hat
(965 real changes made)

. 
. gen rationalrev=0

. replace rationalrev=1 if x1hat~=br1
(4,998 real changes made)

. *replace rationalrev=1 if x2hat & lottery==1
. 
. gen overbid=1

. replace overbid=0 if x1hat<=br1  
(1,538 real changes made)

. 
. gen underbid=0

. replace underbid=1 if x1hat<br1 
(1,416 real changes made)

. 
. gen ahead=0

. replace ahead=1 if x1hat>x2hat
(2,544 real changes made)

. 
. gen onedisttoother=x1hat-x2hat

. gen twodisttoother=x12hat-x2hat

. 
. gen irr_nochange=0 

. replace irr_nochange=1 if changehat==0 & rationalrev==1
(956 real changes made)

. 
. gen irr_rev_dec=0

. replace irr_rev_dec=1 if irr_nochange==1
(956 real changes made)

. replace irr_rev_dec=1 if changehat==1 & x1hat==br1
(18 real changes made)

. 
. 
. label var rationalrev "Revising is rational"

. label var changehat "Subject revised"

. label var irr_nochange "No change even though was rational"

. 
. sort contest alpha

. collapse changehat rationalrev, by(contest alpha)

. 
. sort contest

. gen low=1 if alpha==0.25
(2 missing values generated)

. replace low=4 if alpha==0.75
(2 real changes made)

. gen low1=2 if alpha==0.25
(2 missing values generated)

. replace low1=5 if alpha==0.75
(2 real changes made)

. 
. label var changehat "Actual revision"

. label var rationalrev "Rational revision"

. 
. twoway  (bar changehat low, barw(1) bcolor(blue)) ///
> (bar rationalrev low1, barw(1) bcolor(gray)), ///
> ytitle("Fraction") ylabel(0(0.2)1) xlabel(1.5 "alpha=0.25" 4.5 "alpha=0.75") by(contest, note(""))  ///
> saving(revision, replace)
file revision.gph saved

. graph use revision

. graph export Fig4.pdf, replace
file Fig4.pdf saved as PDF format

.           
. *******************
. ******FIGURE 5*****
. *******************
. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(7 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(3 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. 
. *Period >10 & <=20 & Period >30
. 
. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. keep if Type==1
(2,560 observations deleted)

. keep if lottery==0
(1,280 observations deleted)

. 
. *keep if changehat==1
. 
. *keep if validriskloss==1
. 
. gen a25=1 if alpha==0.25
(640 missing values generated)

. replace a25=2 if alpha==0.75
(640 real changes made)

. gen alphag=1 if alpha==0.25
(640 missing values generated)

. replace alphag=2 if alpha==0.75
(640 real changes made)

. 
. label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "

. label val alphag a25

. label var alphag "Treatment"

. 
. 
. **************************
. ***(a) All observations***
. **************************
. label var br1 "Best Response"

. label var x12hat "Observations"

. twoway (scatter br1 x2hat, legend(off) ms(X) mfc(none) mlc(red) msize(vlarge)) ///
> (scatter x12hat x2hat, legend(off) ms(circle) mfc(none) mlc(black) mlw(medium) ytitle("Type A - Round 2")) 
> if lottery==0, ///
> by(alphag, note("")) saving("bra_brall", replace) 
file bra_brall.gph saved

. graph use bra_brall

. graph export Fig5b.pdf, replace
file Fig5b.pdf saved as PDF format

. 
. *****************************
. ***(b) Revised Expenditure***
. *****************************
. label var br1 "Best Response"

. label var x12hat "Observations"

. twoway (scatter br1 x2hat if changehat==1, legend(off) ms(X) mfc(none) mlc(red) msize(vlarge)) ///
> (scatter x12hat x2hat if changehat==1, legend(off) ms(circle) mfc(none) mlc(black) mlw(medium) ytitle("Type
>  A - Round 2")), ///
> by(alphag, note("")) saving("bra_brch", replace) 
file bra_brch.gph saved

. graph use bra_brch

. graph export Fig5b.pdf, replace
file Fig5b.pdf saved as PDF format

.   
. *******************
. ******FIGURE 6*****
. *******************
. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(7 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(3 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. 
. *keep if changehat==1
. 
. *Period >10 & <=20 & Period >30
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. keep if contestperiod==1
(0 observations deleted)

. keep if lottery==1
(2,560 observations deleted)

. keep if Type==1
(1,280 observations deleted)

. sum match2

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      match2 |      1,280     .046875    .2114537          0          1

. 
. *gen direction=0
. *replace direction=1 if diff_br_1>diff_br_2
. *replace direction=1 if  diff_br_1==diff_br_2 & diff_br_1==0
. 
. gen outspend2=0

. replace outspend2=1 if x12hat>=x2hat
(927 real changes made)

. sum outspend2

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
   outspend2 |      1,280    .7242188    .4470818          0          1

. gen slightoutspend2=0

. replace slightoutspend2=1 if x12hat-x2hat>=0.01 
(796 real changes made)

. replace slightoutspend2=0 if x12hat-x2hat>5
(551 real changes made)

. sum slightoutspend2

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
slightouts~2 |      1,280    .1914063    .3935618          0          1

. 
. gen sqrtx2hat=sqrt(x2hat)

. gen x2hatsq=x2hat*x2hat

. 
. egen xjowbar=mean(xjow)

. 
. 
. *alpha=0.25
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25, i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        640
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.1541                                         min =          5
     Between = 0.0050                                         avg =       10.0
     Overall = 0.0905                                         max =         16

                                                Wald chi2(3)      =      58.02
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.5496476   .1381015    -3.98   0.000    -.8203214   -.2789737
   sqrtx2hat |   8.503715   1.432925     5.93   0.000     5.695233     11.3122
         inv |    8.08702   6.851729     1.18   0.238    -5.342123    21.51616
       _cons |   16.23312   4.363813     3.72   0.000     7.680207    24.78604
-------------+----------------------------------------------------------------
     sigma_u |  19.974798
     sigma_e |  26.665094
         rho |  .35944634   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.25, vce(cluster subjectid)
. est store A

. *predict xbr25 if alpha==0.25
. gen xbr25=_b[_cons]+_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr25=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. *alpha=0.75
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.75,  i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        640
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.2254                                         min =          4
     Between = 0.1085                                         avg =       10.0
     Overall = 0.1848                                         max =         17

                                                Wald chi2(3)      =     254.55
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.7994133   .1344883    -5.94   0.000    -1.063005   -.5358212
   sqrtx2hat |    11.4271   1.245723     9.17   0.000     8.985531    13.86867
         inv |   17.98433   1.531107    11.75   0.000     14.98342    20.98525
       _cons |   11.77709   4.983728     2.36   0.018     2.009159    21.54501
-------------+----------------------------------------------------------------
     sigma_u |  19.466571
     sigma_e |   25.60477
         rho |  .36629143   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store B

. *predict xbr75 if alpha==0.75
. gen xbr75=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25 & changehat==1,  i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        434
Group variable: subjectid                       Number of groups  =         60

R-squared:                                      Obs per group:
     Within  = 0.2216                                         min =          1
     Between = 0.2036                                         avg =        7.2
     Overall = 0.1870                                         max =         15

                                                Wald chi2(3)      =     109.89
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.6214736   .2528202    -2.46   0.014    -1.116992   -.1259551
   sqrtx2hat |   10.16473   2.343644     4.34   0.000     5.571275    14.75819
         inv |   9.185786   8.942919     1.03   0.304    -8.342014    26.71359
       _cons |   8.094571   4.665199     1.74   0.083     -1.04905    17.23819
-------------+----------------------------------------------------------------
     sigma_u |  18.754565
     sigma_e |  26.827845
         rho |  .32827302   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store C

. *predict xbr75 if alpha==0.75
. gen xbr25_rev=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.75 & changehat==1,  i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        476
Group variable: subjectid                       Number of groups  =         63

R-squared:                                      Obs per group:
     Within  = 0.2665                                         min =          1
     Between = 0.2733                                         avg =        7.6
     Overall = 0.2384                                         max =         13

                                                Wald chi2(3)      =     219.70
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.6550246   .1310692    -5.00   0.000    -.9119155   -.3981336
   sqrtx2hat |   10.76415   1.085404     9.92   0.000     8.636801    12.89151
         inv |   11.99457   3.535731     3.39   0.001     5.064662    18.92447
       _cons |   10.57784   5.153371     2.05   0.040     .4774191    20.67826
-------------+----------------------------------------------------------------
     sigma_u |   18.59713
     sigma_e |  24.950564
         rho |  .35714479   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store D

. *predict xbr75 if alpha==0.75
. gen xbr75_rev=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. 
. 
. esttab A B C D using table.tex, ///
> se keep(x2hat sqrtx2hat inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
(output written to table.tex)

. esttab A B C D using table.txt, ///
> se keep(x2hat sqrtx2hat inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
(output written to table.txt)

. *se keep(x2hat  x2hatsq inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
. 
. gen a25=1 if alpha==0.25
(640 missing values generated)

. replace a25=2 if alpha==0.75
(640 real changes made)

. gen alphag=1 if alpha==0.25
(640 missing values generated)

. replace alphag=2 if alpha==0.75
(640 real changes made)

. 
. label define a25 0 " " 1 "alpha=0.25" 2 "alpha=0.75" 3 " "

. label val alphag a25

. label var alphag "Treatment"

. 
. label var br1 "Best Response"

. label var x12hat "Observations"

. 
. sort x2hat

. *twoway (scatter x12hat x2hat) (line br1 x2hat) 
. *twoway (line xbr25 x2hat) (line xbr75 x2hat) (line br1 x2hat) 
. gen x1225=x12hat if alpha==0.25
(640 missing values generated)

. gen x1275=x12hat if alpha==0.75
(640 missing values generated)

. 
. **************************
. ***(a) All observations***
. **************************
. *****with the cloud of points and estimated BR****************
. twoway (line xbr25 x2hat, lwidth(thick) lp(longdash_dot) lc(black)) ///
> (line xbr75 x2hat, lwidth(thick) lp(dash) lc(black)) ///
> (line br1 x2hat, lwidth(medthick) legend(off) lc(red)) ///
> (scatter x12hat x2hat, ms(circle) mfc(none) mlc(black) mlw(medium)), /// *(line xbr25 x2hat, lwidth(thick) 
> lp(longdash_dot)) /// *(line xbr75 x2hat, lwidth(thick) lp(dash)) ///
> text(35 80 "{bf:alpha=0.75}", color(blue)) text(52 90 "{bf:alpha=0.25}", color(blue)) text(20 70 "{bf:Risk 
> Neutral BR}", color(blue)) ///
> ylabel(0(20)100) ytitle("Type A - Round 2") ///
> saving("brl_brall", replace)
file brl_brall.gph saved

. graph use brl_brall

. graph export Fig6a.pdf, replace
file Fig6a.pdf saved as PDF format

. 
. *****************************
. ***(b) Revised Expenditure***
. *****************************
. twoway (line xbr25_rev x2hat if changehat==1, lwidth(thick) lp(longdash_dot) lc(black)) ///
> (line xbr75_rev x2hat if changehat==1, lwidth(thick) lp(dash) lc(black)) ///
> (line br1 x2hat if changehat==1, lwidth(medthick) legend(off) lc(red)) ///
> (scatter x12hat x2hat if changehat==1, ms(circle) mfc(none) mlc(black) mlw(medium)), /// *(line xbr25 x2hat
> , lwidth(thick) lp(longdash_dot)) /// *(line xbr75 x2hat, lwidth(thick) lp(dash)) ///
> ylabel(0(20)100) ytitle("Type A - Round 2") ///
> text(38 65 "{bf:alpha=0.75}", color(blue)) text(47 90 "{bf:alpha=0.25}", color(blue)) text(20 70 "{bf:Risk 
> Neutral BR}", color(blue)) ///
> saving("brl_brch", replace)
file brl_brch.gph saved

. graph use brl_brch

. graph export Fig6b.pdf, replace
file Fig6b.pdf saved as PDF format

. 
. 
. ***********************************************************
. ******************RESULT 1*********************************
. ***********************************************************
. 
. 
. *Period >10 & Period >30
. keep if contestperiod==1
(0 observations deleted)

. drop if Type==2
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. sort contest lottery alpha sessionid

. collapse x1hat x2hat x12hat x1eq x2eq x12eq x12eq_expost changehat, by(contest lottery alpha sessionid)

. 
. ***********************************************
. ****WITHIN SESSION EQUILIBRIUM COMPARISONS*****
. ***********************************************
. 
. sort alpha

. *ALL PAY*
. by alpha: signrank x1hat=x1eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

. by alpha: signrank x2hat=x2eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

. by alpha: signrank x12hat=x12eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

. by alpha: signrank x12hat=x12eq_expost if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

. by alpha: signrank changehat=1 if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

. *LOTTERY*
. by alpha: signrank x1hat=x1eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          32          18
    Negative |        2           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

. by alpha: signrank x2hat=x2eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq_expost if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank changehat=0 if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

. 
. 
. ***********************************************************
. ******************TABLES*********************************
. ***********************************************************
. 
. *******************
. ******TABLE 3******
. *******************
. 
. *******************
. ** Flexibility 1 **
. *******************
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(2 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(8 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. ******FLEXIBILITY*******
. 
. do flexibility.do

. 
. *expected payoff of 1 relative to the optimal payoff in a one round all payer auction.
. gen flexibility1 = (Prize - x1hat)*(1-alpha) + (Prize-x12hat)*alpha if x1hat > x2hat
(2,576 missing values generated)

. replace flexibility1 = -x1hat*(1-alpha) + (Prize-x12hat)*alpha if x1hat < x2hat 
(2,314 real changes made)

. 
. * expected payoff of A - expected payoff of B given all payments
. gen flexibility2 = (Prize - x1hat + x2hat)*(1-alpha) + (Prize-x12hat+x2hat)*alpha if x1hat > x2hat & lotter
> y == 0
(3,756 missing values generated)

. replace flexibility2 = (-x1hat-Prize+x2hat)*(1-alpha) + (Prize-x12hat+x2hat)*alpha if x1hat < x2hat & lotte
> ry == 0 
(1,086 real changes made)

. replace flexibility2 = (Prize - x1hat + x2hat)*(1-alpha)*(x1hat/(x1hat+x2hat)) + (-x1hat-Prize+x2hat)*(1-al
> pha)*(x2hat/(x1hat+x2hat)) + (Prize - x12hat + x2hat)*(alpha)*(x12hat/(x12hat+x2hat)) + (-x12hat-Prize+x2ha
> t)*(alpha)*(x2hat/(x12hat+x2hat)) if lottery == 1
(2,538 real changes made)

. 
. 
. * expected payoff of A - expected payoff of B given only round 1 payments assuming that the efficient respo
> nse is for x12hat == x2hat in APA and x1hat == x12hat in lottery
. gen flexibility3 = (Prize - x1hat + x2hat)*(1-alpha) + (Prize)*alpha if x1hat > x2hat & lottery == 0 
(3,756 missing values generated)

. replace flexibility3 = (-x1hat-Prize+x2hat)*(1-alpha) + (Prize)*alpha if x1hat < x2hat & lottery == 0 
(1,086 real changes made)

. replace flexibility3 = (Prize - x1hat + x2hat)*(x1hat/(x1hat+x2hat)) + (-x1hat-Prize+x2hat)*(x2hat/(x1hat+x
> 2hat)) if lottery == 1
(2,538 real changes made)

. 
end of do-file

. 
. *Period >10 & Period >30
. keep if contestperiod==1
(0 observations deleted)

. drop if Type==2
(2,560 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. gen flexibility = flexibility1
(131 missing values generated)

. 
. sort contest alpha

. by contest alpha: sum x1hat x2hat x12hat changehat flexibility 

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    47.18152    30.84879          0        100
       x2hat |        640    40.56469     35.3736          0        100
      x12hat |        640    39.91313     33.9622          0        100
   changehat |        640    .8890625    .3143004          0          1
 flexibility |        618    23.17737    39.56443    -71.625      99.99

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640     26.2483    29.57008          0        100
       x2hat |        640    31.87056    38.62192          0        100
      x12hat |        640    24.98841    32.90456          0        100
   changehat |        640    .8609375    .3462824          0          1
 flexibility |        607    62.50624    31.00023     -21.75      99.99

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    45.70875    31.49323          0        100
       x2hat |        640    44.75683    34.71484          0        100
      x12hat |        640    42.15094    34.55396          0        100
   changehat |        640     .678125    .4675608          0          1
 flexibility |        610    18.78673     35.1769   -74.0925    99.2475

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    40.76316    33.07534          0        100
       x2hat |        640     45.4948    34.47083          0        100
      x12hat |        640    45.83961    35.34265          0        100
   changehat |        640      .74375     .436903          0          1
 flexibility |        594    42.34407    31.72943     -24.75      99.99


. 
. ***********************************************
. ****WITHIN SESSION EQUILIBRIUM COMPARISONS*****
. ***********************************************
. 
. sort contest lottery alpha sessionid

. collapse x1hat x2hat x12hat flexibility x1eq x2eq x12eq x12eq_expost changehat eq_flexibility , by(contest 
> lottery alpha sessionid)

. 
. sort alpha

. *ALL PAY*
. by alpha: signrank x1hat=x1eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          31          18
    Negative |        1           5          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  1.820
Prob > |z| = 0.0687
Exact prob = 0.0781

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x2hat=x2eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x12hat=x12eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x12hat=x12eq_expost if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          32          18
    Negative |        1           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank changehat=1 if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0        17.5
    Negative |        7          35        17.5
        Zero |        1           1           1
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros      -0.25
                     ----------
Adjusted variance         50.63

H0: changehat = 1 
         z = -2.460
Prob > |z| = 0.0139
Exact prob = 0.0156

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0          18
    Negative |        8          36          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 1 
         z = -2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

. by alpha: signrank flexibility=eq_flexibility if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        1           2          18
    Negative |        7          34          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z = -2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0          18
    Negative |        8          36          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z = -2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. 
. *LOTTERY*
. by alpha: signrank x1hat=x1eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          32          18
    Negative |        2           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

. by alpha: signrank x2hat=x2eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq_expost if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank changehat=0 if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

. by alpha: signrank flexibility=eq_flexibility if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. 
. 
. 
. *******************
. ** Flexibility 2 **
. *******************
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(5 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(5 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. ******FLEXIBILITY*******
. 
. do flexibility.do

. 
. *expected payoff of 1 relative to the optimal payoff in a one round all payer auction.
. gen flexibility1 = (Prize - x1hat)*(1-alpha) + (Prize-x12hat)*alpha if x1hat > x2hat
(2,576 missing values generated)

. replace flexibility1 = -x1hat*(1-alpha) + (Prize-x12hat)*alpha if x1hat < x2hat 
(2,314 real changes made)

. 
. * expected payoff of A - expected payoff of B given all payments
. gen flexibility2 = (Prize - x1hat + x2hat)*(1-alpha) + (Prize-x12hat+x2hat)*alpha if x1hat > x2hat & lotter
> y == 0
(3,756 missing values generated)

. replace flexibility2 = (-x1hat-Prize+x2hat)*(1-alpha) + (Prize-x12hat+x2hat)*alpha if x1hat < x2hat & lotte
> ry == 0 
(1,086 real changes made)

. replace flexibility2 = (Prize - x1hat + x2hat)*(1-alpha)*(x1hat/(x1hat+x2hat)) + (-x1hat-Prize+x2hat)*(1-al
> pha)*(x2hat/(x1hat+x2hat)) + (Prize - x12hat + x2hat)*(alpha)*(x12hat/(x12hat+x2hat)) + (-x12hat-Prize+x2ha
> t)*(alpha)*(x2hat/(x12hat+x2hat)) if lottery == 1
(2,538 real changes made)

. 
. 
. * expected payoff of A - expected payoff of B given only round 1 payments assuming that the efficient respo
> nse is for x12hat == x2hat in APA and x1hat == x12hat in lottery
. gen flexibility3 = (Prize - x1hat + x2hat)*(1-alpha) + (Prize)*alpha if x1hat > x2hat & lottery == 0 
(3,756 missing values generated)

. replace flexibility3 = (-x1hat-Prize+x2hat)*(1-alpha) + (Prize)*alpha if x1hat < x2hat & lottery == 0 
(1,086 real changes made)

. replace flexibility3 = (Prize - x1hat + x2hat)*(x1hat/(x1hat+x2hat)) + (-x1hat-Prize+x2hat)*(x2hat/(x1hat+x
> 2hat)) if lottery == 1
(2,538 real changes made)

. 
end of do-file

. 
. *Period >10 & Period >30
. keep if contestperiod==1
(0 observations deleted)

. drop if Type==2
(2,560 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. gen flexibility = flexibility2
(66 missing values generated)

. 
. sort contest alpha

. by contest alpha: sum x1hat x2hat x12hat changehat flexibility 

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    47.18152    30.84879          0        100
       x2hat |        640    40.56469     35.3736          0        100
      x12hat |        640    39.91313     33.9622          0        100
   changehat |        640    .8890625    .3143004          0          1
 flexibility |        618    32.59386    49.82583     -56.24     110.75

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640     26.2483    29.57008          0        100
       x2hat |        640    31.87056    38.62192          0        100
      x12hat |        640    24.98841    32.90456          0        100
   changehat |        640    .8609375    .3462824          0          1
 flexibility |        607    83.22634    33.03715     -23.25        150

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    45.70875    31.49323          0        100
       x2hat |        640    44.75683    34.71484          0        100
      x12hat |        640    42.15094    34.55396          0        100
   changehat |        640     .678125    .4675608          0          1
 flexibility |        636    4.620407    30.21823        -99    99.2475

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    40.76316    33.07534          0        100
       x2hat |        640     45.4948    34.47083          0        100
      x12hat |        640    45.83961    35.34265          0        100
   changehat |        640      .74375     .436903          0          1
 flexibility |        633     8.65904    33.57703        -80      99.99


. 
. ***********************************************
. ****WITHIN SESSION EQUILIBRIUM COMPARISONS*****
. ***********************************************
. 
. sort contest lottery alpha sessionid

. collapse x1hat x2hat x12hat flexibility x1eq x2eq x12eq x12eq_expost changehat eq_flexibility, by(contest l
> ottery alpha sessionid)

. 
. sort alpha

. *ALL PAY*
. by alpha: signrank x1hat=x1eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          31          18
    Negative |        1           5          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  1.820
Prob > |z| = 0.0687
Exact prob = 0.0781

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x2hat=x2eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x12hat=x12eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x12hat=x12eq_expost if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          32          18
    Negative |        1           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank changehat=1 if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0        17.5
    Negative |        7          35        17.5
        Zero |        1           1           1
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros      -0.25
                     ----------
Adjusted variance         50.63

H0: changehat = 1 
         z = -2.460
Prob > |z| = 0.0139
Exact prob = 0.0156

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0          18
    Negative |        8          36          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 1 
         z = -2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

. by alpha: signrank flexibility=eq_flexibility if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3           9          18
    Negative |        5          27          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z = -1.260
Prob > |z| = 0.2076
Exact prob = 0.2500

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           8          18
    Negative |        6          28          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z = -1.400
Prob > |z| = 0.1614
Exact prob = 0.1953

. 
. *LOTTERY*
. by alpha: signrank x1hat=x1eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          32          18
    Negative |        2           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

. by alpha: signrank x2hat=x2eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq_expost if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank changehat=0 if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

. by alpha: signrank flexibility=eq_flexibility if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. 
. 
. 
. *******************
. ** Flexibility 3 **
. *******************
. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(8 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(2 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. ******FLEXIBILITY*******
. 
. do flexibility.do

. 
. *expected payoff of 1 relative to the optimal payoff in a one round all payer auction.
. gen flexibility1 = (Prize - x1hat)*(1-alpha) + (Prize-x12hat)*alpha if x1hat > x2hat
(2,576 missing values generated)

. replace flexibility1 = -x1hat*(1-alpha) + (Prize-x12hat)*alpha if x1hat < x2hat 
(2,314 real changes made)

. 
. * expected payoff of A - expected payoff of B given all payments
. gen flexibility2 = (Prize - x1hat + x2hat)*(1-alpha) + (Prize-x12hat+x2hat)*alpha if x1hat > x2hat & lotter
> y == 0
(3,756 missing values generated)

. replace flexibility2 = (-x1hat-Prize+x2hat)*(1-alpha) + (Prize-x12hat+x2hat)*alpha if x1hat < x2hat & lotte
> ry == 0 
(1,086 real changes made)

. replace flexibility2 = (Prize - x1hat + x2hat)*(1-alpha)*(x1hat/(x1hat+x2hat)) + (-x1hat-Prize+x2hat)*(1-al
> pha)*(x2hat/(x1hat+x2hat)) + (Prize - x12hat + x2hat)*(alpha)*(x12hat/(x12hat+x2hat)) + (-x12hat-Prize+x2ha
> t)*(alpha)*(x2hat/(x12hat+x2hat)) if lottery == 1
(2,538 real changes made)

. 
. 
. * expected payoff of A - expected payoff of B given only round 1 payments assuming that the efficient respo
> nse is for x12hat == x2hat in APA and x1hat == x12hat in lottery
. gen flexibility3 = (Prize - x1hat + x2hat)*(1-alpha) + (Prize)*alpha if x1hat > x2hat & lottery == 0 
(3,756 missing values generated)

. replace flexibility3 = (-x1hat-Prize+x2hat)*(1-alpha) + (Prize)*alpha if x1hat < x2hat & lottery == 0 
(1,086 real changes made)

. replace flexibility3 = (Prize - x1hat + x2hat)*(x1hat/(x1hat+x2hat)) + (-x1hat-Prize+x2hat)*(x2hat/(x1hat+x
> 2hat)) if lottery == 1
(2,538 real changes made)

. 
end of do-file

. 
. *Period >10 & Period >30
. keep if contestperiod==1
(0 observations deleted)

. drop if Type==2
(2,560 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. gen flexibility = flexibility3
(66 missing values generated)

. 
. sort contest alpha

. by contest alpha: sum x1hat x2hat x12hat changehat flexibility 

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    47.18152    30.84879          0        100
       x2hat |        640    40.56469     35.3736          0        100
      x12hat |        640    39.91313     33.9622          0        100
   changehat |        640    .8890625    .3143004          0          1
 flexibility |        618    32.48208    50.70538   -49.9925    99.9925

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640     26.2483    29.57008          0        100
       x2hat |        640    31.87056    38.62192          0        100
      x12hat |        640    24.98841    32.90456          0        100
   changehat |        640    .8609375    .3462824          0          1
 flexibility |        607     77.9235    17.19528    50.0025    99.9975

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    45.70875    31.49323          0        100
       x2hat |        640    44.75683    34.71484          0        100
      x12hat |        640    42.15094    34.55396          0        100
   changehat |        640     .678125    .4675608          0          1
 flexibility |        636    3.060132    32.57224     -99.99         99

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    40.76316    33.07534          0        100
       x2hat |        640     45.4948    34.47083          0        100
      x12hat |        640    45.83961    35.34265          0        100
   changehat |        640      .74375     .436903          0          1
 flexibility |        633    2.130161    36.65466     -99.99      99.99


. 
. ***********************************************
. ****WITHIN SESSION EQUILIBRIUM COMPARISONS*****
. ***********************************************
. 
. sort contest lottery alpha sessionid

. collapse x1hat x2hat x12hat flexibility x1eq x2eq x12eq x12eq_expost changehat eq_flexibility, by(contest l
> ottery alpha sessionid)

. 
. sort alpha

. *ALL PAY*
. by alpha: signrank x1hat=x1eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          31          18
    Negative |        1           5          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  1.820
Prob > |z| = 0.0687
Exact prob = 0.0781

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x2hat=x2eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x12hat=x12eq if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank x12hat=x12eq_expost if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          32          18
    Negative |        1           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank changehat=1 if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0        17.5
    Negative |        7          35        17.5
        Zero |        1           1           1
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros      -0.25
                     ----------
Adjusted variance         50.63

H0: changehat = 1 
         z = -2.460
Prob > |z| = 0.0139
Exact prob = 0.0156

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0          18
    Negative |        8          36          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 1 
         z = -2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

. by alpha: signrank flexibility=eq_flexibility if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3           8          18
    Negative |        5          28          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z = -1.400
Prob > |z| = 0.1614
Exact prob = 0.1953

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0          18
    Negative |        8          36          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z = -2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. 
. *LOTTERY*
. by alpha: signrank x1hat=x1eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          32          18
    Negative |        2           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x1eq 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

. by alpha: signrank x2hat=x2eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x2eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq 
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

. by alpha: signrank x12hat=x12eq_expost if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x12hat = x12eq_expost 
         z =  2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

. by alpha: signrank changehat=0 if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        8          36          18
    Negative |        0           0          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: changehat = 0 
         z =  2.524
Prob > |z| = 0.0116
Exact prob = 0.0078

. by alpha: signrank flexibility=eq_flexibility if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          29          18
    Negative |        2           7          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z =  1.540
Prob > |z| = 0.1235
Exact prob = 0.1484

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          21          18
    Negative |        4          15          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: flexibility = eq_flexibility 
         z =  0.420
Prob > |z| = 0.6744
Exact prob = 0.7422

. 
. 
. 
. *******************
. ******TABLE 4******
. *******************
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(6 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(4 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. *Period >10 & Period >30
. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. *Descriptive statistics
. sort contest alpha

. by contest alpha: sum x1hat x2hat x12hat x12eq_expost changehat if Type==1

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    47.18152    30.84879          0        100
       x2hat |        640    40.56469     35.3736          0        100
      x12hat |        640    39.91313     33.9622          0        100
x12eq_expost |        640    34.32408    33.07699          0        100
   changehat |        640    .8890625    .3143004          0          1

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640     26.2483    29.57008          0        100
       x2hat |        640    31.87056    38.62192          0        100
      x12hat |        640    24.98841    32.90456          0        100
x12eq_expost |        640    14.22255    23.20074          0        100
   changehat |        640    .8609375    .3462824          0          1

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .25

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    45.70875    31.49323          0        100
       x2hat |        640    44.75683    34.71484          0        100
      x12hat |        640    42.15094    34.55396          0        100
x12eq_expost |        640    13.29694    9.212994          0         25
   changehat |        640     .678125    .4675608          0          1

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery, alpha = .75

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       x1hat |        640    40.76316    33.07534          0        100
       x2hat |        640     45.4948    34.47083          0        100
      x12hat |        640    45.83961    35.34265          0        100
x12eq_expost |        640    13.26608     9.64321          0         25
   changehat |        640      .74375     .436903          0          1


. 
. ********************************************************
. ****WITHIN SESSION TYPE AND ROUND 1 & 2 COMPARISONS*****
. ********************************************************
. sort contest lottery alpha sessionid

. collapse x1hat x2hat x12hat x1eq x2eq x12eq x12eq_expost changehat, by(contest lottery alpha sessionid)

. 
. sort alpha

. *ALL PAY*
. by alpha: signrank x1hat=x2hat if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          29          18
    Negative |        1           7          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x2hat 
         z =  1.540
Prob > |z| = 0.1235
Exact prob = 0.1484

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          11          18
    Negative |        5          25          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x2hat 
         z = -0.980
Prob > |z| = 0.3270
Exact prob = 0.3828

. by alpha: signrank x2hat=x12hat if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          15          18
    Negative |        5          21          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z = -0.420
Prob > |z| = 0.6744
Exact prob = 0.7422

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        5          22          18
    Negative |        3          14          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z =  0.560
Prob > |z| = 0.5754
Exact prob = 0.6406

. by alpha: signrank x1hat=x12hat if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          32          18
    Negative |        1           4          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x12hat 
         z =  1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          21          18
    Negative |        4          15          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x12hat 
         z =  0.420
Prob > |z| = 0.6744
Exact prob = 0.7422

. by alpha: signrank x2hat=x12hat if lottery==0

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          15          18
    Negative |        5          21          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z = -0.420
Prob > |z| = 0.6744
Exact prob = 0.7422

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        5          22          18
    Negative |        3          14          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z =  0.560
Prob > |z| = 0.5754
Exact prob = 0.6406

. *LOTTERY*
. by alpha: signrank x1hat=x2hat if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        5          19          18
    Negative |        3          17          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x2hat 
         z =  0.140
Prob > |z| = 0.8886
Exact prob = 0.9453

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          10          18
    Negative |        5          26          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x2hat 
         z = -1.120
Prob > |z| = 0.2626
Exact prob = 0.3125

. by alpha: signrank x2hat=x12hat if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          25          18
    Negative |        2          11          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z =  0.980
Prob > |z| = 0.3270
Exact prob = 0.3828

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          18          18
    Negative |        5          18          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z =  0.000
Prob > |z| = 1.0000
Exact prob = 1.0000

. by alpha: signrank x1hat=x12hat if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          27          18
    Negative |        2           9          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x12hat 
         z =  1.260
Prob > |z| = 0.2076
Exact prob = 0.2500

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           3          18
    Negative |        6          33          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1hat = x12hat 
         z = -2.100
Prob > |z| = 0.0357
Exact prob = 0.0391

. by alpha: signrank x2hat=x12hat if lottery==1

-------------------------------------------------------------------------------------------------------------
-> alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          25          18
    Negative |        2          11          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z =  0.980
Prob > |z| = 0.3270
Exact prob = 0.3828

-------------------------------------------------------------------------------------------------------------
-> alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          18          18
    Negative |        5          18          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x2hat = x12hat 
         z =  0.000
Prob > |z| = 1.0000
Exact prob = 1.0000

. 
. ********************************************************
. ****WITHIN SESSION TREATMENT (25 VS. 75) COMPARISONS****
. ********************************************************
. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(6 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(4 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. *Period >10 & Period >30
. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. ********************************************************
. ********FIRST CREATE PAIRED OBSERVATIONS DATASET********
. ********************************************************
. sort contest sessionid alpha

. collapse x1hat x2hat x12hat x1100 x2100 x12100 x10 x20 x120 changehat, ///
> by(contest sessionid alpha)

. save bid25.dta, replace
file bid25.dta saved

. 
. clear

. use bid25.dta

. 
. keep if alpha==0.25
(16 observations deleted)

. gen x125=x1hat

. gen x225=x2hat

. gen x1225=x12hat

. gen x110025=x1100

. gen x210025=x2100

. gen x1210025=x12100

. gen x1025=x10

. gen x2025=x20

. gen x12025=x120

. gen change25=changehat

. drop  x1hat x2hat x12hat x1100 x2100 x12100 x10 x20 x120 changehat

. *label var sp5 "SP Low cost"
. sort sessionid

. save bid25_1.dta, replace
file bid25_1.dta saved

. 
. clear

. use bid25.dta

. 
. keep if alpha==0.75
(16 observations deleted)

. gen x175=x1hat

. gen x275=x2hat

. gen x1275=x12hat

. gen x110075=x1100

. gen x210075=x2100

. gen x1210075=x12100

. gen x1075=x10

. gen x2075=x20

. gen x12075=x120

. gen change75=changehat

. drop  x1hat x2hat x12hat x1100 x2100 x12100 x10 x20 x120 changehat

. *label var sp15 "SP High cost"
. sort sessionid

. save bid25_2.dta, replace
file bid25_2.dta saved

. 
. clear

. use bid25_1.dta

. merge 1:1 sessionid using "bid25_2.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                                16  (_merge==3)
    -----------------------------------------

. drop _merge

. save bid25.dta, replace
file bid25.dta saved

. 
. 
. ********************************/
. ********SECOND RUN TESTS********
. ********************************/
. 
. sort contest sessionid

. by contest: signrank x125=x175

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          33          18
    Negative |        1           3          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x125 = x175
         z =  2.100
Prob > |z| = 0.0357
Exact prob = 0.0391

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          21          18
    Negative |        4          15          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x125 = x175
         z =  0.420
Prob > |z| = 0.6744
Exact prob = 0.7422

. by contest: signrank x225=x275

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x225 = x275
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          13          18
    Negative |        5          23          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x225 = x275
         z = -0.700
Prob > |z| = 0.4838
Exact prob = 0.5469

. by contest: signrank x1225=x1275

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          34          18
    Negative |        1           2          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1225 = x1275
         z =  2.240
Prob > |z| = 0.0251
Exact prob = 0.0234

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          14          18
    Negative |        5          22          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1225 = x1275
         z = -0.560
Prob > |z| = 0.5754
Exact prob = 0.6406

. by contest: signrank x110025=x110075

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2          11        17.5
    Negative |        5          24        17.5
        Zero |        1           1           1
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros      -0.25
                     ----------
Adjusted variance         50.75

H0: x110025 = x110075
         z = -0.912
Prob > |z| = 0.3615
Exact prob = 0.4219

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           7        17.5
    Negative |        5          28        17.5
        Zero |        1           1           1
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros      -0.25
                     ----------
Adjusted variance         50.75

H0: x110025 = x110075
         z = -1.474
Prob > |z| = 0.1405
Exact prob = 0.1719

. by contest: signrank x210025=x210075

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        0           0          18
    Negative |        8          36          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x210025 = x210075
         z = -2.521
Prob > |z| = 0.0117
Exact prob = 0.0078

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           9          18
    Negative |        6          27          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x210025 = x210075
         z = -1.260
Prob > |z| = 0.2076
Exact prob = 0.2500

. by contest: signrank x1210025=x1210075

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2         6.5          18
    Negative |        6        29.5          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: x1210025 = x1210075
         z = -1.612
Prob > |z| = 0.1069
Exact prob = 0.1172

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           9          18
    Negative |        6          27          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x1210025 = x1210075
         z = -1.260
Prob > |z| = 0.2076
Exact prob = 0.2500

. 
. by contest: signrank x125=x225

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          29          18
    Negative |        1           7          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x125 = x225
         z =  1.540
Prob > |z| = 0.1235
Exact prob = 0.1484

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        5          19          18
    Negative |        3          17          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x125 = x225
         z =  0.140
Prob > |z| = 0.8886
Exact prob = 0.9453

. by contest: signrank x175=x275

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          11          18
    Negative |        5          25          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x175 = x275
         z = -0.980
Prob > |z| = 0.3270
Exact prob = 0.3828

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3          10          18
    Negative |        5          26          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x175 = x275
         z = -1.120
Prob > |z| = 0.2626
Exact prob = 0.3125

. 
. by contest: signrank change25=change75

-------------------------------------------------------------------------------------------------------------
-> contest = All Pay Auction

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          25          18
    Negative |        2          11          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: change25 = change75
         z =  0.981
Prob > |z| = 0.3264
Exact prob = 0.3672

-------------------------------------------------------------------------------------------------------------
-> contest = Lottery

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           3          18
    Negative |        6          33          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties       -0.13
Adjustment for zeros       0.00
                     ----------
Adjusted variance         50.88

H0: change25 = change75
         z = -2.103
Prob > |z| = 0.0355
Exact prob = 0.0313

. *log close
. 
. *log using C:\purdue\nonpara, append
. 
. 
. 
. *********************************************************
. 
. 
. *******************
. ******TABLE 5******
. *******************
. clear 

. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(3 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(7 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. keep if contestperiod==1
(0 observations deleted)

. 
. sort subjectid Period

. by subjectid: gen totaltypea=typea[1]

. by subjectid: replace totaltypea=typea[_n]+ totaltypea[_n-1] if _n>1
(4,879 real changes made)

. gen first20=0

. replace first20=1 if part==3
(2,560 real changes made)

. 
. 
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. label var xjow "Joy of winning"

. label var alpha "$\alpha$"

. label var risk "Risk aversion"

. label var loss "Loss aversion"

. *label var LossLineSwitchToB "Loss aversion"
. label var inv "$1/Period$"

. 
. **********SUBJECT RE***********************************************************************
. *ALL PAY AUCTION
. xtreg x d75 inv first20 i.sessionid if Type==1 & contest=="All Pay Auction", i(subjectid) vce(cluster sessi
> onid)

Random-effects GLS regression                   Number of obs     =      1,280
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.2037                                         min =         10
     Between = 0.0951                                         avg =       20.0
     Overall = 0.1651                                         max =         27

                                                Wald chi2(3)      =          .
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =          .

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
           x | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
         d75 |  -21.62866   5.635731    -3.84   0.000    -32.67449   -10.58283
         inv |   12.60962   4.003287     3.15   0.002     4.763325    20.45592
     first20 |   9.848289   5.636506     1.75   0.081     -1.19906    20.89564
             |
   sessionid |
          1  |          0  (empty)
          2  |          0  (empty)
          3  |          0  (empty)
          4  |          0  (empty)
          5  |          0  (empty)
          6  |          0  (empty)
          7  |          0  (empty)
          8  |          0  (empty)
          9  |  -13.07432    .215295   -60.73   0.000    -13.49629   -12.65235
         10  |  -6.251099   .2136798   -29.25   0.000    -6.669904   -5.832294
         11  |   .2194068   .2167097     1.01   0.311    -.2053364      .64415
         12  |  -14.51714   .2189171   -66.31   0.000    -14.94621   -14.08807
         13  |   .0340119   .2334322     0.15   0.884    -.4235068    .4915305
         14  |  -7.736819   .2419127   -31.98   0.000    -8.210959   -7.262678
         15  |          0  (omitted)
         16  |  -1.831103    .233923    -7.83   0.000    -2.289584   -1.372623
             |
       _cons |    45.5148   5.654182     8.05   0.000     34.43281     56.5968
-------------+----------------------------------------------------------------
     sigma_u |  17.531932
     sigma_e |  24.428128
         rho |  .33997117   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. est store A

. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="All Pay Auction", i(subjectid) vce(cluster sessi
> onid)

Random-effects GLS regression                   Number of obs     =      1,280
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.0310                                         min =         13
     Between = 0.1809                                         avg =       20.0
     Overall = 0.0846                                         max =         30

                                                Wald chi2(3)      =          .
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =          .

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
           x | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
         d75 |  -8.823015   2.707373    -3.26   0.001    -14.12937   -3.516661
         inv |   15.64664   6.305487     2.48   0.013     3.288109    28.00516
     first20 |   .7617391   2.707106     0.28   0.778    -4.544092     6.06757
             |
   sessionid |
          1  |          0  (empty)
          2  |          0  (empty)
          3  |          0  (empty)
          4  |          0  (empty)
          5  |          0  (empty)
          6  |          0  (empty)
          7  |          0  (empty)
          8  |          0  (empty)
          9  |   17.37971   .0574491   302.52   0.000     17.26711    17.49231
         10  |  -9.457426   .0672525  -140.63   0.000    -9.589238   -9.325613
         11  |   7.052316     .05702   123.68   0.000     6.940559    7.164074
         12  |  -1.198003   .0572216   -20.94   0.000    -1.310156   -1.085851
         13  |  -2.559409   .0544918   -46.97   0.000    -2.666211   -2.452607
         14  |  -11.53917   .0600383  -192.20   0.000    -11.65684    -11.4215
         15  |          0  (omitted)
         16  |   .8415434   .0543048    15.50   0.000      .735108    .9479789
             |
       _cons |   36.89935   2.515556    14.67   0.000     31.96895    41.82975
-------------+----------------------------------------------------------------
     sigma_u |  17.820295
     sigma_e |  31.362447
         rho |  .24406027   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. est store B

. *xtreg x12hat d75 inv f75 if Type==1 & validriskloss==1 & contest=="All Pay Auction", i(subjectid) vce(clus
> ter sessionid)
. *est store C
. *LOTTERY
. xtreg x d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =      1,280
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.1223                                         min =         13
     Between = 0.1529                                         avg =       20.0
     Overall = 0.1389                                         max =         28

                                                Wald chi2(3)      =          .
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =          .

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
           x | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
         d75 |  -5.882275   3.203799    -1.84   0.066     -12.1616    .3970548
         inv |   10.74005   5.453056     1.97   0.049     .0522542    21.42784
     first20 |   15.58286   3.192418     4.88   0.000     9.325839    21.83989
             |
   sessionid |
          2  |   5.564767   .0909531    61.18   0.000     5.386502    5.743032
          3  |   .7650709   .0590974    12.95   0.000     .6492421    .8808996
          4  |  -7.437572   .0175748  -423.20   0.000    -7.472018   -7.403126
          5  |   17.36228   .0237691   730.45   0.000     17.31569    17.40887
          6  |   4.723308   .0177295   266.41   0.000     4.688559    4.758057
          7  |   19.62122   .0262991   746.08   0.000     19.56967    19.67276
          8  |   12.94197   .0224908   575.43   0.000     12.89789    12.98606
          9  |          0  (empty)
         10  |          0  (empty)
         11  |          0  (empty)
         12  |          0  (empty)
         13  |          0  (empty)
         14  |          0  (empty)
         15  |          0  (empty)
         16  |          0  (empty)
             |
       _cons |   29.78293    .953521    31.23   0.000     27.91406     31.6518
-------------+----------------------------------------------------------------
     sigma_u |   20.48359
     sigma_e |  23.540113
         rho |  .43090403   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. est store D

. xtreg x d75 inv first20 i.sessionid if Type==2 & contest=="Lottery", i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =      1,280
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.0401                                         min =         12
     Between = 0.1494                                         avg =       20.0
     Overall = 0.0842                                         max =         27

                                                Wald chi2(3)      =          .
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =          .

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
           x | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
         d75 |   1.737756   4.139132     0.42   0.675    -6.374793    9.850305
         inv |   13.42103   7.400565     1.81   0.070    -1.083816    27.92587
     first20 |   8.921215   4.128025     2.16   0.031     .8304354    17.01199
             |
   sessionid |
          2  |   2.305278    .093803    24.58   0.000     2.121428    2.489129
          3  |  -16.83406   .0728976  -230.93   0.000    -16.97693   -16.69118
          4  |  -14.14342   .0488577  -289.48   0.000    -14.23918   -14.04766
          5  |   -2.74914   .0235378  -116.80   0.000    -2.795273   -2.703007
          6  |  -14.11689   .0236555  -596.77   0.000    -14.16325   -14.07052
          7  |  -2.829071   .0416383   -67.94   0.000     -2.91068   -2.747461
          8  |   7.493147   .0326429   229.55   0.000     7.429168    7.557126
          9  |          0  (empty)
         10  |          0  (empty)
         11  |          0  (empty)
         12  |          0  (empty)
         13  |          0  (empty)
         14  |          0  (empty)
         15  |          0  (empty)
         16  |          0  (empty)
             |
       _cons |   42.49708   2.131756    19.94   0.000     38.31891    46.67524
-------------+----------------------------------------------------------------
     sigma_u |  20.396695
     sigma_e |  26.882051
         rho |  .36536066   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. est store E

. *reg x12 d75 inv f75 if Type==1  &  contest=="Lottery", vce(cluster subjectid)
. *est store F
. 
. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05
>  *** 0.01) 
(output written to table5.doc)

. esttab A B D E using table5.doc, se r2 keep(_cons d75 inv first20 _cons) replace f starlevels(* 0.1 ** 0.05
>  *** 0.01)
(output written to table5.doc)

. 
. *******************
. ******TABLE 6******
. *******************
. 
. **********DISPERSION MEASURES****************************
. clear

. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(6 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(4 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. keep if periodt>10
(2,560 observations deleted)

. 
. gen x_sd=x

. gen x_med=x

. 
. sort lottery Type alpha sessionid subjectid

. collapse (mean) x (sd) x_sd (p50) x_med, by(lottery Type alpha sessionid subjectid)

. gen coeff_var=x_sd/x
(38 missing values generated)

. 
. gen dalpha=0

. replace dalpha=1 if alpha==0.75
(255 real changes made)

. 
. *H_s measure = SD of the median
. by lottery Type alpha sessionid: egen x_sd_med=sd(x_med)

. *D_s measure =  Median of the SD
. by lottery Type alpha sessionid: egen x_med_sd=median(x_sd)

. 
. sort lottery Type alpha sessionid

. collapse x_med_sd x_sd_med, by(lottery Type alpha sessionid)

. 
. *Compare alpha's*
. save cv_tests, replace
file cv_tests.dta saved

. 
. keep if alpha==0.25
(32 observations deleted)

. rename x_sd_med x_med1

. rename x_med_sd x_sd1

. save cv_type1, replace
file cv_type1.dta saved

. clear

. 
. use cv_tests

. keep if alpha==0.75
(32 observations deleted)

. rename x_med_sd x_sd2

. rename x_sd_med x_med2

. save cv_type2, replace
file cv_type2.dta saved

. merge 1:1 Type sessionid using "cv_type1.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                                32  (_merge==3)
    -----------------------------------------

. 
. sort lottery Type

. *H_s measure = SD of the median
. by lottery Type: signrank x_med1=x_med2

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, Type = 1

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          30          18
    Negative |        1           6          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z =  1.680
Prob > |z| = 0.0929
Exact prob = 0.1094

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, Type = 2

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          13          18
    Negative |        4          23          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z = -0.700
Prob > |z| = 0.4838
Exact prob = 0.5469

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, Type = 1

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          20          18
    Negative |        4          16          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z =  0.280
Prob > |z| = 0.7794
Exact prob = 0.8438

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, Type = 2

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        5          25          18
    Negative |        3          11          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z =  0.980
Prob > |z| = 0.3270
Exact prob = 0.3828

. *D_s measure = Median of the SD
. by lottery Type: signrank x_sd1=x_sd2

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, Type = 1

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        7          35          18
    Negative |        1           1          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z =  2.380
Prob > |z| = 0.0173
Exact prob = 0.0156

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, Type = 2

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          24          18
    Negative |        2          12          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z =  0.840
Prob > |z| = 0.4008
Exact prob = 0.4609

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, Type = 1

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          20          18
    Negative |        4          16          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z =  0.280
Prob > |z| = 0.7794
Exact prob = 0.8438

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, Type = 2

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          16          18
    Negative |        4          20          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z = -0.280
Prob > |z| = 0.7794
Exact prob = 0.8438

. 
. *Compare Types*
. clear

. use cv_tests

. 
. keep if Type==1
(32 observations deleted)

. rename x_med_sd x_sd1

. rename x_sd_med x_med1

. save cv_type1, replace
file cv_type1.dta saved

. clear

. use cv_tests

. keep if Type==2
(32 observations deleted)

. rename x_med_sd x_sd2

. rename x_sd_med x_med2

. save cv_type2, replace
file cv_type2.dta saved

. merge 1:1 alpha sessionid using "cv_type1.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                                32  (_merge==3)
    -----------------------------------------

. 
. sort lottery alpha

. *H_s measure = SD of the median
. by lottery alpha: signrank x_med1=x_med2

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2          11          18
    Negative |        6          25          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z = -0.980
Prob > |z| = 0.3270
Exact prob = 0.3828

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           5          18
    Negative |        6          31          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z = -1.820
Prob > |z| = 0.0687
Exact prob = 0.0781

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        1           3          18
    Negative |        7          33          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z = -2.100
Prob > |z| = 0.0357
Exact prob = 0.0391

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        4          15          18
    Negative |        4          21          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_med1 = x_med2
         z = -0.420
Prob > |z| = 0.6744
Exact prob = 0.7422

. *D_s measure =  Median of the SD
. by lottery alpha: signrank x_sd1=x_sd2

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        1           4          18
    Negative |        7          32          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z = -1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

-------------------------------------------------------------------------------------------------------------
-> lottery = 0, alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        2           4          18
    Negative |        6          32          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z = -1.960
Prob > |z| = 0.0499
Exact prob = 0.0547

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, alpha = .25

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        6          21          18
    Negative |        2          15          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z =  0.420
Prob > |z| = 0.6744
Exact prob = 0.7422

-------------------------------------------------------------------------------------------------------------
-> lottery = 1, alpha = .75

Wilcoxon signed-rank test

        Sign |      Obs   Sum ranks    Expected
-------------+---------------------------------
    Positive |        3           7          18
    Negative |        5          29          18
        Zero |        0           0           0
-------------+---------------------------------
         All |        8          36          36

Unadjusted variance       51.00
Adjustment for ties        0.00
Adjustment for zeros       0.00
                     ----------
Adjusted variance         51.00

H0: x_sd1 = x_sd2
         z = -1.540
Prob > |z| = 0.1235
Exact prob = 0.1484

. 
. *Compare Contests*
. clear

. use cv_tests

. sort alpha Type lottery

. *H_s measure = SD of the median
. by alpha Type: ranksum x_sd_med, by(lottery)

-------------------------------------------------------------------------------------------------------------
-> alpha = .25, Type = 1

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          66          68
           1 |        8          70          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties        0.00
                     ----------
Adjusted variance         90.67

H0: x_sd_med(lottery==0) = x_sd_med(lottery==1)
         z = -0.210
Prob > |z| = 0.8336
Exact prob = 0.8785

-------------------------------------------------------------------------------------------------------------
-> alpha = .25, Type = 2

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          54          68
           1 |        8          82          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties        0.00
                     ----------
Adjusted variance         90.67

H0: x_sd_med(lottery==0) = x_sd_med(lottery==1)
         z = -1.470
Prob > |z| = 0.1415
Exact prob = 0.1605

-------------------------------------------------------------------------------------------------------------
-> alpha = .75, Type = 1

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          61          68
           1 |        8          75          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties        0.00
                     ----------
Adjusted variance         90.67

H0: x_sd_med(lottery==0) = x_sd_med(lottery==1)
         z = -0.735
Prob > |z| = 0.4622
Exact prob = 0.5054

-------------------------------------------------------------------------------------------------------------
-> alpha = .75, Type = 2

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          73          68
           1 |        8          63          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties        0.00
                     ----------
Adjusted variance         90.67

H0: x_sd_med(lottery==0) = x_sd_med(lottery==1)
         z =  0.525
Prob > |z| = 0.5995
Exact prob = 0.6454

. *D_s measure =  Median of the SD
. by alpha Type: ranksum x_med_sd, by(lottery)

-------------------------------------------------------------------------------------------------------------
-> alpha = .25, Type = 1

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          85          68
           1 |        8          51          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties        0.00
                     ----------
Adjusted variance         90.67

H0: x_med_sd(lottery==0) = x_med_sd(lottery==1)
         z =  1.785
Prob > |z| = 0.0742
Exact prob = 0.0830

-------------------------------------------------------------------------------------------------------------
-> alpha = .25, Type = 2

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          85          68
           1 |        8          51          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties       -0.13
                     ----------
Adjusted variance         90.53

H0: x_med_sd(lottery==0) = x_med_sd(lottery==1)
         z =  1.787
Prob > |z| = 0.0740
Exact prob = 0.0799

-------------------------------------------------------------------------------------------------------------
-> alpha = .75, Type = 1

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          62          68
           1 |        8          74          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties        0.00
                     ----------
Adjusted variance         90.67

H0: x_med_sd(lottery==0) = x_med_sd(lottery==1)
         z = -0.630
Prob > |z| = 0.5286
Exact prob = 0.5737

-------------------------------------------------------------------------------------------------------------
-> alpha = .75, Type = 2

Two-sample Wilcoxon rank-sum (Mann–Whitney) test

     lottery |      Obs    Rank sum    Expected
-------------+---------------------------------
           0 |        8          73          68
           1 |        8          63          68
-------------+---------------------------------
    Combined |       16         136         136

Unadjusted variance       90.67
Adjustment for ties        0.00
                     ----------
Adjusted variance         90.67

H0: x_med_sd(lottery==0) = x_med_sd(lottery==1)
         z =  0.525
Prob > |z| = 0.5995
Exact prob = 0.6454

. 
. *******************
. ******TABLE 7******
. *******************
. 
. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(6 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(4 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. keep if contestperiod==1
(0 observations deleted)

. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. gen first20=0

. replace first20=1 if part==3
(2,560 real changes made)

. 
. gen change=.
(5,120 missing values generated)

. replace change=0 if Type==1 & x12==.
(530 real changes made)

. replace change=1 if Type==1 & x12~=.
(2,030 real changes made)

. 
. gen reduce=0

. replace reduce=1 if Type==1 & x12hat<x1hat
(1,065 real changes made)

. 
. gen raise=0

. replace raise=1 if Type==1 & x12hat>x1hat
(965 real changes made)

. 
. gen rationalrev=0

. replace rationalrev=1 if x1hat~=br1
(5,000 real changes made)

. *replace rationalrev=1 if x2hat & lottery==1
. 
. gen overbid=1

. replace overbid=0 if x1hat<=br1  
(1,540 real changes made)

. 
. gen underbid=0

. replace underbid=1 if x1hat<br1 
(1,420 real changes made)

. 
. gen ahead=0

. replace ahead=1 if x1hat>x2hat
(2,544 real changes made)

. 
. gen onedisttoother=x1hat-x2hat

. gen twodisttoother=x12hat-x2hat

. 
. gen irr_nochange=0 

. replace irr_nochange=1 if changehat==0 & rationalrev==1
(956 real changes made)

. 
. gen irr_rev_dec=0

. replace irr_rev_dec=1 if irr_nochange==1
(956 real changes made)

. replace irr_rev_dec=1 if changehat==1 & x1hat==br1
(16 real changes made)

. 
. label var rationalrev "Revising is rational"

. label var changehat "Subject revised"

. label var irr_nochange "No change even though was rational"

. 
. *******LOTTERY***************************************************
. xtprobit change d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", ///
> re i(subjectid) vce(cluster sessionid)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -769.67696  
Iteration 1:   log pseudolikelihood = -737.66994  
Iteration 2:   log pseudolikelihood =  -737.5654  
Iteration 3:   log pseudolikelihood = -737.56539  

Fitting full model:

rho =  0.0     log pseudolikelihood = -737.56539
rho =  0.1     log pseudolikelihood = -674.88078
rho =  0.2     log pseudolikelihood = -658.98942
rho =  0.3     log pseudolikelihood =  -653.9235
rho =  0.4     log pseudolikelihood = -653.25686
rho =  0.5     log pseudolikelihood = -655.88222

Iteration 0:   log pseudolikelihood = -653.43911  
Iteration 1:   log pseudolikelihood = -652.27563  
Iteration 2:   log pseudolikelihood = -652.20049  
Iteration 3:   log pseudolikelihood = -652.20035  
Iteration 4:   log pseudolikelihood = -652.20035  

Calculating robust standard errors ...

Random-effects probit regression                      Number of obs    = 1,280
Group variable: subjectid                             Number of groups =    64

Random effects u_i ~ Gaussian                         Obs per group:
                                                                   min =    13
                                                                   avg =  20.0
                                                                   max =    28

Integration method: mvaghermite                       Integration pts. =    12

                                                      Wald chi2(4)     =     .
Log pseudolikelihood = -652.20035                     Prob > chi2      =     .

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      change | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
         d75 |   .2187808   .0882491     2.48   0.013     .0458158    .3917458
         inv |   .0421885   .2464714     0.17   0.864    -.4408865    .5252635
     first20 |  -.0110342   .0872932    -0.13   0.899    -.1821257    .1600572
             |
   sessionid |
          2  |  -.4962743   .0291296   -17.04   0.000    -.5533673   -.4391813
          3  |  -.0632032   .0171023    -3.70   0.000    -.0967231   -.0296834
          4  |    .165311   .0048128    34.35   0.000      .155878     .174744
          5  |  -.5269191   .0129689   -40.63   0.000    -.5523376   -.5015006
          6  |  -.1236445   .0077276   -16.00   0.000    -.1387902   -.1084987
          7  |   .2569834   .0085255    30.14   0.000     .2402738    .2736931
          8  |  -.7889253   .0207369   -38.04   0.000    -.8295689   -.7482816
             |
       _cons |   .7769456   .0630668    12.32   0.000     .6533369    .9005542
-------------+----------------------------------------------------------------
    /lnsig2u |  -.5646937   .3005689                     -1.153798    .0244106
-------------+----------------------------------------------------------------
     sigma_u |   .7540121   .1133163                      .5616373     1.01228
         rho |   .3624621   .0694565                       .239796    .5061023
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                                 Number of obs = 1,280
Model VCE: Robust

Expression: Pr(change=1), predict(pr)
dy/dx wrt:  d75 inv first20 2.sessionid 3.sessionid 4.sessionid 5.sessionid 6.sessionid 7.sessionid
            8.sessionid

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
         d75 |    .058052   .0227854     2.55   0.011     .0133935    .1027105
         inv |   .0111944   .0652702     0.17   0.864    -.1167329    .1391218
     first20 |  -.0029279   .0231626    -0.13   0.899    -.0483258      .04247
             |
   sessionid |
          2  |  -.1376612   .0022621   -60.86   0.000    -.1420948   -.1332276
          3  |  -.0158985   .0049808    -3.19   0.001    -.0256607   -.0061364
          4  |   .0389159   .0014934    26.06   0.000     .0359888     .041843
          5  |   -.146958   .0040178   -36.58   0.000    -.1548328   -.1390832
          6  |  -.0316014   .0024483   -12.91   0.000       -.0364   -.0268028
          7  |   .0587594   .0028064    20.94   0.000     .0532589      .06426
          8  |  -.2285684   .0055349   -41.30   0.000    -.2394167   -.2177201
------------------------------------------------------------------------------
Note: dy/dx for factor levels is the discrete change from the base level.

. est store A

. ******************************************
. xtprobit change adist1 adist1_sq ahead d75 inv first20 i.sessionid if Type==1 &  contest=="Lottery", ///
> re i(subjectid) vce(cluster sessionid)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -769.67696  
Iteration 1:   log pseudolikelihood = -700.65596  
Iteration 2:   log pseudolikelihood = -700.22552  
Iteration 3:   log pseudolikelihood = -700.22551  

Fitting full model:

rho =  0.0     log pseudolikelihood = -700.22551
rho =  0.1     log pseudolikelihood =   -639.821
rho =  0.2     log pseudolikelihood = -623.81274
rho =  0.3     log pseudolikelihood = -618.59021
rho =  0.4     log pseudolikelihood = -617.79237
rho =  0.5     log pseudolikelihood = -619.68793

Iteration 0:   log pseudolikelihood =   -617.852  
Iteration 1:   log pseudolikelihood = -615.13964  
Iteration 2:   log pseudolikelihood = -615.07885  
Iteration 3:   log pseudolikelihood = -615.07879  
Iteration 4:   log pseudolikelihood = -615.07879  

Calculating robust standard errors ...

Random-effects probit regression                      Number of obs    = 1,280
Group variable: subjectid                             Number of groups =    64

Random effects u_i ~ Gaussian                         Obs per group:
                                                                   min =    13
                                                                   avg =  20.0
                                                                   max =    28

Integration method: mvaghermite                       Integration pts. =    12

                                                      Wald chi2(7)     =     .
Log pseudolikelihood = -615.07879                     Prob > chi2      =     .

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      change | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
      adist1 |   .0352686   .0069834     5.05   0.000     .0215813    .0489558
   adist1_sq |  -.0003727   .0000797    -4.68   0.000    -.0005288   -.0002166
       ahead |  -.7062746   .1444013    -4.89   0.000     -.989296   -.4232533
         d75 |   .2389978   .0978247     2.44   0.015     .0472649    .4307307
         inv |  -.0221107    .260318    -0.08   0.932    -.5323246    .4881032
     first20 |  -.0681038   .0962076    -0.71   0.479    -.2566673    .1204596
             |
   sessionid |
          2  |  -.5895099   .0426357   -13.83   0.000    -.6730743   -.5059455
          3  |    .139452   .0469407     2.97   0.003     .0474499    .2314541
          4  |   .2200639   .0212347    10.36   0.000     .1784446    .2616831
          5  |  -.4837896   .0463659   -10.43   0.000    -.5746651   -.3929141
          6  |  -.1180472   .0210454    -5.61   0.000    -.1592955   -.0767988
          7  |   .3051533   .0558908     5.46   0.000     .1956093    .4146972
          8  |  -.9474489    .054865   -17.27   0.000    -1.054982   -.8399154
             |
       _cons |   .6758573   .1203529     5.62   0.000     .4399699    .9117446
-------------+----------------------------------------------------------------
    /lnsig2u |   -.493182    .274208                      -1.03062    .0442558
-------------+----------------------------------------------------------------
     sigma_u |   .7814602   .1071413                      .5973154    1.022375
         rho |   .3791442   .0645469                       .262964    .5110621
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                                 Number of obs = 1,280
Model VCE: Robust

Expression: Pr(change=1), predict(pr)
dy/dx wrt:  adist1 adist1_sq ahead d75 inv first20 2.sessionid 3.sessionid 4.sessionid 5.sessionid
            6.sessionid 7.sessionid 8.sessionid

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
      adist1 |    .008764   .0014413     6.08   0.000     .0059391    .0115888
   adist1_sq |  -.0000926   .0000175    -5.29   0.000    -.0001269   -.0000583
       ahead |  -.1755037   .0326778    -5.37   0.000     -.239551   -.1114565
         d75 |   .0593891    .023566     2.52   0.012     .0132005    .1055777
         inv |  -.0054943    .064754    -0.08   0.932    -.1324099    .1214212
     first20 |  -.0169233   .0235593    -0.72   0.473    -.0630986    .0292521
             |
   sessionid |
          2  |  -.1561295   .0077167   -20.23   0.000     -.171254   -.1410051
          3  |   .0315058   .0093295     3.38   0.001     .0132203    .0497914
          4  |   .0485861   .0038315    12.68   0.000     .0410764    .0560958
          5  |  -.1259573   .0113918   -11.06   0.000    -.1482849   -.1036298
          6  |  -.0285105    .005233    -5.45   0.000    -.0387671   -.0182539
          7  |   .0656866   .0120842     5.44   0.000      .042002    .0893713
          8  |  -.2616729   .0049277   -53.10   0.000    -.2713311   -.2520148
------------------------------------------------------------------------------
Note: dy/dx for factor levels is the discrete change from the base level.

. est store B

. ******************************************
. xtprobit change adist1 adist1_sq ahead d75 inv first20 RiskLineSwitchToB LossLineSwitchToB //// 
> xjow female if Type==1 & validriskloss==1 &  contest=="Lottery", ///
> re i(subjectid) vce(cluster sessionid)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -636.72229  
Iteration 1:   log pseudolikelihood = -582.32162  
Iteration 2:   log pseudolikelihood = -582.07488  
Iteration 3:   log pseudolikelihood = -582.07487  

Fitting full model:

rho =  0.0     log pseudolikelihood = -582.07487
rho =  0.1     log pseudolikelihood = -527.31576
rho =  0.2     log pseudolikelihood = -513.03345
rho =  0.3     log pseudolikelihood = -508.28716
rho =  0.4     log pseudolikelihood = -508.04835
rho =  0.5     log pseudolikelihood = -511.76404

Iteration 0:   log pseudolikelihood = -507.41881  
Iteration 1:   log pseudolikelihood = -503.16112  
Iteration 2:   log pseudolikelihood = -503.09221  
Iteration 3:   log pseudolikelihood = -503.09219  

Calculating robust standard errors ...

Random-effects probit regression                      Number of obs    = 1,044
Group variable: subjectid                             Number of groups =    53

Random effects u_i ~ Gaussian                         Obs per group:
                                                                   min =    13
                                                                   avg =  19.7
                                                                   max =    28

Integration method: mvaghermite                       Integration pts. =    12

                                                      Wald chi2(7)     =     .
Log pseudolikelihood = -503.09219                     Prob > chi2      =     .

                                   (Std. err. adjusted for 8 clusters in sessionid)
-----------------------------------------------------------------------------------
                  |               Robust
           change | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
------------------+----------------------------------------------------------------
           adist1 |    .035572   .0082354     4.32   0.000     .0194309    .0517131
        adist1_sq |  -.0003774   .0000852    -4.43   0.000    -.0005443   -.0002105
            ahead |   -.750815   .1683301    -4.46   0.000    -1.080736   -.4208941
              d75 |   .2287504   .1046125     2.19   0.029     .0237138    .4337871
              inv |  -.1704147   .2044691    -0.83   0.405    -.5711668    .2303375
          first20 |  -.0539518   .1004698    -0.54   0.591     -.250869    .1429655
RiskLineSwitchToB |  -.2095856   .0255807    -8.19   0.000    -.2597228   -.1594484
LossLineSwitchToB |   .0874333   .0533891     1.64   0.101    -.0172074    .1920741
             xjow |   .0068604   .0048086     1.43   0.154    -.0025641     .016285
           female |   .0037438   .2641341     0.01   0.989    -.5139496    .5214372
            _cons |   1.845804   .5477337     3.37   0.001     .7722659    2.919342
------------------+----------------------------------------------------------------
         /lnsig2u |  -.4076694   .3317836                     -1.057953    .2426146
------------------+----------------------------------------------------------------
          sigma_u |   .8155972   .1353009                      .5892076    1.128972
              rho |   .3994711   .0795929                      .2577008    .5603579
-----------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                                 Number of obs = 1,044
Model VCE: Robust

Expression: Pr(change=1), predict(pr)
dy/dx wrt:  adist1 adist1_sq ahead d75 inv first20 RiskLineSwitchToB LossLineSwitchToB xjow female

-----------------------------------------------------------------------------------
                  |            Delta-method
                  |      dy/dx   std. err.      z    P>|z|     [95% conf. interval]
------------------+----------------------------------------------------------------
           adist1 |   .0087322   .0014687     5.95   0.000     .0058535    .0116109
        adist1_sq |  -.0000926   .0000163    -5.68   0.000    -.0001246   -.0000607
            ahead |  -.1843095   .0318074    -5.79   0.000    -.2466509   -.1219681
              d75 |   .0561535   .0242787     2.31   0.021     .0085681    .1037389
              inv |  -.0418333   .0509264    -0.82   0.411    -.1416472    .0579807
          first20 |   -.013244   .0240796    -0.55   0.582    -.0604392    .0339511
RiskLineSwitchToB |  -.0514489   .0058973    -8.72   0.000    -.0630074   -.0398904
LossLineSwitchToB |   .0214631   .0127618     1.68   0.093    -.0035495    .0464756
             xjow |   .0016841   .0011237     1.50   0.134    -.0005183    .0038865
           female |    .000919   .0648951     0.01   0.989    -.1262731    .1281112
-----------------------------------------------------------------------------------

. est store C

. *****************************************
. esttab A B C using table.tex, se r2 keep(adist1 adist1_sq ahead d75 inv ///
> RiskLineSwitchToB LossLineSwitchToB xjow female) ///
> replace f starlevels(* 0.1 ** 0.05 *** 0.01)
(output written to table.tex)

. ****************************************************************
. 
. *******************
. ******TABLE 8******
. *******************
. clear

. do "Contests with Revisions Replication files\Stata do files\var_definitions.do"

. clear

. 
. *load dataset
. use "Contests with Revisions Replication files\Stata dataset to use for analysis\revisionscontestdata.dta"

. 
. gen typea=1 if Type==1
(2,936 missing values generated)

. replace typea=0 if Type==2
(2,680 real changes made)

. 
. drop if alpha==.
(384 observations deleted)

. 
. 
. *format payoff1 payoff2 x x1hat x2hat x12hat %9.2f
. 
. *Create contest treatment variables
. gen lottery=1

. replace lottery=0 if sessionid>8
(2,560 real changes made)

. gen contest="Lottery" if lottery==1
(2,560 missing values generated)

. replace contest="All Pay Auction" if lottery==0
variable contest was str7 now str15
(2,560 real changes made)

. 
. *Periods 1-20 and 21-40
. gen contestperiod=0

. replace contestperiod=1 if part==3
(2,560 real changes made)

. replace contestperiod=1 if part==4
(2,560 real changes made)

. 
. *Sessionid 1-4 = Lottery 25-75
. *Sessionid 5-8 = Lottery 75-25
. *Sessionid 9-12 =  All pay 25-75 
. *Sessionid 13-16 =  All pay 75-25
. 
. label var x1hat "Type A - Round 1"

. label var x2hat "Type B - Round 1"

. label var x12hat "Type A - Round 2"

. label var xjow "Investment for reward of $0"

. 
. *Code "guesses" as missing for Type A players?
. replace x12guess=. if x12guess==-1
(3,421 real changes made, 3,421 to missing)

. 
. 
. *****Variables related to best responses
. gen br1=10*sqrt(x2hat)-x2hat if lottery==1 & x2hat>0
(2,826 missing values generated)

. replace br1=0.01 if lottery==1 & x2hat==0
(266 real changes made)

. gen br2=10*sqrt(x1hat)-x1hat if lottery==1 & x1hat>0
(2,754 missing values generated)

. replace br2=0.01 if lottery==1 & x1hat==0
(194 real changes made)

. gen notunique=runiform()

. replace br1=x2hat+0.01 if lottery==0 & x2hat<=99.98 
(2,246 real changes made)

. replace br1=x2hat+0.01 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique<=0.5
(6 real changes made)

. replace br1=0 if lottery==0 & x2hat>99.98 & x2hat<100 & notunique>0.5 
(4 real changes made)

. replace br1=0 if lottery==0 & x2hat==100
(304 real changes made)

. gen diff_br_1=abs(x1hat-br1)

. gen diff_br_2=abs(x12hat-br1)

. 
. gen match2=1 if x12hat==x2hat
(4,906 missing values generated)

. replace match2=0 if x12hat~=x2hat
(4,906 real changes made)

. 
. gen x12guesshat=.
(5,120 missing values generated)

. replace x12guesshat=x12guess if x12guess~=.
(1,699 real changes made)

. replace x12guesshat=x1hat if Type==2 & x12guess==.
(861 real changes made)

. 
. gen absdev=abs(x12guesshat-x12hat)
(2,560 missing values generated)

. 
. *Generate equilibrium predictions
. gen x1eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x1eq=(1-alpha)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x2eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x2eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. gen x12eq=Prize/4 if lottery==1
(2,560 missing values generated)

. replace x12eq=((1-alpha)^2)*(Prize/2) if lottery==0
(2,560 real changes made)

. 
. gen x12eq_expost=br1

. 
. *Generate order dummies (f75=1 if the session was a 75-25 and 0 if a 25-75
. gen f25=1

. *replace f25=0 if sessionid>=5
. *replace f25=1 if sessionid>=9
. *replace f25=0 if sessionid>=13
. replace f25=0 if Period>20 & alpha==0.25
(1,280 real changes made)

. 
. gen f75=1 if f25==0
(3,840 missing values generated)

. replace f75=0 if f25==1
(3,840 real changes made)

. 
. gen order="75-25" if f75==1
(3,840 missing values generated)

. replace order="25-75" if f75==0
(3,840 real changes made)

. 
. *Rescale period number
. gen periodt=Period

. replace periodt=Period-20 if Period>20
(2,560 real changes made)

. 
. gen inv=1/periodt

. 
. *Define trand variable
. 
. *Generate A's winning probability in round 1
. gen probwin1=0

. replace probwin1=1 if lottery==0 & x1hat>x2hat
(1,364 real changes made)

. replace probwin1=0.5 if lottery==0 & x1hat==x2hat
(110 real changes made)

. replace probwin1=x1hat/(x1hat+x2hat) if x1hat+x2hat>0 & lottery==1
(2,366 real changes made)

. replace probwin1=0.5 if x1hat+x2hat==0 & lottery==1
(22 real changes made)

. 
. 
. *Dummy for alpha
. gen d75=0

. replace d75=1 if alpha==0.75
(2,560 real changes made)

. 
. *****Creates a dummy variable for subjects who switched only once on both RISK and LOSS 
. gen validriskloss=1

. replace validriskloss=0 if RiskLineSwitchToB==-1
(480 real changes made)

. replace validriskloss=0 if LossLineSwitchToB==-1
(240 real changes made)

. sum validriskloss if part==5

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
validriskl~s |          0

. 
. ***Variable that measures the distance to the best response**
. *In Round 1
. gen dist1=x1hat-br1

. gen adist1=abs(x1hat-br1)

. gen adist1_sq=(x1hat-br1)^2

. gen dist2=x2hat-br2
(2,560 missing values generated)

. *In Round 2
. gen dist12=x12hat-br1

. *Interaction with treatment
. gen distinter=dist12*lottery

. 
. 
. *Investing the value of the prize
. gen x1100=0

. replace x1100=1 if x1hat==100
(296 real changes made)

. gen x2100=0

. replace x2100=1 if x2hat==100
(570 real changes made)

. gen x12100=0

. replace x12100=1 if x12hat==100
(366 real changes made)

. 
. 
. *Investing zero
. gen x10=0

. replace x10=1 if x1hat==0
(484 real changes made)

. gen x20=0

. replace x20=1 if x2hat==0
(864 real changes made)

. gen x120=0

. replace x120=1 if x12hat==0
(470 real changes made)

. 
. *Upper bound
. gen ub=(1-alpha)*100

. replace ub=25 if contest=="Lottery"
(1,280 real changes made)

. 
. 
. *Dummy for >0 joy of winning
. gen joyful=1

. replace joyful=0 if xjow==0
(3,080 real changes made)

. 
. *Create some alternative risk and loss aversion measures based on choices
. gen risksafechoices=20-RiskLineSwitchToB

. gen losssafechoices=20-LossLineSwitchToB 

. 
. gen riskaverse=0 

. replace riskaverse=1 if RiskLineSwitchToB<10 & risksafechoices~=.
(1,520 real changes made)

. replace riskaverse=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskneutral=0 

. replace riskneutral=1 if RiskLineSwitchToB>=10 & RiskLineSwitchToB<=11
(2,040 real changes made)

. replace riskneutral=. if risksafechoices==-1
(0 real changes made)

. 
. gen riskloving=0 

. replace riskloving=1 if RiskLineSwitchToB>11
(1,560 real changes made)

. replace riskloving=. if risksafechoices==-1
(0 real changes made)

. 
. gen risk=. if validriskloss==.
(5,120 missing values generated)

. replace risk=0.25-2.5 if RiskLineSwitchToB==1
(0 real changes made)

. replace risk=0.5-2.5 if RiskLineSwitchToB==2
(0 real changes made)

. replace risk=0.75-2.5 if RiskLineSwitchToB==3
(0 real changes made)

. replace risk=1-2.5 if RiskLineSwitchToB==4
(80 real changes made)

. replace risk=1.25-2.5 if RiskLineSwitchToB==5
(80 real changes made)

. replace risk=1.5-2.5 if RiskLineSwitchToB==6
(0 real changes made)

. replace risk=1.75-2.5 if RiskLineSwitchToB==7
(80 real changes made)

. replace risk=2-2.5 if RiskLineSwitchToB==8
(480 real changes made)

. replace risk=2.25-2.5 if RiskLineSwitchToB==9
(320 real changes made)

. replace risk=2.5-2.5 if RiskLineSwitchToB==10
(960 real changes made)

. replace risk=2.75-2.5 if RiskLineSwitchToB==11
(1,080 real changes made)

. replace risk=3-2.5 if RiskLineSwitchToB==12
(960 real changes made)

. replace risk=3.25-2.5 if RiskLineSwitchToB==13
(160 real changes made)

. replace risk=3.5-2.5 if RiskLineSwitchToB==14
(120 real changes made)

. replace risk=3.75-2.5 if RiskLineSwitchToB==15
(120 real changes made)

. replace risk=4-2.5 if RiskLineSwitchToB==16
(200 real changes made)

. replace risk=4.25-2.5 if RiskLineSwitchToB==17
(0 real changes made)

. replace risk=4.5-2.5 if RiskLineSwitchToB==18
(0 real changes made)

. replace risk=4.75-2.5 if RiskLineSwitchToB==19
(0 real changes made)

. replace risk=5-2.5 if RiskLineSwitchToB==20
(0 real changes made)

. 
. *lambda =slope in the domain of losses
. *Use 0.5(5)+0.5*lambda*(y)=0
. *=> lambda=(2.5/(0.5*-y))
. *loss=lambda
. gen loss=.  if validriskloss==.
(5,120 missing values generated)

. replace loss=5/0.5 if LossLineSwitchToB==1
(0 real changes made)

. replace loss=5/1 if LossLineSwitchToB==2
(0 real changes made)

. replace loss=5/1.5 if LossLineSwitchToB==3
(80 real changes made)

. replace loss=5/2 if LossLineSwitchToB==4
(120 real changes made)

. replace loss=5/2.5 if LossLineSwitchToB==5
(560 real changes made)

. replace loss=5/3 if LossLineSwitchToB==6
(600 real changes made)

. replace loss=5/3.5 if LossLineSwitchToB==7
(560 real changes made)

. replace loss=5/4 if LossLineSwitchToB==8
(200 real changes made)

. replace loss=5/4.5 if LossLineSwitchToB==9
(480 real changes made)

. replace loss=5/5 if LossLineSwitchToB==10
(480 real changes made)

. replace loss=5/5.5 if LossLineSwitchToB==11
(760 real changes made)

. replace loss=5/6 if LossLineSwitchToB==12
(160 real changes made)

. replace loss=5/6.5 if LossLineSwitchToB==13
(360 real changes made)

. replace loss=5/7 if LossLineSwitchToB==14
(0 real changes made)

. replace loss=5/7.5 if LossLineSwitchToB==15
(80 real changes made)

. replace loss=5/8 if LossLineSwitchToB==16
(120 real changes made)

. replace loss=5/8.5 if LossLineSwitchToB==17
(40 real changes made)

. replace loss=5/9 if LossLineSwitchToB==18
(0 real changes made)

. replace loss=5/9.5 if LossLineSwitchToB==19
(0 real changes made)

. replace loss=5/10 if LossLineSwitchToB==20
(0 real changes made)

. 
. *Loss aversion
. gen lossaverse=.
(5,120 missing values generated)

. replace lossaverse=1 if LossLineSwitchToB<10
(3,120 real changes made)

. replace lossaverse=0 if LossLineSwitchToB>=10
(2,000 real changes made)

. replace lossaverse=. if LossLineSwitchToB==.
(0 real changes made)

. 
. 
. *gender dummy
. gen female=1 if gender==2
(2,960 missing values generated)

. replace female=0 if gender==1
(2,960 real changes made)

. 
. *1 = "Business Administration"; 2 = "Economics"; 3 = "Social Sciences"; 
. *4 = "Humanities"; 5 = "Natural Sciences"; *6 = "Math / Statistics"; 
. *7 = "Engineering / Computer Science"; 8 = "Other";
. gen engineer=1 if major==7
(3,200 missing values generated)

. replace engineer=0 if major~=7
(3,200 real changes made)

. gen economics=0

. replace economics=1 if major==2
(320 real changes made)

. *1 = "White"; 2 = "African-American"; 3 = "Hispanic"; 4 = "Asian";
. *5 = "American Indian"; 6 = "Pacific Islander";
. gen asian=1 if race==4
(2,560 missing values generated)

. replace asian=0 if race~=4
(2,560 real changes made)

. *1  = "Freshman"; 2 = "Sophomore"; 3 = "Junior"; 
. *4 = "Senior"; 5 = "Graduate Student";
. gen graduate=1 if class==5
(4,920 missing values generated)

. replace graduate=0 if class~=5
(4,920 real changes made)

. 
. *REGRET variables*
. 
. sort contest

. by contest: egen medreg1=median(regret1)

. by contest: egen medreg2=median(regret2)

. by contest: egen medreg3=median(regret3)

. by contest: egen medreg4=median(regret4)

. 
. by contest: egen medhapp1=median(happiness1)

. by contest: egen medhapp2=median(happiness2)

. by contest: egen medhapp3=median(happiness3)

. by contest: egen medhapp4=median(happiness4)

. 
. *Dummies
. *3.5=mid point of the scale"
. gen dreg1=0

. replace dreg1=1 if regret1>3
(960 real changes made)

. gen dreg2=0

. replace dreg2=1 if regret2>3
(880 real changes made)

. gen dreg3=0

. replace dreg3=1 if regret3>3
(1,960 real changes made)

. gen dreg4=0

. replace dreg4=1 if regret4>3
(2,040 real changes made)

. 
. gen dhapp1=0

. replace dhapp1=1 if happiness1>3
(4,200 real changes made)

. gen dhapp2=0

. replace dhapp2=1 if happiness2>3
(3,760 real changes made)

. gen dhapp3=0

. replace dhapp3=1 if happiness3>3
(840 real changes made)

. gen dhapp4=0

. replace dhapp4=1 if happiness4>3
(800 real changes made)

. 
. gen denvy1=0

. replace denvy1=1 if envy1>3
(680 real changes made)

. gen denvy2=0

. replace denvy2=1 if envy2>3
(520 real changes made)

. gen denvy3=0

. replace denvy3=1 if envy3>3
(2,160 real changes made)

. gen denvy4=0

. replace denvy4=1 if envy4>3
(1,840 real changes made)

. 
. gen block_x2=5

. replace block_x2=4 if x2hat<80
(4,042 real changes made)

. replace block_x2=3 if x2hat<60
(3,344 real changes made)

. replace block_x2=2 if x2hat<40
(2,656 real changes made)

. replace block_x2=1 if x2hat<20
(1,924 real changes made)

. 
. 
. gen won_contest1=0

. replace won_contest1=1 if payoff1==200-x
(2,336 real changes made)

. replace won_contest1=1 if payoff1>100 & x>0
(224 real changes made)

. replace won_contest1=1 if x>otherx & Type==1 & lottery==0
(0 real changes made)

. replace won_contest1=1 if x<otherx & Type==2 & lottery==0
(682 real changes made)

. 
. gen won_contest2=0

. replace won_contest2=1 if payoff2==200-x12hat & Type==1
(971 real changes made)

. replace won_contest2=1 if payoff2==200-x2hat & Type==2
(879 real changes made)

. replace won_contest2=1 if payoff2>100 & x12hat>0 & Type==1
(660 real changes made)

. replace won_contest2=1 if payoff2>100 & x2hat>0 & Type==2
(50 real changes made)

. replace won_contest2=1 if x12>otherx & Type==1 & lottery==0
(247 real changes made)

. replace won_contest2=1 if x12<otherx & Type==2 & lottery==0
(0 real changes made)

. 
. 
. gen payoff_round1=0

. replace payoff_round1=200-x1hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round1=200-x1hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round1=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round1=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round1=100-x1hat if x1hat<x2hat & Type==1 & lottery==0
(543 real changes made)

. replace payoff_round1=100-x1hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(19 real changes made)

. replace payoff_round1=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round1=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round1=payoff1 if lottery==1
(2,517 real changes made)

. 
. 
. gen payoff_round2=0

. replace payoff_round2=200-x12hat if x1hat>x2hat & Type==1 & lottery==0
(682 real changes made)

. replace payoff_round2=200-x12hat if x1hat==x2hat & win>=0.5 & Type==1 & lottery==0
(33 real changes made)

. replace payoff_round2=200-x2hat if x1hat<x2hat & Type==2 & lottery==0
(543 real changes made)

. replace payoff_round2=200-x2hat if x1hat==x2hat & win<0.5 &  Type==2 & lottery==0
(22 real changes made)

. replace payoff_round2=100-x12hat if x1hat<x2hat & Type==1 & lottery==0
(496 real changes made)

. replace payoff_round2=100-x12hat if x1hat==x2hat & win<0.5 & Type==1 & lottery==0
(21 real changes made)

. replace payoff_round2=100-x2hat if x1hat>x2hat & Type==2 & lottery==0
(682 real changes made)

. replace payoff_round2=100-x2hat if x1hat==x2hat & win>=0.5 &  Type==2 & lottery==0
(28 real changes made)

. replace payoff_round2=payoff2 if lottery==1
(2,502 real changes made)

. 
. ***Equilibrium flexibility***
. gen eq_flexibility=0

. replace eq_flexibility=36.72 if alpha==0.25 & lottery==0
(1,280 real changes made)

. replace eq_flexibility=91.41 if alpha==0.75 & lottery==0
(1,280 real changes made)

. 
end of do-file

. 
. *keep if changehat==1
. 
. *Period >10 & <=20 & Period >30
. *drop if part==3 & Period<=10
. *drop if part==4 & Period<=30
. 
. keep if contestperiod==1
(0 observations deleted)

. keep if lottery==1
(2,560 observations deleted)

. keep if Type==1
(1,280 observations deleted)

. sum match2

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      match2 |      1,280     .046875    .2114537          0          1

. 
. *gen direction=0
. *replace direction=1 if diff_br_1>diff_br_2
. *replace direction=1 if  diff_br_1==diff_br_2 & diff_br_1==0
. 
. gen outspend2=0

. replace outspend2=1 if x12hat>=x2hat
(927 real changes made)

. sum outspend2

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
   outspend2 |      1,280    .7242188    .4470818          0          1

. gen slightoutspend2=0

. replace slightoutspend2=1 if x12hat-x2hat>=0.01 
(796 real changes made)

. replace slightoutspend2=0 if x12hat-x2hat>5
(551 real changes made)

. sum slightoutspend2

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
slightouts~2 |      1,280    .1914063    .3935618          0          1

. 
. gen sqrtx2hat=sqrt(x2hat)

. gen x2hatsq=x2hat*x2hat

. 
. egen xjowbar=mean(xjow)

. 
. *xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25, fe i(subjectid)
. *est store fixed
. *xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25, re i(subjectid)
. *hausman fixed ., sigmamore
. 
. *IN THE PAPER - JUNE 2021
. *alpha=0.25
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25, i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        640
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.1541                                         min =          5
     Between = 0.0050                                         avg =       10.0
     Overall = 0.0905                                         max =         16

                                                Wald chi2(3)      =      58.02
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.5496476   .1381015    -3.98   0.000    -.8203214   -.2789737
   sqrtx2hat |   8.503715   1.432925     5.93   0.000     5.695233     11.3122
         inv |    8.08702   6.851729     1.18   0.238    -5.342123    21.51616
       _cons |   16.23312   4.363813     3.72   0.000     7.680207    24.78604
-------------+----------------------------------------------------------------
     sigma_u |  19.974798
     sigma_e |  26.665094
         rho |  .35944634   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.25, vce(cluster subjectid)
. est store A

. *predict xbr25 if alpha==0.25
. gen xbr25=_b[_cons]+_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr25=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. *alpha=0.75
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.75,  i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        640
Group variable: subjectid                       Number of groups  =         64

R-squared:                                      Obs per group:
     Within  = 0.2254                                         min =          4
     Between = 0.1085                                         avg =       10.0
     Overall = 0.1848                                         max =         17

                                                Wald chi2(3)      =     254.55
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.7994133   .1344883    -5.94   0.000    -1.063005   -.5358212
   sqrtx2hat |    11.4271   1.245723     9.17   0.000     8.985531    13.86867
         inv |   17.98433   1.531107    11.75   0.000     14.98342    20.98525
       _cons |   11.77709   4.983728     2.36   0.018     2.009159    21.54501
-------------+----------------------------------------------------------------
     sigma_u |  19.466571
     sigma_e |   25.60477
         rho |  .36629143   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store B

. *predict xbr75 if alpha==0.75
. gen xbr75=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.25 & changehat==1,  i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        434
Group variable: subjectid                       Number of groups  =         60

R-squared:                                      Obs per group:
     Within  = 0.2216                                         min =          1
     Between = 0.2036                                         avg =        7.2
     Overall = 0.1870                                         max =         15

                                                Wald chi2(3)      =     109.89
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.6214736   .2528202    -2.46   0.014    -1.116992   -.1259551
   sqrtx2hat |   10.16473   2.343644     4.34   0.000     5.571275    14.75819
         inv |   9.185786   8.942919     1.03   0.304    -8.342014    26.71359
       _cons |   8.094571   4.665199     1.74   0.083     -1.04905    17.23819
-------------+----------------------------------------------------------------
     sigma_u |  18.754565
     sigma_e |  26.827845
         rho |  .32827302   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store C

. *predict xbr75 if alpha==0.75
. gen xbr25_rev=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. xtreg x12hat x2hat sqrtx2hat inv if alpha==0.75 & changehat==1,  i(subjectid) vce(cluster sessionid)

Random-effects GLS regression                   Number of obs     =        476
Group variable: subjectid                       Number of groups  =         63

R-squared:                                      Obs per group:
     Within  = 0.2665                                         min =          1
     Between = 0.2733                                         avg =        7.6
     Overall = 0.2384                                         max =         13

                                                Wald chi2(3)      =     219.70
corr(u_i, X) = 0 (assumed)                      Prob > chi2       =     0.0000

                              (Std. err. adjusted for 8 clusters in sessionid)
------------------------------------------------------------------------------
             |               Robust
      x12hat | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
       x2hat |  -.6550246   .1310692    -5.00   0.000    -.9119155   -.3981336
   sqrtx2hat |   10.76415   1.085404     9.92   0.000     8.636801    12.89151
         inv |   11.99457   3.535731     3.39   0.001     5.064662    18.92447
       _cons |   10.57784   5.153371     2.05   0.040     .4774191    20.67826
-------------+----------------------------------------------------------------
     sigma_u |   18.59713
     sigma_e |  24.950564
         rho |  .35714479   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. *reg x12hat x2hat x2hatsq inv if alpha==0.75, vce(cluster subjectid)
. est store D

. *predict xbr75 if alpha==0.75
. gen xbr75_rev=_b[x2hat]*x2hat+_b[sqrtx2hat]*sqrtx2hat

. *gen xbr75=_b[_cons]+_b[x2hat]*x2hat+_b[x2hatsq]*x2hatsq
. 
. 
. esttab A B C D using table8.doc, ///
> se keep(x2hat sqrtx2hat inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
(output written to table8.doc)

. esttab A B C D using table8.doc, ///
> se keep(x2hat sqrtx2hat inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
(output written to table8.doc)

. *se keep(x2hat  x2hatsq inv _cons) replace f starlevels(* 0.1 ** 0.05 *** 0.01) stats(N r2)
. log cl
      name:  <unnamed>
       log:  C:\Users\joshu\OneDrive\Documents\GitHub\ExperimentalEcon\proj2\Replication.log
  log type:  text
 closed on:   8 Dec 2023, 07:38:25
-------------------------------------------------------------------------------------------------------------
